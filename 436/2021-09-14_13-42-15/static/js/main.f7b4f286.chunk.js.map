{"version":3,"sources":["types.ts","redux/mainMenuSlice.ts","config.ts","redux/finishSlice.ts","util/utilityFunctions.ts","cssStyles.tsx","util/client.js","redux/videoSlice.ts","i18n/config.tsx","main/MainMenu.tsx","globalKeys.ts","redux/metadataSlice.ts","redux/errorSlice.ts","main/Video.tsx","util/waveform.js","main/Timeline.tsx","main/CuttingActions.tsx","main/Metadata.tsx","main/TrackSelection.tsx","main/FinishMenu.tsx","redux/workflowPostSlice.ts","main/Save.tsx","redux/endSlice.ts","main/Discard.tsx","redux/workflowPostAndProcessSlice.ts","main/WorkflowConfiguration.tsx","main/WorkflowSelection.tsx","main/Finish.tsx","main/KeyboardControls.tsx","main/MainContent.tsx","main/TheEnd.tsx","main/Error.tsx","main/Landing.tsx","main/Body.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["MainMenuStateNames","configFileSettings","urlParameterSettings","settings","initialState","value","cutting","mainMenuSlice","createSlice","name","reducers","setState","state","action","payload","actions","selectMainMenuState","mainMenuState","finishSlice","pageNumber","setPageNumber","selectFinishState","finishState","selectPageNumber","defaultSettings","mediaPackageId","undefined","opencast","url","window","location","origin","password","metadata","show","configureFields","trackSelection","thumbnail","init","a","loadContextSettings","then","result","validate","urlParams","URLSearchParams","search","rawUrlSettings","forEach","key","obj","startsWith","segments","split","slice","segment","length","merge","all","basepath","process","endsWith","settingsPath","REACT_APP_SETTINGS_PATH","base","fetch","response","console","warn","status","debug","ok","error","statusText","headers","get","parseToml","text","SyntaxError","allowParse","src","sourceDescription","schema","path","validateValue","validateObj","validation","newValue","e","out","newPath","SCHEMA","types","v","Error","catalogName","fieldName","attributeName","string","boolean","objectsWithinObjects","b","deepmerge","arrayMerge","array","flexGapIsSupported","destinationArray","sourceArray","options","roundToDecimalPlace","num","decimalPlace","decimalFactor","Math","pow","round","Number","EPSILON","convertMsToReadableString","ms","hours","Date","toISOString","substr","minutes","seconds","parseInt","push","join","checkFlexGapSupport","flex","document","createElement","style","display","flexDirection","rowGap","position","appendChild","body","scrollHeight","parentNode","removeChild","GlobalStyle","styles","globalStyle","css","emotionNormalize","backgroundColor","fontSize","minHeight","flexGapReplacementStyle","flexGapValue","flexDirectionIsRow","half","quarter","gap","marginTop","marginBottom","marginRight","marginLeft","basicButtonStyle","borderRadius","cursor","transitionDuration","transitionProperty","transform","justifyContent","alignItems","textAlign","deactivatedButtonStyle","opacity","nagivationButtonStyle","backOrContinueStyle","ariaLive","errorBoxStyle","errorStatus","borderColor","borderStyle","fontWeight","padding","client","endpoint","customConfig","authHeaders","encoded","btoa","unescape","encodeURIComponent","config","method","JSON","stringify","includes","data","parse","Promise","reject","message","post","isPlaying","isPlayPreview","currentlyAt","id","nanoid","start","end","deleted","tracks","activeSegmentIndex","selectedWorkflowIndex","previewTriggered","clickTriggered","aspectRatios","hasChanges","videoURLs","videoCount","duration","title","presenters","workflows","fetchVideoInformation","createAsyncThunk","updateCurrentlyAt","milliseconds","updateActiveSegment","skipDeletedSegments","videoSlice","setTrackEnabled","track","audio_stream","enabled","video_stream","setIsPlaying","setIsPlayPreview","setPreviewTriggered","setClickTriggered","setCurrentlyAt","setCurrentlyAtInSeconds","addSegment","setAspectRatio","dataKey","width","height","setHasChanges","cut","segmentA","segmentB","splice","markAsDeletedOrAlive","setSelectedWorkflowIndex","mergeLeft","mergeSegments","mergeRight","extraReducers","builder","addCase","pending","fulfilled","reduce","o","uri","parseSegments","sort","n1","n2","displayOrder","Array","rejected","findIndex","element","newSegments","mergeSegmentIndex","min","max","endTime","index","selectIsPlaying","videoState","selectIsPlayPreview","selectPreviewTriggered","selectClickTriggered","selectCurrentlyAt","selectCurrentlyAtInSeconds","selectSegments","selectActiveSegmentIndex","selectIsCurrentSegmentAlive","selectSelectedWorkflowIndex","selectVideoURL","selectVideoCount","selectDuration","selectDurationInSeconds","selectTitle","selectPresenters","selectTracks","selectWorkflows","selectAspectRatio","apply","map","minWidth","calculateTotalAspectRatio","resources","en","translation","i18n","use","initReactI18next","LanguageDetector","fallbackLng","MainMenuButton","iconName","stateName","bottomText","miniButton","dispatch","useDispatch","activeState","useSelector","onMenuItemClicked","finish","mainMenuButtonStyle","miniMenuButtonStyle","role","tabIndex","onClick","onKeyDown","event","icon","size","MainMenu","t","useTranslation","mainMenuStyle","borderRight","flexShrink","aria-label","faCut","faListUl","faFilm","faPhotoVideo","faSignOutAlt","faKeyboard","keyboardControls","groupCuttingView","groupCuttingViewScrubber","rewriteKeys","newKey","isMacOs","replace","cuttingKeyMap","i18next","sequence","group","delete","preview","play","scrubberKeyMap","left","sequences","right","increase","decrease","catalogs","postStatus","postError","fetchMetadata","postMetadata","_","getState","allStates","metadataState","metadataSlice","setFieldValue","catalogIndex","fields","fieldIndex","setFieldReadonly","readOnly","selectCatalogs","selectGetStatus","selectGetError","selectPostStatus","selectPostError","selectTitleFromEpisodeDc","catalog","flavor","field","errorSlice","errorMessage","errorDetails","setError","selectIsError","errorState","selectErrorMessage","selectErrorDetails","VideoPlayer","isPrimary","aspectRatio","ref","useRef","useState","ready","setReady","onProgressCallback","playedSeconds","onReadyCallback","current","getInternalPlayer","w","videoWidth","h","videoHeight","onEndedCallback","useEffect","seekTo","onErrorCallback","playerConfig","file","attributes","playerWrapper","paddingTop","reactPlayerStyle","playing","muted","onProgress","progressInterval","onReady","onEnded","onError","disablePictureInPicture","VideoControls","videoControlsRowStyle","leftSideBoxStyle","rightSideBoxStyle","PreviewMode","React","switchPlayPreview","preventDefault","stopPropagation","blur","handlers","keyEvent","previewModeStyle","switchIconStyle","hotkeyName","aria-checked","aria-hidden","keyMap","allowChanges","faToggleOn","faToggleOff","PlayButton","switchIsPlaying","faPause","faPlay","aria-pressed","TimeDisplay","VideoHeader","presenter_header","metadataTitle","titleStyle","titleStyleBold","Video","videoURLStatus","videoPlayers","i","videoAreaStyle","borderBottom","videoPlayerAreaStyle","Waveform","opts","this","audioContext","AudioContext","oCanvas","buffer","WIDTH","HEIGHT","channelData","waveformImage","audioBuffer","aveRMS","peakRMS","numberSamples","waveformType","drawWaveform","drawCanvasWaveform","setDimensions","samples","type","delegateToWorker","worker","media","generateWaveform","getAudioData","_completeFuncs","fn","svgPath","catch","log","_error","toString","onerror","Object","defineProperty","set","opt","svgLength","_errorFuncs","prototype","constructor","ocCtx","getContext","decodeAudioData","arraybuffer","resolve","res","rej","ArrayBuffer","Blob","reader","FileReader","onload","readAsArrayBuffer","audiobuffer","dropSamples","getChannelData","amp","fillStyle","fillRect","lineWidth","strokeStyle","sliceWidth","x","beginPath","moveTo","sample","y","lineTo","stroke","sqrt","aveDBs","toDataURL","requestedLength","divider","filter","Worker","addEventListener","workerCommunication","bind","postMessage","setSVGpath","removeEventListener","terminate","len","createElementNS","setAttribute","oncomplete","Scrubber","timelineWidth","controlledPosition","setControlledPosition","isGrabbed","setIsGrabbed","wasPlayingWhenGrabbed","setWasPlayingWhenGrabbed","keyboardJumpDelta","setKeyboardJumpDelta","wasCurrentlyAtRef","nodeRef","updateXPos","scrubberStyle","zIndex","boxShadow","scrubberDragHandleStyle","background","borderTop","borderLeft","content","top","scrubberDragHandleIconStyle","onDrag","onStart","onStop","axis","bounds","aria-grabbed","currentTime","segmentStatus","moveLeft","moveRight","faBars","SegmentsList","segmentsStyle","active","borderWidth","boxSizing","Waveforms","images","setImages","waveformWorkerError","setWaveformWorkerError","waveformDisplayTestStyle","waveformsProcessed","videoURL","_index","blob","xhr","XMLHttpRequest","open","responseType","waveformWorker","File","image","numSamples","send","alt","faSpinner","spin","Timeline","useResizeObserver","timelineStyle","onMouseDown","rect","currentTarget","getBoundingClientRect","offsetX","clientX","setCurrentlyAtToClick","cuttingActionButtonStyle","CuttingActionsButton","actionName","actionHandler","tooltip","ariaLabelText","MarkAsDeletedButton","hotKeyName","isCurrentSegmentAlive","faTrash","faTrashRestore","CuttingActions","dispatchAction","cuttingStyle","blockStyle","faStepBackward","faStepForward","Metadata","getStatus","getError","keys","configureFieldsCatalog","readonly","metadataStyle","fieldStyle","fieldLabelStyle","fieldTypeStyle","isReadOnly","color","inputFieldTypeStyle","border","selectFieldTypeStyle","control","provided","menu","dateTimeTypeStyle","validateStyle","isError","lineHeight","helperHandleArrays","library","input","output","isArray","subArray","find","el","submitValue","getInitialValues","initValues","collection","generateReactSelectLibrary","searchValue","required","test","dateTimeValidator","date","dt","call","LuxonDateTime","fromJSDate","fromISO","isValid","getValidators","blurWithSubmit","onBlur","fieldId","catalogIndexString","substring","indexOf","parseValue","submitSingleField","returnValue","subValue","hasOwnProperty","__isNew__","toJSON","isNaN","getTime","onSubmit","values","formCatalogName","formFieldName","label","entries","descLabel","exists","replaceAll","generateComponent","isMulti","isClearable","format","disabled","dateFunsUtils","DateFnsUtils","showError","showErrorOnBlur","renderField","meta","htmlFor","other","generateComponentWithModifiedInput","touched","modified","valid","faCheck","renderCatalog","subscription","submitting","pristine","initialValues","render","handleSubmit","form","reset","Description","description","descriptionStyle","faInfoCircle","TrackItem","enabledCount","header","trackItemStyle","playerStyle","headerStyle","deleteStatus","deleteEnabled","deleteText","deleteTooltip","deleteIcon","handler","SelectButton","buttonStyle","margin","TrackSelection","trackItems","FinishMenuButton","buttonString","finishMenuButtonStyle","FinishMenu","finishMenuStyle","flexWrap","faSave","faFileExport","faTimesCircle","postVideoInformation","argument","convertSegments","workflowPostSlice","selected","selectStatus","workflowPostState","selectError","workflowPostAndProcessState","SaveButton","workflowStatus","metadataStatus","faExclamationCircle","save","videoSetHasChanges","metadataSetHasChanges","aria-live","aria-atomic","ariaSaveUpdate","Save","postWorkflowStatus","postMetadataStatus","postMetadataError","saveStyle","faChevronLeft","endSlice","setEnd","hasEnded","selectIsEnd","endState","selectEndState","DiscardButton","discard","Discard","cancelStyle","postVideoInformationWithWorkflow","workflow","workflowPostAndProcessSlice","SaveAndProcessButton","saveAndProcess","saveButtonStyle","WorkflowConfiguration","postAndProcessWorkflowStatus","postAndProcessError","workflowConfigurationStyle","faTools","WorkflowButton","workflowIndex","selectWorkflowIndex","workflowButtonStyle","WorkflowSelection","saveStatus","saveSelectStatus","saveError","saveSelectError","workflowSelectionStyle","workflowSelectionSelectionStyle","maxHeight","topTitle","topText","hasWorkflowButtons","nextButton","Trans","i18nKey","PageButton","onPageChange","pageButtonStyle","Finish","pageZeroStyle","pageOneStyle","pageTwoStyle","Group","groupStyle","headingStyle","entry","params","Entry","entryStyle","paddingBottom","labelStyle","sequenceStyle","alignSelf","singleKeyStyle","orStyle","arr","singleKey","KeyboardControls","getApplicationKeyMap","groupsStyle","groups","MainContent","videoChanged","videoHasChanges","metadataChanged","metadataHasChanges","useBeforeunload","stateActive","displayState","paddingRight","paddingLeft","trackSelectStyle","alignContent","finishStyle","keyboardControlsStyle","defaultStyle","StartOverButton","reloadPage","reload","TheEnd","theEndStyle","faCheckCircle","detailsStyle","faFrown","Landing","landingStyle","href","Body","isEnd","bodyStyle","Fragment","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","mainMenuStateReducer","finishStateReducer","videoReducer","workflowPostReducer","workflowPostAndProcessReducer","endReducer","metadataReducer","errorReducer","initialize","race","setTimeout","ReactDOM","StrictMode","store","utils","getElementById"],"mappings":"kxPAqCYA,E,iGAAAA,K,kCAAAA,E,oCAAAA,E,+CAAAA,E,sCAAAA,E,gCAAAA,E,sDAAAA,M,KC7BZ,ICkEIC,EACAC,EACOC,EDpELC,EAAyB,CAC7BC,MAAOL,EAAmBM,SAMfC,EAAgBC,YAAY,CACvCC,KAAM,gBACNL,eACAM,SAAU,CACRC,SAAU,SAACC,EAAOC,GAChBD,EAAMP,MAAQQ,EAAOC,YAKZH,EAAcJ,EAAcQ,QAA5BJ,SAKFK,EAAsB,SAACJ,GAAD,OAA8DA,EAAMK,cAAcZ,OAEtGE,IAAf,QEjBaW,EAAcV,YAAY,CACrCC,KAAM,cACNL,aAV2B,CAC3BC,MAAO,mBACPc,WAAY,GASZT,SAAU,CACRC,SAAU,SAACC,EAAOC,GAChBD,EAAMP,MAAQQ,EAAOC,SAEvBM,cAAe,SAACR,EAAOC,GACrBD,EAAMO,WAAaN,EAAOC,Y,EAMWI,EAAYH,QAAxCJ,E,EAAAA,SAAUS,E,EAAAA,cAGZC,EAAoB,SAACT,GAAD,OAA0DA,EAAMU,YAAYjB,OAChGkB,EAAmB,SAACX,GAAD,OAAoEA,EAAMU,YAAYH,YAEvGD,IAAf,Q,0DDqBIM,EAA6B,CAC/BC,oBAAgBC,EAChBC,SAAU,CACRC,IAAKC,OAAOC,SAASC,OACrBtB,UAAMiB,EACNM,cAAUN,GAEZO,SAAU,CACRC,MAAM,EACNC,qBAAiBT,GAEnBU,eAAgB,CACdF,MAAM,GAERG,UAAW,CACTH,MAAM,IAcGI,EAAI,uCAAG,8BAAAC,EAAA,sEAEZC,IAAsBC,MAAK,SAACC,GAChCzC,EAAqB0C,EAASD,GAAQ,EAxEvB,aAwE0C,gCAHzC,OAOdE,EAAY,IAAIC,gBAAgBhB,OAAOC,SAASgB,QAEhDC,EAAiB,GACrBH,EAAUI,SAAQ,SAAC3C,EAAO4C,GAGxB,IAAIC,EAA2BH,EAC/B,IAAIE,EAAIE,WAAW,aAAnB,CAGA,IAAMC,EAAWH,EAAII,MAAM,KAC3BD,EAASE,MAAM,GAAI,GAAGN,SAAQ,SAACO,GACvBA,KAAWL,IACfA,EAAIK,GAAW,IAEjBL,EAAMA,EAAIK,MAEZL,EAAIE,EAASA,EAASI,OAAS,IAAMnD,MAGvCH,EAAuByC,EAASI,GAAgB,EA/FlC,UA+FiD,8BAG/D5C,EAAWsD,EAAMC,IAAI,CAAClC,EAAiBvB,EAAoBC,IA9BzC,2CAAH,qDAoCXsC,EAAmB,uCAAG,sCAAAD,EAAA,6DAGtBoB,EAAWC,4BACDC,SAAS,OACrBF,GAAY,KAMRG,EAAeF,2JAAYG,yBAvHL,uBAwHtBC,EAAOF,EAAaX,WAAW,KAAO,GAAKQ,EAC3C/B,EAboB,UAaXC,OAAOC,SAASC,QAbL,OAaciC,GAbd,OAaqBF,GAbrB,kBAgBPG,MAAMrC,GAhBC,OAgBxBsC,EAhBwB,gEAkBxBC,QAAQC,KAAR,4BAAkCN,EAAlC,2BAAyE,MAAK,IAlBtD,kBAmBjB,MAnBiB,WAsBF,MAApBI,EAASG,OAtBa,wBAyBxBF,QAAQG,MAAR,WAAkBR,EAAlB,6BAzBwB,kBA0BjB,MA1BiB,WA2BdI,EAASK,GA3BK,wBA4BxBJ,QAAQK,MAAR,oBACeV,EADf,qBACwCI,EAASG,OADjD,YAC2DH,EAASO,aA7B5C,kBA+BjB,MA/BiB,uBAkCtBP,EAASQ,QAAQC,IAAI,uBAlCC,aAkCtB,EAAsCxB,WAAW,cAlC3B,wBAmCxBgB,QAAQC,KAAR,WAAiBN,EAAjB,2DAnCwB,kBAoCjB,MApCiB,8BAwCjBc,IAxCiB,UAwCDV,EAASW,OAxCR,sGA0CxBV,QAAQK,MAAR,2BAAkCV,EAAlC,qBACM,IAAIgB,YAAJ,2BAAoChB,EAApC,6BA3CkB,kEAAH,qDAuDnBnB,EAAW,SAACO,EAAiC6B,EAAqBC,EAAaC,GAGnF,IAAMtC,EAAW,SAACuC,EAAahC,EAAiCiC,GAC9D,MAAsB,oBAAXD,EACFE,EAAcF,EAAQhC,EAAKiC,GAE3BE,EAAYH,EAAQhC,EAAKiC,IAM9BC,EAAgB,SAACE,EAA6DjF,EAAmC8E,GACrH,IACE,IAAMI,EAAWD,EAAWjF,EAAO0E,EAAYC,GAC/C,YAAoBtD,IAAb6D,EAAyBlF,EAAQkF,EACxC,MAAOC,GAKP,OAJArB,QAAQC,KACN,iCAA0Be,EAA1B,cAAoCF,EAApC,yBAAsE5E,EAAtE,wBACOmF,EADP,gBAGK,OAMLH,EAAc,SAACH,EAAahC,EAAiCiC,GAGjE,IAAIM,EAA2B,GAC/B,IAAK,IAAMxC,KAAOC,EAAK,CACrB,IAAMwC,EAAUP,EAAI,UAAMA,EAAN,YAAclC,GAAQA,EAC1C,GAAIA,KAAOiC,EAAQ,CACjB,IAAM7E,EAAQsC,EAASuC,EAAOjC,GAAMC,EAAID,GAAMyC,GAIhC,OAAVrF,IACFoF,EAAIxC,GAAO5C,QAGb8D,QAAQC,KAAR,WACMsB,EADN,cACmBT,EADnB,6CAMJ,OAAOQ,GAGT,OAAO9C,EAASgD,EAAQzC,EAAK,KAKzB0C,EAAQ,CACZ,OAAU,SAACC,EAAQd,GACjB,GAAiB,kBAANc,EACT,MAAM,IAAIC,MAAM,mCAGpB,QAAW,SAACD,EAAWd,GACrB,GAAiB,mBAANc,EAAX,CAIA,GAAId,EAAY,CACd,GAAU,SAANc,EACF,OAAO,EAET,GAAU,UAANA,EACF,OAAO,EAET,MAAM,IAAIC,MAAM,8BAEhB,MAAM,IAAIA,MAAM,sBAGpB,qBAAwB,SAACD,EAAQd,GAC/B,IAAK,IAAIgB,KAAeF,EAAG,CACzB,GAA2B,kBAAhBE,EACT,MAAM,IAAID,MAAM,kCAElB,IAAK,IAAIE,KAAaH,EAAEE,GAAc,CACpC,GAAyB,kBAAdC,EACT,MAAM,IAAIF,MAAM,kCAElB,IAAK,IAAIG,KAAiBJ,EAAEE,GAAaC,GAAY,CACnD,GAA6B,kBAAlBC,EACT,MAAM,IAAIH,MAAM,kCAElB,GAAsB,SAAlBG,GAAgF,mBAA7CJ,EAAEE,GAAaC,GAAWC,GAC/D,MAAM,IAAIH,MAAM,oBAElB,GAAsB,aAAlBG,GAAoF,mBAA7CJ,EAAEE,GAAaC,GAAWC,GACnE,MAAM,IAAIH,MAAM,yBAkBtBH,EAAS,CACblE,eAAgBmE,EAAMM,OACtBvE,SAAU,CACRC,IAAKgE,EAAMM,OACXzF,KAAMmF,EAAMM,OACZlE,SAAU4D,EAAMM,QAElBjE,SAAU,CACRC,KAAO0D,EAAMO,QACbhE,gBAAiByD,EAAMQ,sBAEzBhE,eAAgB,CACdF,KAAO0D,EAAMO,SAEf9D,UAAW,CACTH,KAAO0D,EAAMO,UAIX1C,EAAQ,SAAClB,EAAc8D,GAC3B,OAAOC,IAAU/D,EAAG8D,EAAG,CAAEE,gBAE3B9C,EAAMC,IAAM,SAAC8C,GAAD,OAAqBF,IAAU5C,IAAI8C,EAAO,CAAED,gBACxD,IEjRIE,EFiREF,EAAa,SAACG,EAAuBC,EAAkBC,GAA1C,OAA2DD,G,kBE1TjEE,EAAsB,SAACC,EAAaC,GAC/C,IAAIC,EAAgBC,KAAKC,IAAI,GAAIH,GACjC,OAAOE,KAAKE,OAAOL,EAAMM,OAAOC,SAAWL,GAAiBA,GASjDM,EAA4B,SAACC,GACxC,IAAIC,EAAQ,IAAIC,KAAMF,GAAU,GAAIG,cAAcC,OAAO,GAAI,GACzDC,EAAU,IAAIH,KAAMF,GAAU,GAAIG,cAAcC,OAAO,GAAI,GAC3DE,EAAU,IAAIJ,KAAMF,GAAU,GAAIG,cAAcC,OAAO,GAAI,GAE3DjF,EAAS,GAKb,OAJIoF,SAASN,GAAS,GAAK9E,EAAOqF,KAAKP,EAAQ,aAC3CM,SAASF,GAAW,GAAKE,SAASN,GAAS,IAAK9E,EAAOqF,KAAKH,EAAU,cAC1ElF,EAAOqF,KAAKF,EAAU,YAEfnF,EAAOsF,KAAK,KAqBd,SAASC,IAEf,QAA2BvG,IAAvB+E,EACH,OAAOA,EAIR,IAAMyB,EAAOC,SAASC,cAAc,OAqBpC,OApBAF,EAAKG,MAAMC,QAAU,OACrBJ,EAAKG,MAAME,cAAgB,SAC3BL,EAAKG,MAAMG,OAAS,MACpBN,EAAKG,MAAMI,SAAW,WAGtBP,EAAKQ,YAAYP,SAASC,cAAc,QACxCF,EAAKQ,YAAYP,SAASC,cAAc,QAGxCD,SAASQ,KAAKD,YAAYR,GAGzBzB,EAA2C,IAAtByB,EAAKU,aAGvBV,EAAKW,YACNX,EAAKW,WAAWC,YAAYZ,GAGxBzB,EC1DD,IAAMsC,EAAwB,WACnC,OACE,cAAC,SAAD,CAAQC,OAAQC,KAOPA,EAAcC,cAAI,CAC7BC,qBACAR,KAAM,CACJS,gBAAiB,OACjBC,SAAU,SAEVC,UAAW,UANe,OAgBjBC,EAA0B,SAACC,EAAsBC,GAE5D,IAAIC,EAAOF,EAAe,EACtBG,EAAUH,EAAe,EAE7B,OAAO,YAAC,eAGFvB,KAA0B,CAAC2B,IAAI,GAAD,OAAKJ,EAAL,SAE7BvB,KAAF,aAEC,KAAM,CACJ4B,UAAU,GAAD,OAAKF,EAAL,MACTG,aAAa,GAAD,OAAKH,EAAL,MACZI,YAAY,GAAD,OAAKL,EAAL,MACXM,WAAW,GAAD,OAAKN,EAAL,QAERD,GAAuB,CACzB,mBAAoB,CAClBO,WAAY,OAEd,gBAAiB,CACfD,YAAa,WAWZE,EAAmBf,cAAI,yBAClCgB,aAAc,OACdC,OAAQ,UAERC,mBAAoB,OACpBC,mBAAoB,YACpB,UAAW,CACTC,UAAW,cAEb,UAAW,CACTA,UAAW,cAEb,WAAY,CACVA,UAAW,cAGbhC,QAAS,OACTiC,eAAgB,SAChBC,WAAY,UACRjB,EAAwB,IAAI,IAnBC,IAoBjCkB,UAAW,WApBsB,OA0BtBC,GAAyBxB,cAAI,yBACxCgB,aAAc,OACdC,OAAQ,UACRQ,QAAS,MAETrC,QAAS,OACTiC,eAAgB,SAChBC,WAAY,UACRjB,EAAwB,IAAI,IARO,IASvCkB,UAAW,WAT4B,OAe5BG,GAAqB,uHAUrBC,GAAsB3B,cAAI,aACrCZ,QAAS,OACTC,cAAe,OACXgB,EAAwB,IAAI,IAHI,OASzBuB,GAAQ,8FAWRC,GAAgB,SAACC,GAC5B,OACE9B,cAAI,4BACG8B,GAAgB,CAAC1C,QAAS,SAD9B,IAED2C,YAAa,MACbC,YAAa,SACbC,WAAY,OACZC,QAAS,SALR,Q,kBCxIA,SAAeC,GAAtB,mC,8CAAO,WAAsBC,GAAtB,6CAAA/I,EAAA,8FAA4D,GAA1BoG,EAAlC,EAAkCA,KAAS4C,EAA3C,yBACC7G,EAAU,CAAE,eAAgB,oBAG9B8G,EAAc,GACdrL,EAASwB,SAASlB,MAAQN,EAASwB,SAASK,WACxCyJ,EAAUC,KAAKC,SAASC,mBAC5BzL,EAASwB,SAASlB,KAAO,IAAMN,EAASwB,SAASK,YAEnDwJ,EAAc,CAAE,cAAgB,SAAhB,OAA0BC,KAGtCI,EAZD,yBAaHC,OAAQnD,EAAO,OAAS,OACrB4C,GAdA,IAeH7G,QAAQ,uCACHA,GACA6G,EAAa7G,SACb8G,KAIH7C,IACFkD,EAAOlD,KAAOoD,KAAKC,UAAUrD,IAvB1B,kBA8Bc9G,OAAOoC,MAAMqH,EAAUO,GA9BrC,cA8BH3H,EA9BG,iBA+BUA,EAASW,OA/BnB,WA+BHA,EA/BG,QAiCCX,EAAStC,IAAIqK,SAAS,cAjCvB,uBAkCK,IAAInG,MAAM,0DAlCf,YAqCC5B,EAASK,GArCV,wBAsCa2H,EAAdrH,EAAKrB,OAAgBuI,KAAKI,MAAMtH,GAAe,GAtC9C,kBAuCMqH,GAvCN,cAyCG,IAAIpG,MAAM5B,EAASO,YAzCtB,2DA2CI2H,QAAQC,OAAOnI,EAASG,OAC3B,UAAYH,EAASG,OAAS,KAAOQ,EACrC,KAAIyH,UA7CL,2D,sBAkDPjB,GAAO1G,IAAM,SAAU2G,GAA8B,IAApBC,EAAmB,uDAAJ,GAC9C,OAAOF,GAAOC,EAAD,YAAC,eAAeC,GAAhB,IAA8BO,OAAQ,UAGrDT,GAAOkB,KAAO,SAAUjB,EAAU3C,GAA0B,IAApB4C,EAAmB,uDAAJ,GACrD,OAAOF,GAAOC,EAAD,YAAC,eAAeC,GAAhB,IAA8B5C,WClCtC,IAAMvI,GAAyC,CACpDoM,WAAW,EACXC,eAAe,EACfC,YAAa,EACbtJ,SAAU,CAAC,CAACuJ,GAAIC,cAAUC,MAAO,EAAGC,IAAK,EAAGC,SAAS,IACrDC,OAAQ,GACRC,mBAAoB,EACpBC,sBAAuB,EACvBC,kBAAkB,EAClBC,gBAAgB,EAChBC,aAAc,GACdC,YAAY,EAEZC,UAAW,GACXC,WAAY,EACZC,SAAU,EACVC,MAAO,GACPC,WAAY,GACZC,UAAW,GAEXvJ,OAAQ,OACRG,WAAO9C,GAGImM,GAAwBC,YAAiB,8BAAD,sBAAgC,4BAAAvL,EAAA,yDAC9EpC,EAASsB,eADqE,sBAE3E,IAAIqE,MAAM,0BAFiE,uBAM5DuF,GAAO1G,IAAP,UAAcxE,EAASwB,SAASC,IAAhC,mBAA8CzB,EAASsB,eAAvD,eAN4D,cAM7EyC,EAN6E,yBAO5EA,GAP4E,4CAU/E6J,GAAoB,SAACnN,EAAcoN,GACvCpN,EAAM8L,YAAc7F,EAAoBmH,EAAc,GAElDpN,EAAM8L,YAAc,IACtB9L,EAAM8L,YAAc,GAGC,IAAnB9L,EAAM6M,UAAkB7M,EAAM6M,SAAW7M,EAAM8L,cACjD9L,EAAM8L,YAAc9L,EAAM6M,UAG5BQ,GAAoBrN,GACpBsN,GAAoBtN,IAOTuN,GAAa3N,YAAY,CACpCC,KAAM,aACNL,gBACAM,SAAU,CACR0N,gBAAiB,SAACxN,EAAOC,GAAY,IAAD,iBAChBD,EAAMoM,QADU,IAClC,2BAAgC,CAAC,IAAxBqB,EAAuB,QAC1BA,EAAM1B,KAAO9L,EAAOC,QAAQ6L,KAC9B0B,EAAMC,aAAaC,QAAU1N,EAAOC,QAAQyN,QAC5CF,EAAMG,aAAaD,QAAU1N,EAAOC,QAAQyN,UAJd,8BAOlC3N,EAAM0M,YAAa,GAErBmB,aAAc,SAAC7N,EAAOC,GACpBD,EAAM4L,UAAY3L,EAAOC,SAE3B4N,iBAAkB,SAAC9N,EAAOC,GACxBD,EAAM6L,cAAgB5L,EAAOC,SAE/B6N,oBAAqB,SAAC/N,EAAOC,GAC3BD,EAAMuM,iBAAmBtM,EAAOC,SAElC8N,kBAAmB,SAAChO,EAAOC,GACzBD,EAAMwM,eAAiBvM,EAAOC,SAEhC+N,eAAgB,SAACjO,EAAOC,GACtBkN,GAAkBnN,EAAOC,EAAOC,UAElCgO,wBAAyB,SAAClO,EAAOC,GAC/BkN,GAAkBnN,EAAOiG,EAAqC,IAAjBhG,EAAOC,QAAgB,KAEtEiO,WAAY,SAACnO,EAAOC,GAClBD,EAAMwC,SAAS2E,KAAKlH,EAAOC,UAE7BkO,eAAgB,SAACpO,EAAOC,GACtBD,EAAMyM,aAAaxM,EAAOC,QAAQmO,SAAW,CAACC,MAAOrO,EAAOC,QAAQoO,MAAOC,OAAQtO,EAAOC,QAAQqO,SAEpGC,cAAe,SAACxO,EAAOC,GACrBD,EAAM0M,WAAazM,EAAOC,SAE5BuO,IAAK,SAACzO,GAEJ,GAAIA,EAAMwC,SAASxC,EAAMqM,oBAAoBJ,QAAUjM,EAAM8L,aACzD9L,EAAMwC,SAASxC,EAAMqM,oBAAoBH,MAAQlM,EAAM8L,YACzD,OAAO9L,EAIT,IAAI0O,EAAsB,CAAC3C,GAAIC,cAC7BC,MAAOjM,EAAMwC,SAASxC,EAAMqM,oBAAoBJ,MAChDC,IAAKlM,EAAM8L,YACXK,QAASnM,EAAMwC,SAASxC,EAAMqM,oBAAoBF,SAChDwC,EAAsB,CAAC5C,GAAIC,cAC7BC,MAAOjM,EAAM8L,YACbI,IAAKlM,EAAMwC,SAASxC,EAAMqM,oBAAoBH,IAC9CC,QAASnM,EAAMwC,SAASxC,EAAMqM,oBAAoBF,SAGpDnM,EAAMwC,SAASoM,OAAO5O,EAAMqM,mBAAoB,EAAGqC,EAAUC,GAE7D3O,EAAM0M,YAAa,GAErBmC,qBAAsB,SAAC7O,GACrBA,EAAMwC,SAASxC,EAAMqM,oBAAoBF,SAAWnM,EAAMwC,SAASxC,EAAMqM,oBAAoBF,QAC7FnM,EAAM0M,YAAa,GAErBoC,yBAA0B,SAAC9O,EAAOC,GAChCD,EAAMsM,sBAAwBrM,EAAOC,SAEvC6O,UAAW,SAAC/O,GACVgP,GAAchP,EAAOA,EAAMqM,mBAAoBrM,EAAMqM,mBAAqB,GAC1ErM,EAAM0M,YAAa,GAErBuC,WAAY,SAACjP,GACXgP,GAAchP,EAAOA,EAAMqM,mBAAoBrM,EAAMqM,mBAAqB,GAC1ErM,EAAM0M,YAAa,IAIvBwC,cAAe,SAAAC,GACbA,EAAQC,QACNnC,GAAsBoC,SAAS,SAACrP,EAAOC,GACrCD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACNnC,GAAsBqC,WAAW,SAACtP,EAAOC,GACvCD,EAAMyD,OAAS,UAkBfzD,EAAM2M,UAAY1M,EAAOC,QAAQkM,OAAOmD,QAAO,SAAC5N,EAAa6N,GAAd,OAAsC7N,EAAEwF,KAAKqI,EAAEC,KAAM9N,IAAI,IACxG3B,EAAM4M,WAAa5M,EAAM2M,UAAU/J,OACnC5C,EAAM6M,SAAW5M,EAAOC,QAAQ2M,SAChC7M,EAAM8M,MAAQ7M,EAAOC,QAAQ4M,MAC7B9M,EAAM+M,WAAa,GACnB/M,EAAMwC,SAAWkN,GAAczP,EAAOC,QAAQsC,SAAUvC,EAAOC,QAAQ2M,UACvE7M,EAAMoM,OAASnM,EAAOC,QAAQkM,OAC9BpM,EAAMgN,UAAY/M,EAAOC,QAAQ8M,UAAU2C,MAAK,SAACC,EAA8BC,GAC7E,OAAOD,EAAGE,aAAeD,EAAGC,gBAG9B9P,EAAMyM,aAAe,IAAIsD,MAAM/P,EAAM4M,eAEzCuC,EAAQC,QACNnC,GAAsB+C,UAAU,SAAChQ,EAAOC,GACtCD,EAAMyD,OAAS,SACfzD,EAAM4D,MAAQ3D,EAAO2D,MAAM8H,cAS7B2B,GAAsB,SAACrN,GAC3BA,EAAMqM,mBAAqBrM,EAAMwC,SAASyN,WAAU,SAAAC,GAAO,OACzDA,EAAQjE,OAASjM,EAAM8L,aAAeoE,EAAQhE,KAAOlM,EAAM8L,eAE1D9L,EAAMqM,mBAAqB,IAC5BrM,EAAMqM,mBAAqB,IAOlBqD,GAAgB,SAAClN,EAAqBqK,GACjD,IAAIsD,EAA0B,GAS9B,OAPwB,IAApB3N,EAASI,QACXuN,EAAYhJ,KAAK,CAAC4E,GAAIC,cAAUC,MAAO,EAAGC,IAAKW,EAAUV,SAAS,IAGpE3J,EAASJ,SAAQ,SAACO,GAChBwN,EAAYhJ,KAAK,CAAC4E,GAAIC,cAAUC,MAAOtJ,EAAQsJ,MAAOC,IAAKvJ,EAAQuJ,IAAKC,QAASxJ,EAAQwJ,aAEpFgE,GAMHnB,GAAgB,SAAChP,EAA6BqM,EAA4B+D,GAE1EA,EAAoB,GAAKA,EAAoBpQ,EAAMwC,SAASI,OAAS,IAKzE5C,EAAMwC,SAAS6J,GAAoBJ,MAAQ5F,KAAKgK,IAC9CrQ,EAAMwC,SAAS6J,GAAoBJ,MAAOjM,EAAMwC,SAAS4N,GAAmBnE,OAC9EjM,EAAMwC,SAAS6J,GAAoBH,IAAM7F,KAAKiK,IAC5CtQ,EAAMwC,SAAS6J,GAAoBH,IAAKlM,EAAMwC,SAAS4N,GAAmBlE,KAG5ElM,EAAMwC,SAASoM,OAAOwB,EAAmB,GAGzC/C,GAAoBrN,KAGhBsN,GAAsB,SAACtN,GAC3B,GAAGA,EAAM4L,WAAa5L,EAAMwC,SAASxC,EAAMqM,oBAAoBF,SAAWnM,EAAM6L,cAAe,CAG3F,IAFA,IAAI0E,EAAUvQ,EAAMwC,SAASxC,EAAMqM,oBAAoBH,IAE9CsE,EAAQxQ,EAAMqM,mBAAoBmE,EAAQxQ,EAAMwC,SAASI,OAAQ4N,IAGxE,GAFAD,EAAUvQ,EAAMwC,SAASgO,GAAOtE,KAE3BlM,EAAMwC,SAASgO,GAAOrE,QAAS,CAElCoE,EAAUvQ,EAAMwC,SAASgO,GAAOvE,MAAQ,EACxC,MAIJjM,EAAM8L,YAAcyE,EACpBvQ,EAAMuM,kBAAmB,EACzBc,GAAoBrN,K,GAqBmBuN,GAAWpN,QAFzCqN,G,GAAAA,gBAAiBK,G,GAAAA,aAAcC,G,GAAAA,iBAAkBG,G,GAAAA,eAAgBC,G,GAAAA,wBAClEE,I,GAAZD,W,GAAYC,gBAAgBI,G,GAAAA,cAAeC,G,GAAAA,IAAKI,G,GAAAA,qBAAsBC,G,GAAAA,yBAA0BC,G,GAAAA,UAAWE,G,GAAAA,WAC3GlB,G,GAAAA,oBAAqBC,G,GAAAA,kBAIVyC,GAAkB,SAACzQ,GAAD,OAC7BA,EAAM0Q,WAAW9E,WACN+E,GAAsB,SAAC3Q,GAAD,OACjCA,EAAM0Q,WAAW7E,eACN+E,GAAyB,SAAC5Q,GAAD,OACpCA,EAAM0Q,WAAWnE,kBACNsE,GAAuB,SAAC7Q,GAAD,OAClCA,EAAM0Q,WAAWlE,gBACNsE,GAAoB,SAAC9Q,GAAD,OAC/BA,EAAM0Q,WAAW5E,aACNiF,GAA6B,SAAC/Q,GAAD,OACxCA,EAAM0Q,WAAW5E,YAAc,KACpBkF,GAAiB,SAAChR,GAAD,OAC5BA,EAAM0Q,WAAWlO,UACNyO,GAA2B,SAACjR,GAAD,OACtCA,EAAM0Q,WAAWrE,oBACN6E,GAA8B,SAAClR,GAAD,OAExCA,EAAM0Q,WAAWlO,SAASxC,EAAM0Q,WAAWrE,oBAAoBF,SACrDgF,GAA8B,SAACnR,GAAD,OAEzCA,EAAM0Q,WAAWpE,uBACNI,GAAa,SAAC1M,GAAD,OACxBA,EAAM0Q,WAAWhE,YAGN0E,GAAiB,SAACpR,GAAD,OAA8DA,EAAM0Q,WAAW/D,WAChG0E,GAAmB,SAACrR,GAAD,OAAgEA,EAAM0Q,WAAW9D,YACpG0E,GAAiB,SAACtR,GAAD,OAA4DA,EAAM0Q,WAAW7D,UAC9F0E,GAA0B,SAACvR,GAAD,OAA4DA,EAAM0Q,WAAW7D,SAAW,KAClH2E,GAAc,SAACxR,GAAD,OAAsDA,EAAM0Q,WAAW5D,OACrF2E,GAAmB,SAACzR,GAAD,OAAgEA,EAAM0Q,WAAW3D,YACpG2E,GAAe,SAAC1R,GAAD,OAAwDA,EAAM0Q,WAAWtE,QACxFuF,GAAkB,SAAC3R,GAAD,OAA8DA,EAAM0Q,WAAW1D,WACjG4E,GAAoB,SAAC5R,GAAD,OA/CC,SAACyM,GACjC,IAAI/D,EAAYrC,KAAKgK,IAAIwB,MAAMxL,KAAMoG,EAAaqF,KAAI,SAAStC,GAAK,OAAOA,EAAEjB,WACzEwD,EAAW1L,KAAKgK,IAAIwB,MAAMxL,KAAMoG,EAAaqF,KAAI,SAAStC,GAAK,OAAOA,EAAElB,UAE5E,OADAyD,GAAYtF,EAAa7J,OAClByD,KAAKgK,IAAK3H,EAAYqJ,EAAY,IAAM,QA4C/CC,CAA0BhS,EAAM0Q,WAAWjE,eAE9Bc,MAAf,Q,4BC1UM0E,GAAY,CAChBC,GAAI,CAAEC,Y,SAGRC,KACKC,IAAIC,MACJD,IAAIE,MACJ7Q,KAAK,CACFuQ,aACAO,YAAa,O,gHCgDfC,GAAoD,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,WAAoC,IAAxBC,kBAAwB,SAE7GC,EAAWC,cACXC,EAAcC,YAAY7S,GAE1B8S,EAAoB,WACxBJ,EAAS/S,EAAS4S,IAEdA,IAAcvT,EAAmB+T,QACnCL,EAAStS,EAAc,IAGzBsS,EAASjF,IAAa,KAWlBuF,EAAsB9K,cAAI,yBAC9BgG,MAAO,OACPC,OAAQ,SACJyE,IAAgBL,GAAc,CAChCnK,gBAAiB,SAJU,IAM7Bb,cAAe,WANc,OASzB0L,EAAsB/K,cAAI,yBAC9BgG,MAAO,OACPC,OAAQ,QACJyE,IAAgBL,GAAc,CAChCnK,gBAAiB,SAJU,IAM7Bb,cAAe,WANc,OAS/B,OACE,oBAAIW,IAAG,CAAGe,EA1BLwJ,EAGIQ,EAFAD,EAyBF,OACLE,KAAK,WAAWC,SAAU,EAC1BC,QAAUN,EACVO,UAAW,SAACC,GAAkE,UAAdA,EAAMrR,KACpE6Q,MAGF,cAAC,IAAD,CAAiBS,KAAMjB,EAAUkB,KAAMf,EAAa,KAAO,OAC1DD,GAAc,yBAAMA,KAKZiB,GAhGgB,WAAO,IAE5BC,EAAMC,eAAND,EAEFE,EAAgB1L,cAAI,aACxB2L,YAAa,iBACb3F,MAAO,QACP5G,QAAS,OACTC,cAAe,SACfuM,WAAY,EACZtK,WAAY,SACZY,QAAS,QACL7B,EAAwB,IAAI,IART,OAWzB,OACE,qBAAKL,IAAK0L,EAAeV,KAAK,aAAaa,aAAYL,EAAE,0BACvD,cAAC,GAAD,CAAgBpB,SAAU0B,IAAOzB,UAAWvT,EAAmBM,QAASkT,WAAYkB,EAAE1U,EAAmBM,SAAUmT,YAAY,IAC9HtT,EAAS8B,SAASC,MAAQ,cAAC,GAAD,CAAgBoR,SAAU2B,IAAU1B,UAAWvT,EAAmBiC,SAAUuR,WAAYkB,EAAE1U,EAAmBiC,UAAWwR,YAAY,IAC9JtT,EAASiC,eAAeF,MAAQ,cAAC,GAAD,CAAgBoR,SAAU4B,IAAQ3B,UAAWvT,EAAmBoC,eAAgBoR,WAAYkB,EAAE1U,EAAmBoC,gBAAiBqR,YAAY,IAC9KtT,EAASkC,UAAUH,MAAQ,cAAC,GAAD,CAAgBoR,SAAU6B,IAAc5B,UAAWvT,EAAmBqC,UAAWmR,WAAYkB,EAAE1U,EAAmBqC,WAAYoR,YAAY,IACtK,cAAC,GAAD,CAAgBH,SAAU8B,IAAc7B,UAAWvT,EAAmB+T,OAAQP,WAAYkB,EAAE1U,EAAmB+T,QAASN,YAAY,IAEpI,qBAAKvK,IAAG,IACN,cAAC,GAAD,CAAgBoK,SAAU+B,IAAY9B,UAAWvT,EAAmBsV,iBAAkB9B,WAAY,GAAIC,YAAY,O,gDCrCpH8B,GAAmB,eACnBC,GAA2B,0BAK3BC,GAAc,SAACxS,GACnB,IAAIyS,EAASzS,EAKb,OAJI0S,aACFD,EAASA,EAAOE,QAAQ,MAAO,WAG1BF,GAMIG,GAAwB,CACnCxG,IAAK,CACH5O,KAAMqV,KAAQpB,EAAE,6BAChBqB,SAAUN,GAAY,iBACtB5U,OAAQ,UACRmV,MAAOT,IAETU,OAAQ,CACNxV,KAAMqV,KAAQpB,EAAE,gCAChBqB,SAAUN,GAAY,iBACtB5U,OAAQ,UACRmV,MAAOT,IAET5F,UAAW,CACTlP,KAAMqV,KAAQpB,EAAE,mCAChBqB,SAAUN,GAAY,iBACtB5U,OAAQ,UACRmV,MAAOT,IAET1F,WAAY,CACVpP,KAAMqV,KAAQpB,EAAE,oCAChBqB,SAAUN,GAAY,iBACtB5U,OAAQ,UACRmV,MAAOT,IAETW,QAAS,CACPzV,KAAMqV,KAAQpB,EAAE,uBAChBqB,SAAUN,GAAY,iBACtB5U,OAAQ,UACRmV,MAAOT,IAETY,KAAM,CACJ1V,KAAMqV,KAAQpB,EAAE,oCAChBqB,SAAUN,GAAY,SACtB5U,OAAQ,UACRmV,MAAOT,KAOEa,GAAyB,CACpCC,KAAM,CACJ5V,KAAMqV,KAAQpB,EAAE,iCAEhBqB,SAAUN,GAAY,iBACtBa,UAAW,CAACb,GAAY,iBAAkB,aAC1C5U,OAAQ,UACRmV,MAAOR,IAETe,MAAO,CACL9V,KAAMqV,KAAQpB,EAAE,kCAEhBqB,SAAUN,GAAY,iBACtBa,UAAW,CAACb,GAAY,iBAAkB,cAC1C5U,OAAQ,UACRmV,MAAOR,IAETgB,SAAU,CACR/V,KAAMqV,KAAQpB,EAAE,oCAEhBqB,SAAUN,GAAY,iBACtBa,UAAW,CAACb,GAAY,iBAAkB,WAC1C5U,OAAQ,UACRmV,MAAOR,IAETiB,SAAU,CACRhW,KAAMqV,KAAQpB,EAAE,qCAEhBqB,SAAUN,GAAY,iBACtBa,UAAW,CAACb,GAAY,iBAAkB,aAC1C5U,OAAQ,UACRmV,MAAOR,KC5CLpV,GAA+D,CACnEsW,SAAU,GACVpJ,YAAY,EAEZjJ,OAAQ,OACRG,WAAO9C,EAEPiV,WAAY,OACZC,eAAWlV,GAGAmV,GAAgB/I,YAAiB,yBAAD,sBAA2B,4BAAAvL,EAAA,yDACjEpC,EAASsB,eADwD,sBAE9D,IAAIqE,MAAM,0BAFoD,uBAK/CuF,GAAO1G,IAAP,UAAcxE,EAASwB,SAASC,IAAhC,mBAA8CzB,EAASsB,eAAvD,mBAL+C,cAKhEyC,EALgE,yBAM/DA,GAN+D,4CAS3D4S,GAAehJ,YAAiB,wBAAD,uCAA0B,WAAOiJ,EAAP,sBAAAxU,EAAA,yDAAYyU,EAAZ,EAAYA,SAC3E7W,EAASsB,eADsD,sBAE5D,IAAIqE,MAAM,0BAFkD,cAM9DmR,EAAYD,IANkD,SAQ7C3L,GAAOkB,KAAP,UAAepM,EAASwB,SAASC,IAAjC,mBAA+CzB,EAASsB,eAAxD,kBACrBwV,EAAUC,cAAcR,UAT0C,cAQ9DxS,EAR8D,yBAY7DA,GAZ6D,2CAA1B,yDAkBtCiT,GAAgB3W,YAAY,CAChCC,KAAM,gBACNL,gBACAM,SAAU,CACR0W,cAAe,SAACxW,EAAOC,GACrBD,EAAM8V,SAAS7V,EAAOC,QAAQuW,cAAcC,OAAOzW,EAAOC,QAAQyW,YAAYlX,MAAQQ,EAAOC,QAAQT,MACrGO,EAAM0M,YAAa,GAErBkK,iBAAkB,SAAC5W,EAAOC,GACxBD,EAAM8V,SAAS7V,EAAOC,QAAQuW,cAAcC,OAAOzW,EAAOC,QAAQyW,YAAYE,SAAW5W,EAAOC,QAAQT,OAE1G+O,cAAe,SAACxO,EAAOC,GACrBD,EAAM0M,WAAazM,EAAOC,UAG9BgP,cAAe,SAAAC,GACbA,EAAQC,QACN6G,GAAc5G,SAAS,SAACrP,EAAOC,GAC7BD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACN6G,GAAc3G,WAAW,SAACtP,EAAOC,GAC/BD,EAAM8V,SAAW7V,EAAOC,QAExBF,EAAMyD,OAAS,aAEnB0L,EAAQC,QACN6G,GAAcjG,UAAU,SAAChQ,EAAOC,GAC9BD,EAAMyD,OAAS,SACfzD,EAAM4D,MAAQ3D,EAAO2D,MAAM8H,WAE/ByD,EAAQC,QACN8G,GAAa7G,SAAS,SAACrP,EAAOC,GAC5BD,EAAM+V,WAAa,aAEvB5G,EAAQC,QACN8G,GAAa5G,WAAW,SAACtP,EAAOC,GAC9BD,EAAM+V,WAAa,aAEvB5G,EAAQC,QACN8G,GAAalG,UAAU,SAAChQ,EAAOC,GAC7BD,EAAM+V,WAAa,SACnB/V,EAAMgW,UAAY/V,EAAO2D,MAAM8H,c,GAK2B6K,GAAcpW,QAAjEqW,G,GAAAA,cAAehI,G,GAAAA,cAAeoI,G,GAAAA,iBAEhCE,GAAiB,SAAC9W,GAAD,OAC5BA,EAAMsW,cAAcR,UACTpJ,GAAa,SAAC1M,GAAD,OACxBA,EAAMsW,cAAc5J,YACTqK,GAAkB,SAAC/W,GAAD,OAC7BA,EAAMsW,cAAc7S,QACTuT,GAAiB,SAAChX,GAAD,OAC5BA,EAAMsW,cAAc1S,OACTqT,GAAmB,SAACjX,GAAD,OAC9BA,EAAMsW,cAAcP,YACTmB,GAAkB,SAAClX,GAAD,OAC7BA,EAAMsW,cAAcN,WAETmB,GAA2B,SAACnX,GAAkE,IAAD,iBAClFA,EAAMsW,cAAcR,UAD8D,IACxG,2BAAoD,CAAC,IAA1CsB,EAAyC,QAClD,GAAuB,uBAAnBA,EAAQC,OAAiC,CAAC,IAAD,iBACvBD,EAAQV,QADe,IAC3C,2BAAoC,CAAC,IAA1BY,EAAyB,QAClC,GAAiB,UAAbA,EAAMvL,GACR,OAAOuL,EAAM7X,OAH0B,iCAFyD,gCAc3F8W,MAAf,QCzJagB,GAAa3X,YAAY,CACpCC,KAAM,aACNL,aAX0B,CAC1BoE,OAAO,EACP4T,aAAc,gBACdC,aAAc,IASd3X,SAAU,CACR4X,SAAU,SAAC1X,EAAOC,GAKhBD,EAAM4D,MAAQ3D,EAAOC,QAAQ0D,MAC7B5D,EAAMwX,aAAevX,EAAOC,QAAQsX,aACpCxX,EAAMyX,aAAexX,EAAOC,QAAQuX,iBAK3BC,GAAcH,GAAWpX,QAAzBuX,SAGFC,GAAgB,SAAC3X,GAAD,OAAuDA,EAAM4X,WAAWhU,OACxFiU,GAAqB,SAAC7X,GAAD,OAAqEA,EAAM4X,WAAWJ,cAC3GM,GAAqB,SAAC9X,GAAD,OAAqEA,EAAM4X,WAAWH,cAEzGF,MAAf,QCNA,I,4DAwEMQ,GAA4E,SAAC,GAA+B,IAA9B1J,EAA6B,EAA7BA,QAASrN,EAAoB,EAApBA,IAAKgX,EAAe,EAAfA,UAExFlE,EAAMC,eAAND,EAGFhB,EAAWC,cACXnH,EAAYqH,YAAYxC,IACxB3E,EAAcmH,YAAYlC,IAC1BlE,EAAYoG,YAAY1B,IACxBhF,EAAmB0G,YAAYrC,IAC/BpE,EAAiByG,YAAYpC,IAC7BoH,EAAchF,YAAYrB,IAG1BsG,EAAMC,iBAAoB,MAd+E,EAerFC,oBAAS,GAf4E,oBAexGC,EAfwG,KAejGC,EAfiG,OAgBhFF,oBAAS,GAhBuE,oBAgBxGR,EAhBwG,KAgB5FF,EAhB4F,KAmBzGa,EAAqB,SAACvY,GACtBgY,GAEE/R,EAAoB6F,EAAa,KAAO7F,EAAoBjG,EAAMwY,cAAe,IACnF1F,EAAS5E,GAAwBlO,EAAMwY,iBAMvCC,EAAkB,WAGtB,GAFAH,GAAS,GAELJ,EAAIQ,SAAWR,EAAIQ,QAAQC,oBAAqB,CAClD,IAAIC,EAAKV,EAAIQ,QAAQC,oBAAyCE,WAC1DC,EAAKZ,EAAIQ,QAAQC,oBAAyCI,YAC9DjG,EAAS1E,GAAe,CAACC,UAASC,MAAOsK,EAAGrK,OAAQuK,OAIlDE,EAAkB,WAClBhB,IACFlF,EAASjF,IAAa,IACtBiF,EAAS5E,GAAwBrB,MAIrCoM,qBAAU,YAEHrN,GAAasM,EAAIQ,SAAWL,GAC/BH,EAAIQ,QAAQQ,OAAOpN,EAAa,WAE9BS,GAAoB2L,EAAIQ,SAAWL,IACrCH,EAAIQ,QAAQQ,OAAOpN,EAAa,WAChCgH,EAAS/E,IAAoB,KAE3BvB,GAAkB0L,EAAIQ,SAAWL,IACnCH,EAAIQ,QAAQQ,OAAOpN,EAAa,WAChCgH,EAAS9E,IAAkB,QAI/B,IAAMmL,EAAkB,SAACvU,GACvB8S,GAAS,IAIL0B,EAAuB,CAC3BC,KAAM,CAAEC,WAAY,CAAE/F,SAAU,QAG5BpJ,EAAgB7B,cAAI,4BACnBsP,GAAe,CAAClQ,QAAS,SADP,IAEvB2C,YAAa,MACbC,YAAa,SACbC,WAAY,OACZC,QAAS,SALc,OAQnB+O,EAAgBjR,cAAI,CACxBT,SAAU,WACVyG,MAAO,OACPkL,WAAYvB,EAAc,KAHH,OAMnBwB,EAAgB,GAqCtB,OACE,gCA/BK7B,EAuBD,qBAAKtP,IAAK6B,EAAemJ,KAAK,SAC5B,0BAAOQ,EAAE,wBAAT,MAtBF,qBAAKxL,IAAKiR,GACR,cAAC,KAAD,CAAavY,IAAKA,EAChBsH,IAAKmR,EACLvB,IAAKA,EACL5J,MAAM,OACNC,OAAO,OACPmL,QAAS9N,EACT+N,OAAQ3B,EACR4B,WAAYrB,EACZsB,iBAAkB,IAClBC,QAASrB,EACTsB,QAASf,EACTgB,QAASb,EACT5F,UAAW,EACXtI,OAAQmO,EACRa,yBAAuB,O,4JAiC7BC,GAA8B,WAAO,IAEjCpG,EAAMC,eAAND,EAEFqG,EAAwB7R,cAAI,aAChCZ,QAAS,OACTC,cAAe,MACfgC,eAAgB,SAChBC,WAAY,SACZ0E,MAAO,OACP9D,QAAS,QACL7B,EAAwB,IAAI,IAPD,OAU3ByR,EAAgB,GAMhBC,EAAiB,GAMvB,OACE,qBAAK/R,IAAK6R,EAAuBrN,MAAOgH,EAAE,2BACxC,qBAAKxL,IAAK8R,GACR,cAAC,GAAD,OAEF,cAAC,GAAD,MACA,qBAAK9R,IAAK+R,GACR,cAAC,GAAD,S,qMASFC,GAA4B,WAAO,IAE/BxG,EAAMC,eAAND,EACFoE,EAAMqC,IAAMpC,OAAuB,MAGnCrF,EAAWC,cACXlH,EAAgBoH,YAAYtC,IAC5BtQ,EAAgB4S,YAAY7S,GAG5Boa,EAAoB,SAAC9G,EAAuCwE,GAMtD,IAAD,GALTxE,EAAM+G,iBACN/G,EAAMgH,kBACN5H,EAAShF,IAAkBjC,IAGvBqM,KACF,UAAAA,EAAIQ,eAAJ,SAAaiC,SAKXC,EAAW,CAEftF,QAAS,SAACuF,GAAkCA,GAAYL,EAAkBK,OAAU/Z,KAGhFga,EAAmBxS,cAAI,yBAC3BiB,OAAQ,UACR7B,QAAS,QACLiB,EAAwB,IAAI,IAHN,IAI1BgB,eAAgB,SAChBC,WAAY,WALc,OAQtBmR,EAAe,GASrB,OACE,qBAAKzS,IAAKwS,EACR5C,IAAKA,EACLpL,MAAOgH,EAAE,8BAA+B,CAAErQ,OAASoI,EAAgB,KAAO,MAAQmP,WAAY/F,GAAc2F,EAAStF,QAAQzV,QAC7HyT,KAAK,SAAS2H,eAAcpP,EAAe0H,SAAU,EAAG2H,eAAa,EACrE/G,aAAYL,EAAE,2BAA4B,CAAEkH,WAAY/F,GAAc2F,EAAStF,QAAQzV,QACvF2T,QAAU,SAACE,GAAD,OAA2B8G,EAAkB9G,EAAOwE,IAC9DzE,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KACrEmY,EAAkB9G,OAAO5S,KAE3B,cAAC,iBAAD,CAAeqa,OAAQlG,GAAe2F,SAAUva,IAAkBjB,EAAmBM,QAAUkb,EAAU,GAAIQ,cAAc,IAC3H,qBAAK9S,IAAG,IACLwL,EAAE,wBAEL,cAAC,IAAD,CAAiBxL,IAAKyS,EAAiBpH,KAAM9H,EAAgBwP,IAAaC,IAAa1H,KAAK,SAQ5F2H,GAA2B,WAAO,IAE9BzH,EAAMC,eAAND,EAGFhB,EAAWC,cACXnH,EAAYqH,YAAYxC,IACxBpQ,EAAgB4S,YAAY7S,GAG5Bob,EAAkB,SAAC9H,GACvBA,EAAM+G,iBACN3H,EAASjF,IAAcjC,KAInBgP,EAAW,CACfrF,KAAM,SAACsF,GAAkCA,GAAYW,EAAgBX,KAGvE,OACE,gCACA,cAAC,iBAAD,CAAeM,OAAQlG,GAAe2F,SAAUva,IAAkBjB,EAAmBM,QAAUkb,EAAU,GAAIQ,cAAc,IAC3H,cAAC,IAAD,CAAiB9S,IAAG,CAAGe,EAAH,2BAA+CsK,KAAM/H,EAAY6P,IAAUC,IAAQ9H,KAAK,KAC1G9G,MAAOgH,EAAE,4BACTR,KAAK,SAASqI,eAAc/P,EAAW2H,SAAU,EAAG2H,eAAa,EACjE/G,aAAYL,EAAE,4BACdN,QAAS,SAACE,GAA4B8H,EAAgB9H,IACtDD,UAAW,SAACC,GAAmD,UAAdA,EAAMrR,KACrDmZ,EAAgB9H,Q,mIAUlBkI,GAA4B,WAAO,IAE/B9H,EAAMC,eAAND,EAGFhI,EAAcmH,YAAYnC,IAC1BjE,EAAWoG,YAAY3B,IAE7B,OACE,qBAAKhJ,IAAG,IACN,sBAAMA,IAAG,GACPwE,MAAOgH,EAAE,+BACTP,SAAU,EAAGD,KAAK,QAAQa,aAAYL,EAAE,mBAAmB,KAAOpN,EAA0BoF,IAC3F,IAAIjF,KAAMiF,GAA4B,GAAIhF,cAAcC,OAAO,GAAI,KAErE,MACD,qBAAKwM,SAAU,EAAGY,aAAYL,EAAE,uBAAuB,KAAOpN,EAA0BmG,IACrF,IAAIhG,KAAMgG,GAAsB,GAAI/F,cAAcC,OAAO,GAAI,O,uQAShE8U,GAA4B,WAAO,IAuBnCC,EArBIhI,EAAMC,eAAND,EAEFhH,EAAQmG,YAAYzB,IACpBuK,EAAgB9I,YAAYkE,IAC5BpK,EAAakG,YAAYxB,IAEzBuK,EAAU,GASVC,EAAc,GAUpB,OAHIlP,GAAcA,EAAWnK,SACzBkZ,EAAmB,qBAAKxT,IAAK0T,EAAYlP,MAAOgH,EAAE,4BAA/B,MAA+D/G,EAAW3F,KAAK,QAGpG,qBAAK0F,MAAOgH,EAAE,sBAAuBxL,IAAG,IACtC,qBAAKA,IAAG,CAAG0T,EAAYC,EAAf,OAAgCnP,MAAOgH,EAAE,wBAC9CiI,GAAgCjP,GAElCgP,IAKQI,GAxaa,WAAO,IAEzBpI,EAAMC,eAAND,EAGFhB,EAAWC,cACXpG,EAAYsG,YAAY7B,IACxBxE,EAAaqG,YAAY5B,IACzB8K,EAAiBlJ,aAAY,SAACjT,GAAD,OAAmEA,EAAM0Q,WAAWjN,UACjHG,EAAQqP,aAAY,SAACjT,GAAD,OAAiEA,EAAM0Q,WAAW9M,SAG5GqV,qBAAU,WACe,SAAnBkD,EACFrJ,EAAS7F,MACmB,WAAnBkP,GACTrJ,EAAS4E,GAAS,CAAC9T,OAAO,EAAM4T,aAAc1D,EAAE,uBAAwB2D,aAAc7T,OAEvF,CAACuY,EAAgBrJ,EAAUlP,EAAOkQ,IAcrC,IADA,IAAMsI,EAA8B,GAC3BC,EAAI,EAAGA,EAAIzP,EAAYyP,IAE9BD,EAAajV,KAAK,cAAC,GAAD,CAAa9E,IAAKga,EAAGhO,QAASgO,EAAGrb,IAAK2L,EAAU0P,GAAIrE,UAAiB,IAANqE,KAInF,IAAMC,EAAiBhU,cAAI,CACzBZ,QAAS,OACT4G,MAAO,OACP3G,cAAe,SACfgC,eAAgB,SAChBC,WAAY,SACZY,QAAS,MACT+R,aAAc,kBAPU,OAUpBC,EAAuBlU,cAAI,CAC/BZ,QAAS,OACTC,cAAe,MACfgC,eAAgB,SAChBC,WAAY,SACZ0E,MAAO,QALuB,OAQhC,OACE,qBAAKhG,IAAKgU,GACR,cAAC,GAAD,MACA,qBAAKhU,IAAKkU,GACPJ,GAEH,cAAC,GAAD,Q,yCCxFC,SAASK,GAASC,GAAO,IAAD,OAC7BC,KAAKC,aAAe,IAAIC,KACxBF,KAAKG,QAAUvV,SAASC,cAAc,UACtCmV,KAAKI,OAAS,GACdJ,KAAKK,MAAQ,EACbL,KAAKM,OAAS,EACdN,KAAKO,YAAc,GACnBP,KAAKQ,cAAgB,GACrBR,KAAKS,YAAc,KAEnBT,KAAKU,OAAS,EACdV,KAAKW,QAAU,EAEfX,KAAKY,cAAgB,IACrBZ,KAAKa,aAAe,MACpBb,KAAKc,aAAed,KAAKe,mBAErBhB,EAAKpO,OAASoO,EAAKnO,QACrBoO,KAAKgB,cAAcjB,EAAKpO,MAAOoO,EAAKnO,QAElCmO,EAAKkB,UACPjB,KAAKY,cAAgBb,EAAKkB,SAExBlB,EAAKmB,MAAsB,QAAdnB,EAAKmB,OACpBlB,KAAKa,aAAe,MACpBb,KAAKc,aAAed,KAAKmB,iBACzBnB,KAAKoB,OAAS,MAEZrB,EAAKsB,OACPrB,KAAKsB,iBAAiBvB,EAAKsB,OACxBnc,MAAK,WACJ,EAAKqc,eACL,EAAKT,eACqB,QAAtB,EAAKD,cACPW,EAAe/b,SAAQ,SAAAgc,GACrBA,EAAG,EAAKjB,eAAiB,EAAKkB,QAAS,EAAKb,oBAIjDc,OAAM,SAAC1Z,GACNrB,QAAQgb,IAAI,oBAAsB3Z,GAClC,EAAK4Z,OAAS5Z,EAAE6Z,WAChB,EAAKC,QAAQtc,SAAQ,SAAAgc,GAAE,OAAIA,EAAGxZ,EAAE6Z,kBAItC,IAAIN,EAAiB,GACrBQ,OAAOC,eAAejC,KAAM,aAAc,CACxC5Y,IAAK,WACH,OAAOoa,GAETU,IAAK,SAAST,EAAIU,GAChB,GAAiB,mBAANV,EAAkB,CAC3B,GAAIzB,KAAKQ,eAAiBR,KAAK0B,QAE7B,YADAD,EAAGzB,KAAKQ,eAAiBR,KAAK0B,QAAS1B,KAAKoC,WAI9CZ,EAAehX,KAAKiX,OAK1B,IACIY,EAAc,GAClBL,OAAOC,eAAejC,KAAM,UAAW,CACrC5Y,IAAK,WACH,OAAOib,GAETH,IAAK,SAAST,EAAIU,GACC,mBAANV,GACLzB,KAAK6B,QAA0B,KAAhB7B,KAAK6B,OACtBJ,EATK,IAcTY,EAAY7X,KAAKiX,MAKvB3B,GAASwC,UAAY,CACnBC,YAAazC,GACbkB,cAAe,SAASrP,EAAOC,GAC7BoO,KAAKG,QAAQxO,MAAQA,EACrBqO,KAAKK,MAAQ1O,EACbqO,KAAKG,QAAQvO,OAASA,EACtBoO,KAAKM,OAAS1O,EACdoO,KAAKwC,MAAQxC,KAAKG,QAAQsC,WAAW,OAEvCC,gBAAiB,SAASC,GAAc,IAAD,OACrC,OAAO,IAAI9T,SAAQ,SAAC+T,EAAS9T,GAC3B,IAAID,SAAQ,SAACgU,EAAKC,GAChB,GAAIH,aAAuBI,YACzBF,EAAIF,QAED,GAAIA,aAAuBK,KAAM,CACpC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACdN,EAAII,EAAO9d,SAEb8d,EAAOG,kBAAkBT,OAG5Bzd,MAAK,SAAAkb,GACJ,EAAKH,aAAayC,gBAAgBtC,GAC/Blb,MAAK,SAAAme,GACJ,EAAKjD,OAASiD,EACdT,OAEDjB,OAAM,SAAA1Z,GACL6G,EAAO7G,SAGZ0Z,OAAM,SAAA1Z,GACL6G,EAAO7G,UAIbsZ,aAAc,SAASnB,GACrBA,EAASA,GAAUJ,KAAKI,OACxBJ,KAAKO,YAAcP,KAAKsD,YAAYlD,EAAOmD,eAAe,GAAIvD,KAAKY,gBAErEG,mBAAoB,SAASyC,GAAM,IAAD,OAChCA,EAAMA,GAAO,EACbxD,KAAKwC,MAAMiB,UAAY,YACvBzD,KAAKwC,MAAMkB,SAAS,EAAG,EAAG1D,KAAKK,MAAOL,KAAKM,QAC3CN,KAAKwC,MAAMmB,UAAY,EACvB3D,KAAKwC,MAAMoB,YAAc,QACzB,IAAIC,EAA0B,EAAb7D,KAAKK,MAAcL,KAAKO,YAAYta,OACjD6d,EAAI,EAER9D,KAAKwC,MAAMuB,YACX/D,KAAKwC,MAAMwB,OAAOF,EAAG9D,KAAKO,YAAY,GAAKP,KAAKM,OAAS,IAAQ,GAEjEN,KAAKO,YAAY9a,SAAQ,SAAAwe,GACvB,IAAI3b,EAAI2b,EAAST,EACbU,EAAI,EAAK5D,QAAU,EAAIhY,GAAK,EAChC,EAAKka,MAAM2B,OAAOL,EAAGI,GACrB,EAAKxD,QAAUuD,EAASA,EACxB,EAAKtD,QAAUjX,KAAKiK,IAAIsQ,EAASA,EAAQ,EAAKtD,SAC9CmD,GAAKD,KAEP7D,KAAKwC,MAAM2B,OAAOnE,KAAKK,MAAOL,KAAKM,OAAO,GAC1CN,KAAKwC,MAAM4B,SACXpE,KAAKU,OAAShX,KAAK2a,KAAKrE,KAAKU,OAASV,KAAKO,YAAYta,QACvD+Z,KAAKsE,OAAS,GAAK5a,KAAKkY,IAAI5B,KAAKU,QAAUhX,KAAKkY,IAAI,IACpD5B,KAAKQ,cAAgBR,KAAKG,QAAQoE,aAEpCjB,YAAa,SAAS3U,EAAM6V,GAC1B,IAAIC,EAAU/a,KAAKiK,IAAIpJ,SAASoE,EAAK1I,OAASue,GAAkB,GAChE,OAAO7V,EAAK+V,QAAO,SAACT,EAAQvE,GAAT,OAAeA,EAAI+E,IAAY,MAEpDnD,iBAAkB,SAASqB,GACzB,OAAO3C,KAAK0C,gBAAgBC,IAE9BxB,iBAAkB,WACXnB,KAAKoB,SACRpB,KAAKoB,OAAS,IAAIuD,OAAO,wBACzB3E,KAAKoB,OAAOwD,iBAAiB,UAAW5E,KAAK6E,oBAAoBC,KAAK9E,OAAO,GAC7EA,KAAKoB,OAAO2D,YAAY/E,KAAKO,eAGjCsE,oBAAqB,SAAS5c,GAC5B,OAAOA,EAAE0G,KAAKuS,MACZ,IAAK,OACHlB,KAAKgF,WAAW/c,EAAE0G,KAAK/G,KAAMK,EAAE0G,KAAK1I,QACpC+Z,KAAKoB,OAAO6D,oBAAoB,UAAWjF,KAAK6E,oBAAoBC,KAAK9E,OAAO,GAChFA,KAAKoB,OAAO8D,YACZlF,KAAKoB,OAAS,OAMpB4D,WAAY,SAASpd,EAAMud,GAAM,IAAD,OAC9BnF,KAAK0B,QAAU9W,SAASwa,gBAAgB,6BAA8B,QACtEpF,KAAKoC,UAAY+C,EAEjBnF,KAAK0B,QAAQ2D,aAAa,IAAKzd,GAC/BoY,KAAK0B,QAAQ2D,aAAa,gBAAiB,sBAC3CrF,KAAK0B,QAAQ2D,aAAa,eAAgB,SAE1CrF,KAAKsF,WAAW7f,SAAQ,SAAAgc,GAAE,OAAIA,EAAG,EAAKC,QAAS,EAAKU,gB,mNC1HlDmD,GAA8C,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE5CrO,EAAMC,eAAND,EAGFhB,EAAWC,cACXnH,EAAYqH,YAAYxC,IACxB3E,EAAcmH,YAAYnC,IAC1BjE,EAAWoG,YAAY3B,IACvBjF,EAAqB4G,YAAYhC,IACjCzO,EAAWyQ,YAAYjC,IACvB3Q,EAAgB4S,YAAY7S,GAXqC,EAcnBgY,mBAAS,CAACqI,EAAG,EAAEI,EAAG,IAdC,oBAchEuB,EAdgE,KAc5CC,EAd4C,OAerCjK,oBAAS,GAf4B,oBAehEkK,EAfgE,KAerDC,EAfqD,OAgBbnK,oBAAS,GAhBI,oBAgBhEoK,EAhBgE,KAgBzCC,EAhByC,OAiBrBrK,mBAAS,KAjBY,oBAiBhEsK,EAjBgE,KAiB7CC,EAjB6C,KAkBjEC,EAAoBzK,iBAAO,GAC3B0K,EAAUtI,IAAMpC,OAAO,MAG7Bc,qBAAU,WACLnN,IAAgB8W,EAAkBlK,SAAY4J,IAC/CQ,IACAF,EAAkBlK,QAAU5M,MAKhCmN,qBAAU,WACLnN,GAAee,GAChBwV,EAAsB,CAAC5B,EAAI3U,EAAce,EAAasV,EAAgBtB,EAAG,MAG1E,CAACsB,IAGJ,IAOMW,EAAa,WACjBT,EAAsB,CAAC5B,EAAI3U,EAAce,EAAasV,EAAgBtB,EAAG,KA+BrEjG,EAAW,CACfnF,KAAM,kBAAM3C,EAAS7E,GAAe5H,KAAKiK,IAAIxE,EAAc4W,EAAmB,MAC9E/M,MAAO,kBAAM7C,EAAS7E,GAAe5H,KAAKgK,IAAIvE,EAAc4W,EAAmB7V,MAC/E+I,SAAU,kBAAM+M,GAAqB,SAAAD,GAAiB,OAAIrc,KAAKgK,IAAwB,GAApBqS,EAAwB,SAC3F7M,SAAU,kBAAM8M,GAAqB,SAAAD,GAAiB,OAAIrc,KAAKiK,IAAIoS,EAAoB,GAAI,QAGvFK,EAAgBza,cAAI,CACxBE,gBAAiB,QACjB+F,OAAQ,QACRD,MAAO,MACPzG,SAAU,WACVmb,OAAQ,EACRC,UAAW,8BACXvb,QAAS,OACTC,cAAe,SACfgC,eAAgB,gBAChBC,WAAY,UAVW,OAanBsZ,EAA0B5a,cAAI,CAElC6a,WAAY,QACZzb,QAAS,eACT6G,OAAQ,OACR1G,SAAU,WACVyG,MAAO,OACP,UAAW,CACT8U,UAAW,mBACXC,WAAY,yBACZpP,YAAa,yBACbqP,QAAS,KACT/U,OAAQ,EACRkH,KAAM,EACN5N,SAAU,WACV0b,IAAK,OACLjV,MAAO,GAGT/E,OAAQ+Y,EAAY,WAAa,OACjC9Y,mBAAoB,OACpBC,mBAAoB,YACpB,UAAW,CACTC,UAAW,cAEb,WAAY,CACVA,UAAW,eA1BoB,OA8B7B8Z,EAA2B,GAWjC,OACE,cAAC,iBAAD,CAAerI,OAAQ3F,GAAgBoF,SAAUva,IAAkBjB,EAAmBM,QAAUkb,EAAU,GAAIQ,cAAc,GAC1H,cAAC,KAAD,CACEqI,OAvGmB,SAAC7e,EAAQiD,GAAkB,IAE3C4Y,EAAK5Y,EAAL4Y,EACP3N,EAAS7E,GAAgBwS,EAAI0B,EAAkBtV,KAqG3C6W,QA7Fc,WAClBnB,GAAa,GAGT3W,GACF6W,GAAyB,GACzB3P,EAASjF,IAAa,KAEtB4U,GAAyB,IAsFvBkB,OAlFa,SAAC/e,EAAQiD,GAAkB,IAErC4Y,EAAK5Y,EAAL4Y,EACP4B,EAAsB,CAAC5B,IAAGI,EAAG,IAC7B/N,EAAS7E,GAAgBwS,EAAI0B,EAAkBtV,IAE/C0V,GAAa,GAETC,GACF1P,EAASjF,IAAa,KA0EpB+V,KAAK,IACLC,OAAO,SACPhc,SAAUua,EACVS,QAASA,GAEP,qBAAK3K,IAAK2K,EAASva,IAAKya,GAEtB,qBAAKza,IAAK4a,EAAyBY,eAAcxB,EAC/CnO,aAAYL,EAAE,8BACH,CAACiQ,YAAard,EAA0BoF,GAAcnJ,QAAS0J,EAC9D2X,cAAgBxhB,EAAS6J,GAAoBF,QAAU,UAAY,QACnE8X,SAAUzO,GAAeoF,EAASnF,KAAK5V,MACvCqkB,UAAW1O,GAAeoF,EAASjF,MAAM9V,MACzC+V,SAAUJ,GAAeoF,EAAShF,SAAS/V,MAC3CgW,SAAUL,GAAeoF,EAAS/E,SAAShW,QACvD0T,SAAU,GACV,cAAC,IAAD,CAAiBjL,IAAKkb,EAA6B7P,KAAMwQ,IAAQvQ,KAAK,YAW9EwQ,GAAkD,SAAC,GAAoB,EAAnBjC,cAAoB,IAEpErO,EAAMC,eAAND,EAGFtR,EAAWyQ,YAAYjC,IACvBnE,EAAWoG,YAAY3B,IACvBjF,EAAqB4G,YAAYhC,IAuDjCoT,EAAgB/b,cAAI,CACxBZ,QAAS,OACTC,cAAe,MACf6R,WAAY,QAHW,OAMzB,OACE,qBAAKlR,IAAK+b,EAAevX,MAAM,YA/B7BtK,EAASsP,KAAK,SAACnP,EAAkB6N,GAAnB,OACZ,qBAAKnO,IAAKM,EAAQoJ,GAAIe,MAAOgH,EAAE,2BAA4B,CAACnR,QAAS6N,IACnE2D,aAAYL,EAAE,8BACH,CAACnR,QAAS6N,EACTwT,cAAgBrhB,EAAQwJ,QAAU,UAAY,QAC9CF,MAAOvF,EAA0B/D,EAAQsJ,OACzCC,IAAKxF,EAA0B/D,EAAQuJ,OACnDqH,SAAU,EACZjL,IAAG,cAAE,CACH6a,YAlCShX,EAkCWxJ,EAAQwJ,QAlCDmY,EAkCUjY,IAAuBmE,EAjC7DrE,GAAYmY,EAENnY,IAAYmY,EACf,uOAMInY,GAAWmY,EACd,uBACEnY,GAAWmY,EACd,2OADD,EAVE,wBAiCHhb,aAAc,MACdgB,YAAa+B,IAAuBmE,EAAQ,SAAW,QACvDnG,YAAa,QACbka,YAAa,MACbC,UAAW,aACXlW,OAAS3L,EAAQuJ,IAAMvJ,EAAQsJ,OAASY,EAAY,IAAM,IAC1D0B,OAAQ,QACRyU,OAAQ,GATP,SAjCO,IAAC7W,EAAkBmY,O,yCAiE/BG,GAA0B,WAAO,IAE7B3Q,EAAMC,eAAND,EAEFnH,EAAYsG,YAAY7B,IACxB+K,EAAiBlJ,aAAY,SAACjT,GAAD,OAAmEA,EAAM0Q,WAAWjN,UALnF,EAQR2U,mBAAmB,IARX,oBAQ7BsM,EAR6B,KAQrBC,EARqB,OASkBvM,oBAAkB,GATpC,oBAS7BwM,EAT6B,KASRC,EATQ,KAW9BC,EAA2Bxc,cAAI,yBACnCZ,QAAS,OACTC,cAAe,SACfE,SAAU,WACV8B,eAAgB,UACZ+a,EAAO9hB,QAAU,GAAM,CAACgH,WAAY,WALN,IAMlC0E,MAAO,OACPC,OAAQ,QACRiL,WAAY,SARsB,OAYpCP,qBAAW,WACT,GAAuB,YAAnBkD,EAA8B,CAChC,IAAMuI,EAAmB,GACrBK,EAA8B,EAGf,CAACpY,EAAU,IAEnBvK,SAAQ,SAAC4iB,EAAUC,EAAQrf,GAEpC,IAAIsf,EAAO,KACPC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOL,GAChBG,EAAIG,aAAe,OACnBH,EAAIrF,OAAS,WAEXoF,EAAOC,EAAI7hB,SACX,IAGMiiB,EAAuB,IAAI9I,GAAS,CAACoB,KAAM,MAAOvP,MAAO,OAAQC,OAAQ,MAAOqP,QAAS,IAAQI,MAH5F,IAAIwH,KAAK,CAACN,GAAOA,KAK5BK,EAAe7G,QAAU,SAAS9a,GAChCihB,GAAuB,GACvBthB,QAAQgb,IAAI,mCAAqC3a,IAInD2hB,EAAetD,WAAa,SAASwD,EAAYC,GAC/ChB,EAAOvd,KAAKse,KACZV,IAE2Bnf,EAAMhD,QAC/B+hB,EAAUD,KAKhBS,EAAIQ,aAGP,CAACxJ,EAAgBxP,IAyBpB,OACA,qBAAKrE,IAAKwc,GAtBJJ,EAAO9hB,OAAS,EAEhB8hB,EAAO5S,KAAI,SAAC2T,EAAOjV,GAAR,OACT,qBAAKnO,IAAKmO,EAAOoV,IAAI,WAAWxhB,IAAKqhB,GAAgB,GAAInd,IAAG,QAGvDsc,EAEP,yBAAM,mCAKN,gCACE,cAAC,IAAD,CAAiBjR,KAAMkS,IAAWC,MAAI,EAAClS,KAAK,OAC5C,yBAAME,EAAE,sCAaHiS,GA9XgB,WAG7B,IAAMjT,EAAWC,cACXlG,EAAWoG,YAAY3B,IAJM,EAMP0U,eAApB9N,EAN2B,EAM3BA,IAN2B,IAMtB5J,aANsB,MAMd,EANc,EAQ7B2X,EAAa,GAcnB,OACA,qBAAK/N,IAAKA,EAAK5P,IAAK2d,EAAenZ,MAAM,WAAWoZ,YAAa,SAAAthB,GAAC,OARpC,SAACA,GAC7B,IAAIuhB,EAAOvhB,EAAEwhB,cAAcC,wBACvBC,EAAU1hB,EAAE2hB,QAAUJ,EAAK1Q,KAC/B3C,EAAS9E,IAAkB,IAC3B8E,EAAS7E,GAAgBqY,EAAUhY,EAAUzB,IAIuB2Z,CAAsB5hB,KAC1F,cAAC,GAAD,CAAUud,cAAe7T,IACzB,qBAAKhG,IAAG,IACN,cAAC,GAAD,MACA,cAAC,GAAD,CAAc6Z,cAAe7T,OC2D7BmY,GAA2B,CAC/Bjc,QAAS,OACTyY,UAAW,+BAgBPyD,GAAgE,SAAC,GAA2E,IAA1EhU,EAAyE,EAAzEA,SAAUiU,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,cAAe3mB,EAAoC,EAApCA,OAAQ4mB,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cACtH5O,EAAMqC,IAAMpC,OAAuB,MACzC,OACE,qBAAK7P,IAAG,CAAGe,EAAkBod,GAArB,OACN3Z,MAAO+Z,EACP3O,IAAKA,EACL5E,KAAK,SAASC,SAAU,EAAGY,aAAY2S,EACvCtT,QAAU,SAACE,GAAD,OAA2BkT,EAAclT,EAAOzT,EAAQiY,IAClEzE,UAAW,SAACC,GAAmD,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1EukB,EAAclT,EAAOzT,OAAQa,KAG/B,cAAC,IAAD,CAAiB6S,KAAMjB,EAAUkB,KAAK,OACtC,0BAAO+S,KAcPI,GAA8D,SAAC,GAAyC,IAAxCH,EAAuC,EAAvCA,cAAe3mB,EAAwB,EAAxBA,OAAQ+mB,EAAgB,EAAhBA,WACnFlT,EAAMC,eAAND,EACFmT,EAAwBhU,YAAY/B,IACpCgH,EAAMqC,IAAMpC,OAAuB,MAEzC,OACE,qBAAK7P,IAAG,CAAGe,EAAkBod,GAArB,OACN3Z,MAAOgH,EAAE,wCAAyC,CAAEkH,WAAYgM,IAChE9O,IAAKA,EACL5E,KAAK,SAASC,SAAU,EACxBY,aAAYL,EAAE,6CAA8C,CAAEkH,WAAYgM,IAC1ExT,QAAS,SAACE,GAAD,OAA2BkT,EAAclT,EAAOzT,EAAQiY,IACjEzE,UAAW,SAACC,GAAmD,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1EukB,EAAclT,EAAOzT,OAAQa,KAG/B,cAAC,IAAD,CAAiB6S,KAAMsT,EAAwBC,IAAUC,IAAgBvT,KAAK,OAC9E,yBAA8BE,EAAxBmT,EAA0B,+BAAoC,oCAK3DG,GA1JsB,WAAO,IAElCtT,EAAMC,eAAND,EAGFhB,EAAWC,cACX1S,EAAgB4S,YAAY7S,GAQ5BinB,EAAiB,SAAC3T,EAAuCzT,EAA6CiY,GAMhG,IAAD,GALTxE,EAAM+G,iBACN/G,EAAMgH,kBACN5H,EAAS7S,KAGLiY,KACF,UAAAA,EAAIQ,eAAJ,SAAaiC,SAKXC,EAAW,CACfnM,IAAK,SAACoM,GAAmDA,GAAYwM,EAAexM,EAAUpM,QAAK3N,IACnGuU,OAAQ,SAACwF,GAAmDA,GAAYwM,EAAexM,EAAUhM,QAAsB/N,IACvHiO,UAAW,SAAC8L,GAAmDA,GAAYwM,EAAexM,EAAU9L,QAAWjO,IAC/GmO,WAAY,SAAC4L,GAAmDA,GAAYwM,EAAexM,EAAU5L,QAAYnO,KAG7GwmB,EAAgBhf,cAAI,aACxBZ,QAAS,OACTC,cAAe,MACfgC,eAAgB,iBACZhB,EAAwB,IAAI,IAJT,OAOnB4e,EAAajf,cAAI,aACrBZ,QAAS,OACTC,cAAe,OACXgB,EAAwB,IAAI,IAHZ,OAMtB,OACE,cAAC,iBAAD,CAAewS,OAAQlG,GAAe2F,SAAUva,IAAkBjB,EAAmBM,QAAUkb,EAAU,GAAIQ,cAAc,GACzH,qBAAK9S,IAAKgf,GACN,qBAAKhf,IAAKif,GACR,cAAC,GAAD,CAAsB7U,SAAU0B,IAC9BuS,WAAW,MAAMC,cAAeS,EAAgBpnB,OAAQwO,GACxDoY,QAAS/S,EAAE,6BAA8B,CAAEkH,WAAa/F,GAAc2F,EAASnM,IAAI5O,MAAwBsV,WAC3G2R,cAAehT,EAAE,kCAAmC,CAAEkH,WAAa/F,GAAc2F,EAASnM,IAAI5O,MAAwBsV,aAExH,cAAC,GAAD,CAAqByR,cAAeS,EAAgBpnB,OAAQ4O,GAC1DmY,WAAa/R,GAAc2F,EAASvF,OAAOxV,MAAwBsV,WAErE,cAAC,GAAD,CAAsBzC,SAAU8U,IAC9Bb,WAAW,aAAaC,cAAeS,EAAgBpnB,OAAQ8O,GAC/D8X,QAAS/S,EAAE,mCAAoC,CAAEkH,WAAa/F,GAAc2F,EAAS7L,UAAUlP,MAAwBsV,WACvH2R,cAAehT,EAAE,wCAAyC,CAAEkH,WAAa/F,GAAc2F,EAAS7L,UAAUlP,MAAwBsV,aAEpI,cAAC,GAAD,CAAsBzC,SAAU+U,IAC9Bd,WAAW,cAAcC,cAAeS,EAAgBpnB,OAAQgP,GAChE4X,QAAS/S,EAAE,oCAAqC,CAAEkH,WAAa/F,GAAc2F,EAAS3L,WAAWpP,MAAwBsV,WACzH2R,cAAehT,EAAE,yCAA0C,CAAEkH,WAAa/F,GAAc2F,EAAS3L,WAAWpP,MAAwBsV,cAGxI,qBAAK7M,IAAKif,O,mSCknBLG,GA/qBgB,WAAO,IAAD,EAEf3T,eAAZD,EAF2B,EAE3BA,EAAG1B,EAFwB,EAExBA,KAGLU,EAAWC,cACX+C,EAAW7C,YAAY6D,IACvB6Q,EAAY1U,YAAY8D,IACxB6Q,EAAW3U,YAAY+D,IACvBjB,EAAa9C,YAAYgE,IACzBjB,EAAY/C,YAAYiE,IAG9B+B,qBAAU,WACU,SAAd0O,GACF7U,EAASmD,QAEV,CAAC0R,EAAW7U,IAGfmG,qBAAU,WACR,GAAkB,YAAd0O,EACF,IAAI,IAAIlR,EAAe,EAAGA,EAAeX,EAASlT,OAAQ6T,IACxD,GAAIlX,EAAS8B,SAASE,gBAAiB,CACrC,IAAIA,EAAkBhC,EAAS8B,SAASE,gBACpC6V,EAAUtB,EAASW,GAEvB,GAAIW,EAAQtK,SAASvL,EAAiB,CACpC,KAAIod,OAAOkJ,KAAKtmB,EAAgB6V,EAAQtK,QAAQlK,OAAS,GAavD,OAVA,IAFA,IAAIklB,EAAyBvmB,EAAgB6V,EAAQtK,OAE5C6J,EAAa,EAAGA,EAAaS,EAAQV,OAAO9T,OAAQ+T,IACvDS,EAAQV,OAAOC,GAAY5K,MAAM+b,GAC/B,aAAcA,EAAuB1Q,EAAQV,OAAOC,GAAY5K,KAClE+G,EAAS8D,GAAiB,CAACH,aAAcA,EAAcE,WAAYA,EACjElX,MAAOqoB,EAAuB1Q,EAAQV,OAAOC,GAAY5K,IAAIgc,gBAY9E,CAACJ,EAAW7R,EAAUhD,IAMzB,IAAMkV,EAAa,GAMbC,EAAU,GAOVC,EAAe,GAOfC,EAAiB,SAACC,GACtB,OACE9f,cAAI,aACFhB,KAAM,IACNmB,SAAU,MACVW,WAAY,OACZE,aAAc,MACdd,gBAAiB,OACjBya,UAAWmF,EAAa,6BAA+B,8BACpDA,GAAc,CAACC,MAAO,SAPxB,QAYDC,EAAsB,SAACF,GAC3B,OACE9f,cAAI,CACFkC,QAAS,YACT+d,OAAQH,EAAa,iBAAmB,kBAFvC,QAODI,EAAuB,CAC3BC,QAAS,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPvF,WAAY,UAEdwF,KAAM,SAACD,GAAD,mBAAC,eACFA,GADC,IAEJvF,WAAY,OAEZla,UAAW,MAIT2f,EAAoB,SAACR,GACzB,OACE9f,cAAK,CACHkC,QAAS,WACT+d,OAAQH,EAAa,iBAAmB,kBAFvC,QAODS,EAAgB,SAACC,GACrB,OACExgB,cAAI,yBACFygB,WAAY,OACZ3f,WAAY,QACR0f,GAAY,CAACT,MAAO,SAHvB,IAID9d,WAAY,SAJX,QA4DDye,EAAqB,SAArBA,EAAsBC,EAAuBC,EAAYC,GAS7D,OAPIpZ,MAAMqZ,QAAQF,IAChBA,EAAM9mB,SAAQ,SAACinB,GACbF,EAAOhiB,KAAK6hB,EAAmBC,EAASI,EAAUF,OAKtD,OAAOF,QAAP,IAAOA,OAAP,EAAOA,EAASK,MAAK,SAAAC,GAAE,OAAIA,EAAGC,cAAgBN,MAO1CO,EAAmB,SAAC3T,GACxB,IAAM4T,EAAoC,GA0B1C,OAxBA5T,EAAS1T,SAAQ,SAACgV,EAAkBX,GAClCiT,EAAW,UAAYjT,GAAgB,GACvCW,EAAQV,OAAOtU,SAAQ,SAACkV,GAKtB,GAJAoS,EAAW,UAAYjT,GAAca,EAAMvL,IAAMuL,EAAM7X,MAInD6X,EAAMqS,WAAY,CACpB,IAAMV,EAAUW,EAA2BtS,GACvCuS,EAAoBvS,EAAM7X,MAE9B,GAAIsQ,MAAMqZ,QAAQS,GAAc,CAC9B,IAAI/nB,EAAgB,GACpBknB,EAAmBC,EAAS3R,EAAM7X,MAAOqC,GACzC+nB,EAAc/nB,OAEd+nB,EAAW,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAASK,MAAK,SAAAC,GAAE,OAAIA,EAAGC,cAAgBK,KAGvDH,EAAW,UAAYjT,GAAca,EAAMvL,IAAM8d,SAKhDH,GAWHI,EAAW,SAACrqB,GAAD,OAAiBA,OAAQqB,EAAYgT,EAAE,iCAMlDjH,EAAW,SAACpN,GAEhB,MADiB,qCACPsqB,KAAKtqB,QAASqB,EAAYgT,EAAE,wCAOlCkW,EAAoB,SAACC,GAEzB,GAAKA,EAAL,CAIA,IAAIC,OAAKppB,EAQT,MAP6C,kBAAzC6d,OAAOM,UAAUR,SAAS0L,KAAKF,KACjCC,EAAKE,YAAcC,WAAWJ,IAEX,kBAAVA,IACTC,EAAKE,YAAcE,QAAQL,IAGzBC,GACKA,EAAGK,aAAUzpB,EAEfgT,EAAE,kCAYL0W,EAAgB,SAAClT,GACrB,OAAIA,EAAMwS,SACDA,EACe,aAAbxS,EAAMvL,GACRc,EACiB,SAAfyK,EAAMuG,MAAkC,SAAfvG,EAAMuG,KACjCmM,OAEP,GA0CES,EAAiB,SAAC7lB,EAAQskB,GAC5BA,EAAMwB,OAAO9lB,GA5BS,SAACnF,EAAYkrB,GAYrC,IAXA,IAAMC,EAAqBD,EAAQE,UACjCF,EAAQG,QAAQ,KAAO,EACvBH,EAAQG,QAAQ,MAEZ1lB,EAAYulB,EAAQE,UACxBF,EAAQG,QAAQ,KAAO,EACvBH,EAAQ/nB,QAEJ6T,EAAevP,SAAS0jB,GAGrBjU,EAAa,EAAGA,EAAab,EAASW,GAAcC,OAAO9T,OAAQ+T,IAC1E,GAAIb,EAASW,GAAcC,OAAOC,GAAY5K,KAAO3G,EAAW,CAE9D0N,EAAS0D,GAAc,CAACC,aAAcA,EAAcE,WAAYA,EAC9DlX,MAAOsrB,EAAWjV,EAASW,GAAcC,OAAOC,GAAalX,MAC/D,OAYFurB,CAAkB9B,EAAMzpB,MAAOypB,EAAMrpB,OASnCkrB,EAAa,SAAbA,EAAczT,EAA6B7X,GAC/C,IAAIwrB,EAAoBxrB,EAoCxB,OAjCGsQ,MAAMqZ,QAAQ3pB,KACfwrB,EAAc,GACdxrB,EAAM2C,SAAQ,SAAC8oB,GACbD,EAAY9jB,KAAK4jB,EAAW,KAAMG,QAKjB,kBAAVzrB,GAAgC,OAAVA,GAAkBA,EAAM0rB,eAAe,eACtEF,EAAcxrB,EAAM+pB,YACM,kBAAV/pB,GAAgC,OAAVA,GAAkBA,EAAM2rB,YAC9DH,EAAcxrB,EAAMA,QAIlB6X,GAAUvH,MAAMqZ,QAAQ3pB,IAAuB,YAAb6X,EAAMvL,IAAiC,gBAAbuL,EAAMvL,KACpEkf,EAAc,CAACA,KAIb3T,GAAyB,SAAfA,EAAMuG,MAAkC,SAAfvG,EAAMuG,MAAoE,kBAAhDc,OAAOM,UAAUR,SAAS0L,KAAKc,IAOrF3T,GAAyB,SAAfA,EAAMuG,MAAkC,SAAfvG,EAAMuG,MAA2C,kBAAhBoN,GACzD,KAAhBA,IACFA,EAAc,IAAIpkB,KAAKokB,GAAaI,UAPjCC,MAAML,EAAYM,aAGrBN,EAAcA,EAAYI,UAQvBJ,GAQHO,EAAW,SAACC,GAEhB9M,OAAOkJ,KAAK4D,GAAQrpB,SAAQ,SAACspB,GAC3B,IAAIjV,EAAevP,SAASwkB,EAAgB1W,QAAQ,UAAW,KAG/D2J,OAAOkJ,KAAK4D,EAAOC,IAAkBtpB,SAAQ,SAACupB,GAE5C,IAAK,IAAIhV,EAAa,EAAGA,EAAab,EAASW,GAAcC,OAAO9T,OAAQ+T,IAC1E,GAAIb,EAASW,GAAcC,OAAOC,GAAY5K,KAAO4f,EAAe,CAElE7Y,EAAS0D,GAAc,CAACC,aAAcA,EAAcE,WAAYA,EAC9DlX,MAAOsrB,EAAWjV,EAASW,GAAcC,OAAOC,GAAa8U,EAAOC,GAAiBC,OACvF,UAMN7Y,EAASoD,UAaP0T,EAA6B,SAACtS,GAClC,GAAIA,EAAMqS,WAAY,CAEpB,IAAMV,EAAwD,CAAC,CAACxpB,MAAO,GAAImsB,MAAO,WAAYpC,YAAa,KA8B3G,OA7BA7K,OAAOkN,QAAQvU,EAAMqS,YAAYvnB,SAAQ,YAAmB,IAAD,oBAAhBC,EAAgB,KAAX5C,EAAW,KAQrDqsB,EAAY,KACZ1Z,EAAK2Z,OAAL,mBAAwBzU,EAAMvL,OAChC+f,EAAYhY,EAAE,YAAD,OAAawD,EAAMvL,GAAnB,YAAyB1J,EAAI2pB,WAAW,IAAK,OAEzC,YAAb1U,EAAMvL,KACR+f,EAAYhY,EAAE,YAAD,OAAawD,EAAMvL,GAAnB,YAAyBZ,KAAKI,MAAMlJ,GAAKupB,MAAMI,WAAW,IAAK,SAK/D,aAAb1U,EAAMvL,KACR+f,EAAYzpB,GAId4mB,EAAQ9hB,KAAK,CACX1H,MAAO4C,EACPupB,MAAOE,GAAwBrsB,EAC/B+pB,YAAa/pB,OAGVwpB,EAEP,OAAO,MASLgD,EAAoB,SAAC3U,EAAsB4R,GAE/C,OADAA,EAAMnd,GAAKmd,EAAMrpB,KACbyX,EAAMqS,WACJ5Z,MAAMqZ,QAAQ9R,EAAM7X,OAEpB,cAAC,KAAD,gBAAqBypB,EAArB,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCgD,SAAO,EACPC,aAAW,EACXtV,SAAUS,EAAMT,SAChB7Q,QAAS4jB,EAA2BtS,GACpClP,OAAQogB,EACRlgB,IAAK6f,EAAe7Q,EAAMT,aAK5B,cAAC,KAAD,gBAAYqS,EAAZ,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCrS,SAAUS,EAAMT,SAChB7Q,QAAS4jB,EAA2BtS,GACpClP,OAAQogB,EACRlgB,IAAK6f,EAAe7Q,EAAMT,aAKR,SAAfS,EAAMuG,KAEb,qBAAKvV,IAAG,CAAG6f,EAAe7Q,EAAMT,UAAW+R,EAAkBtR,EAAMT,UAA3D,QACN,cAAC,KAAD,gBAA4BqS,EAA5B,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCrpB,KAAMyX,EAAMvL,GACZqgB,OAAO,mBACPC,SAAU/U,EAAMT,SAChByV,cAAeC,KACfC,UAAWC,SAIO,SAAfnV,EAAMuG,KAEb,qBAAKvV,IAAG,CAAG6f,EAAe7Q,EAAMT,UAAW+R,EAAkBtR,EAAMT,UAA3D,QACN,cAAC,KAAD,gBAAwBqS,EAAxB,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCrpB,KAAMyX,EAAMvL,GACZqgB,OAAO,QACPC,SAAU/U,EAAMT,SAChByV,cAAeC,KACfC,UAAWC,SAIO,cAAfnV,EAAMuG,KAEb,yCAAcqL,EAAd,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCrS,SAAUS,EAAMT,SAChBvO,IAAG,CAAG6f,EAAe7Q,EAAMT,UAAWyR,EAAoBhR,EAAMT,UAA7D,UAKL,sCAAWqS,EAAX,CACEwB,OAAQ,SAAA9lB,GAAM6lB,EAAe7lB,EAAGskB,IAChCrS,SAAUS,EAAMT,SAChBvO,IAAG,CAAG6f,EAAe7Q,EAAMT,UAAWyR,EAAoBhR,EAAMT,UAA7D,WAYL6V,EAAc,SAACpV,EAAsBb,EAAsBE,GAiB/D,OACI,cAAC,KAAD,CAAOtU,IAAKsU,EACJ9W,KAAM,UAAY4W,EAAe,IAAMa,EAAMvL,GAC7ChK,SAAUyoB,EAAclT,GACxBuG,KAAqB,YAAfvG,EAAMuG,KAAqB,gBAAa/c,IAE7C,gBAAGooB,EAAH,EAAGA,MAAOyD,EAAV,EAAUA,KAAV,OACC,qBAAKrkB,IAAK2f,GACR,uBAAO3f,IAAK4f,EAAiB0E,QAAS1D,EAAMrpB,MAC1CuS,EAAK2Z,OAAL,0BAA+BzU,EAAMvL,KACrC+H,EAAE,mBAAD,OAAoBwD,EAAMvL,KAAQuL,EAAMvL,IAnBhB,SAACuL,EAAsB4R,GAChE,GAAoB,SAAf5R,EAAMuG,MAAkC,SAAfvG,EAAMuG,MAAoC,KAAhBqL,EAAMzpB,MAI5D,OAAOwsB,EAAkB3U,EAAO4R,GAHRA,EAAnBzpB,MADsE,IAC5DotB,EAD2D,aAClD3D,EADkD,WAE1E,OAAO+C,EAAkB3U,EAAOuV,GAmBnBC,CAAmCxV,EAAO4R,GAC1CyD,EAAK/oB,OAAS+oB,EAAKI,SAAW,sBAAMzkB,IAAKugB,GAAc,IAAQ8D,EAAK/oB,OACpE+oB,EAAKK,UAAYL,EAAKM,QAAUN,EAAKrI,QAAU,sBAAMhc,IAAKugB,GAAc,IAAQ,cAAC,IAAD,CAAiBlV,KAAMuZ,YAOpHC,EAAgB,SACpB/V,EACAX,EACAlV,GAEA,OACE,qBAAKc,IAAKoU,GACR,wBACGrE,EAAK2Z,OAAL,mBAAwB3U,EAAQtK,MAAMkf,WAAW,IAAK,OACrDlY,EAAE,YAAD,OAAasD,EAAQtK,MAAMkf,WAAW,IAAK,OAAU5U,EAAQtK,OAIjEsK,EAAQV,OAAO5E,KAAI,SAACwF,EAAO+E,GAE1B,OAAI/E,EAAMvL,MAAMxK,GAAmB,SAAUA,EAAgB+V,EAAMvL,IAC7DxK,EAAgB+V,EAAMvL,IAAIzK,KACrBorB,EAAYpV,EAAOb,EAAc4F,QAExC,EAGGqQ,EAAYpV,EAAOb,EAAc4F,QAmFhD,OAvEM,cAAC,KAAD,CACEmP,SAAUA,EACV4B,aAAc,CAAEC,YAAY,EAAMC,UAAU,GAC5CC,cAAe9D,EAAiB3T,GAChC0X,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAjB,SAAuBL,WAAvB,EAAmCC,SAAnC,EAA6C7B,OACnD,sBAAMD,SAAU,SAAA9X,GACd+Z,EAAa/Z,GAEbga,EAAKC,SACJrlB,IAAK0f,GAEN,qBAAK1f,IAAK6B,GAA4B,WAAdwd,GAAyBrU,KAAK,SACpD,oFAAmE,yBAClEsU,EAAW,YAAcA,EAAW,kCAAkC,0BAGxE9R,EAAShE,KAAI,SAACsF,EAASiF,GACtB,OAAI9c,EAAS8B,SAASE,iBAChB6V,EAAQtK,SAASvN,EAAS8B,SAASE,gBAEjCod,OAAOkJ,KAAKtoB,EAAS8B,SAASE,gBAAgB6V,EAAQtK,QAAQlK,OAAS,EAClEuqB,EAAc/V,EAASiF,EAAG9c,EAAS8B,SAASE,gBAAgB6V,EAAQtK,aAE3E,EAKCqgB,EAAc/V,EAASiF,EAAG,OAyBnC,qBAAK/T,IAAK6B,GAA6B,WAAf4L,GAA0BzC,KAAK,SACrD,oFAA6D,yBAA7D,2CACoD,yBACnD0C,EAAY,YAAcA,EAAY,kCAAkC,+BC9qBzF,I,oJAkBM4X,GAA4B,WAAO,IAIjCC,GAAsB/Z,EAFdC,eAAND,GAEsB,6BAC5B,4EAEIga,EAAgB,GAQtB,OACE,uBAAOxlB,IAAMwlB,GACX,cAAC,IAAD,CAAiBxlB,IAAG,GAAoBqL,KAAMoa,IAAcna,KAAK,OAC/Dia,I,8aAMFG,GAA4D,SAAC,GAA2B,IAA1BvgB,EAAyB,EAAzBA,MAAOwgB,EAAkB,EAAlBA,aAEjEna,EAAMC,eAAND,EACFhB,EAAWC,cACXmb,EAASzgB,EAAM4J,OAAOwG,KAAO,KAC9BpQ,EAAMG,aAAaD,QAAU,GAA7B,WACOmG,EAAE,+BAAgC,YADzC,MAGCqa,EAAc,GAWdC,EAAW,GAOXC,EAAW,GAeXC,EAAe7gB,EAAMG,aAAaD,QAAWsgB,EAAe,EAAI,EAAI,EAAK,EACzEM,EAAiC,IAAjBD,EAChBE,EAAa,CACjB1a,EAAE,iCAAkC,gBACpCA,EAAE,uCAAwC,uBAC1CA,EAAE,kCAAmC,kBACnCwa,GACEG,EAAgB,CACpB3a,EAAE,oCAAqC,yCACvCA,EAAE,0CAA2C,8CAC7CA,EAAE,oCAAqC,mCACrCwa,GACEI,EAAa,CAACxH,IAASA,IAASC,KAAgBmH,GAQtD,OACE,qBAAKhmB,IAAM6lB,GACT,qBAAK7lB,IAAM+lB,GAAgBH,GAC3B,qBAAK5lB,IAAG,cAAE,CAAEgG,MAAO,MAAOzE,UAAW,SAAUE,QAAS0D,EAAMG,aAAaD,QAAU,IAAM,OAAnF,QACN,cAAC,KAAD,CAAarF,IAAM8lB,EAAcptB,IAAMyM,EAAMgC,IAAMnB,MAAM,SAE3D,cAAC,GAAD,CACErK,KAAOuqB,EACP3H,QAAU4H,EACVE,QAhBqB,WACzB7b,EAAStF,GAAgB,CACvBzB,GAAI0B,EAAM1B,GACV4B,SAAUF,EAAMG,aAAaD,YAc3BgG,KAAO+a,EACPpK,OAASiK,MAcXK,GAAiD,SAAC,GAA6D,IAA5DD,EAA2D,EAA3DA,QAAS1qB,EAAkD,EAAlDA,KAAM0P,EAA4C,EAA5CA,KAAMkT,EAAsC,EAAtCA,QAASvC,EAA6B,EAA7BA,OAA6B,IAArB+D,aAAqB,MAAb,QAAa,EAC5GwG,EAAc,CAClBvK,EAASjb,EAAmBS,GAC5B,CACEglB,OAAQ,YACRtkB,QAAS,OACTyY,UAAW,8BACX3U,MAAO,QAWL4J,EAAMqC,IAAMpC,OAAuB,MACzC,OACE,qBAAK7P,IAAMumB,EACNtb,SAAW,EACX2E,IAAKA,EACL5E,KAAK,SACLxG,MAAQ+Z,EACR1S,aAAa0S,EACbrT,QAjBc,WAAO,IAAD,EACzB8Q,GAAUqK,IACV,UAAAzW,EAAIQ,eAAJ,SAAaiC,QAgBRlH,UAdY,SAACC,IACd4Q,GAAyB,MAAd5Q,EAAMrR,KAA6B,UAAdqR,EAAMrR,KACxCssB,MAaA,cAAC,IAAD,CAAiBrmB,IAAG,cAAE,CAAE+f,MAAOA,GAAX,OAAoB1U,KAAOA,EAAOC,KAAK,OAC3D,yBAAO3P,KAKE8qB,GAlKsB,WAGnC,IAAM3iB,EAAkB6G,YAAYvB,IAC9Buc,EAAe7hB,EAAOiV,QAAO,SAAAvN,GAAC,OAAIA,EAAElG,aAAaD,WAAS/K,OAC1DosB,EAA4B5iB,EAAO0F,KAAI,SAACrE,GAAD,OAC3C,cAAC,GAAD,CAAWpL,IAAMoL,EAAM1B,GAAK0B,MAAQA,EAAQwgB,aAAeA,OAG7D,OACE,yBACIe,EACF,cAAC,GAAD,QCQAC,GAAqF,SAAC,GAA2B,IAoBjHC,EApBuFxc,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAE7FmB,EAAMC,eAAND,EAEFhB,EAAWC,cAEXI,EAAS,WACbL,EAAS/S,EAAS4S,IAClBG,EAAStS,EAAc,KAGnB2uB,EAAwB7mB,cAAI,yBAChCgG,MAAO,QACPC,OAAQ,QACR5G,cAAe,SACfc,SAAU,WACNE,EAAwB,IAAI,IALD,IAM/Bsa,UAAW,gCANoB,OAUjC,OAAOtQ,GACL,IAAK,eACHuc,EAAepb,EAAE,0BACjB,MACF,IAAK,mBACHob,EAAepb,EAAE,2BACjB,MACF,IAAK,kBACHob,EAAepb,EAAE,6BACjB,MACF,QACEob,EAAe,8BAInB,OACE,qBAAK5mB,IAAG,CAAGe,EAAkB8lB,EAArB,OACR7b,KAAK,SAASC,SAAU,EACtBC,QAAUL,EACVM,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1F8Q,MAEF,cAAC,IAAD,CAAkBQ,KAAMjB,EAAUkB,KAAK,OACvC,yBAAMsb,KASGE,GA3EmB,WAEhC,IAAMC,EAAkB/mB,cAAI,aAC1BZ,QAAS,OACTC,cAAe,MACfgC,eAAgB,eAChB2lB,SAAU,QACN3mB,EAAwB,IAAI,IALP,OAQ3B,OACE,qBAAKL,IAAK+mB,GACN,cAAC,GAAD,CAAkB3c,SAAU6c,IAAQ5c,UAAU,iBAC9C,cAAC,GAAD,CAAkBD,SAAU8c,IAAc7c,UAAU,qBACpD,cAAC,GAAD,CAAkBD,SAAU+c,IAAe9c,UAAU,sBC5BvDnT,GAAiC,CACrCiE,OAAQ,OACRG,WAAO9C,GAGI4uB,GAAuBxiB,YAAiB,6BAAD,uCAA+B,WAAOyiB,GAAP,eAAAhuB,EAAA,yDAC5EpC,EAASsB,eADmE,sBAEzE,IAAIqE,MAAM,0BAF+D,uBAK1DuF,GAAOkB,KAAP,UAAepM,EAASwB,SAASC,IAAjC,mBAA+CzB,EAASsB,eAAxD,cACrB,CAAE2B,SAAUotB,GAAgBD,EAASntB,UAAW4J,OAAQujB,EAASvjB,SANc,cAK3E9I,EAL2E,yBAQ1EA,GAR0E,2CAA/B,uDAe9CusB,GAAoBjwB,YAAY,CACpCC,KAAM,oBACNL,gBACAM,SAAU,GAEVoP,cAAe,SAAAC,GACbA,EAAQC,QACNsgB,GAAqBrgB,SAAS,SAACrP,EAAOC,GACpCD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACNsgB,GAAqBpgB,WAAW,SAACtP,EAAOC,GACtCD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACNsgB,GAAqB1f,UAAU,SAAChQ,EAAOC,GACrCD,EAAMyD,OAAS,SACfzD,EAAM4D,MAAQ3D,EAAO2D,MAAM8H,cActBkkB,GAAkB,SAACptB,GAC9B,IAAI2N,EAA4B,GAWhC,OATA3N,EAASJ,SAAQ,SAAAO,GACfwN,EAAYhJ,KAAK,CACf8E,MAAOtJ,EAAQsJ,MACfC,IAAKvJ,EAAQuJ,IACbC,QAASxJ,EAAQwJ,QACjB2jB,UAAU,OAIP3f,GAGI4f,GAAe,SAAC/vB,GAAD,OAC1BA,EAAMgwB,kBAAkBvsB,QACbwsB,GAAc,SAACjwB,GAAD,OACzBA,EAAMkwB,4BAA4BtsB,OAErBisB,MAAf,Q,gDCNaM,GAA2B,WAAO,IAErCrc,EAAMC,eAAND,EAGFhB,EAAWC,cAEXvQ,EAAWyQ,YAAYjC,IACvB5E,EAAS6G,YAAYvB,IACrB0e,EAAiBnd,YAAY8c,IAC7BM,EAAiBpd,YAAYgE,IAG/BtD,EAAO4b,IACPzJ,GAAO,EACPe,EAAU/S,EAAE,sCACO,WAAnBsc,GAAkD,WAAnBC,GACjC1c,EAAO2c,IACPxK,GAAO,EACPe,EAAU/S,EAAE,sCACgB,YAAnBsc,GAAmD,YAAnBC,GACzC1c,EAAOuZ,IACPpH,GAAO,EACPe,EAAU/S,EAAE,uCACgB,YAAnBsc,GAAmD,YAAnBC,IACzC1c,EAAOkS,IACPC,GAAO,EACPe,EAAU/S,EAAE,0CAGd,IAMMyc,EAAO,WACXzd,EAASoD,MACTpD,EAAS4c,GAAqB,CAC5BltB,SAAUA,EACV4J,OAAQA,MAYZ,OAPA6M,qBAAU,WACe,YAAnBmX,GAAmD,YAAnBC,IAClCvd,EAAS0d,IAAmB,IAC5B1d,EAAS2d,IAAsB,OAEhC,CAAC3d,EAAUud,EAAgBD,IAG5B,qBAAK9nB,IAAG,CAAGe,EAAkBW,GAArB,OAA6C8C,MAAO+Z,EAC1DvT,KAAK,SAASC,SAAU,EACxBC,QAAU+c,EACV9c,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1FkuB,MAEF,cAAC,IAAD,CAAiB5c,KAAMA,EAAMmS,KAAMA,EAAMlS,KAAK,OAC9C,0BAAOE,EAAE,wBACT,qBAAKxL,IAAK4B,GAAUwmB,YAAU,SAASC,cAAY,QA/BhC,WACrB,GAAsB,YAAnBP,EACD,OAAOtc,EAAE,6BA6BkD8c,MAMlDC,GA/Ga,WAAO,IAEzB/c,EAAMC,eAAND,EAEFpT,EAAcuS,YAAYxS,GAE1BqwB,EAAqB7d,YAAY8c,IACjC/Z,EAAY/C,YAAYgd,IACxBc,EAAqB9d,YAAYgE,IACjC+Z,EAAoB/d,YAAYiE,IAEhC+Z,EAAY3oB,cAAI,aACpBiG,OAAQ,OACR7G,QAAyB,iBAAhBhH,EAAiC,OAAS,OACnDiH,cAAe,SACfiC,WAAY,UACRjB,EAAwB,IAAI,IALb,OAQrB,OACE,qBAAKL,IAAK2oB,EAAWnkB,MAAOgH,EAAE,0BAC5B,wBAAKA,EAAE,uBACP,sBAAMxL,IAAG,IACNwL,EAAE,mBAEL,qBAAKxL,IAAK2B,IACR,cAAC,GAAD,CAAY1J,WAAY,EAAGqrB,MAAO9X,EAAE,yBAA0BpB,SAAUwe,MACxE,cAAC,GAAD,OAEF,qBAAK5oB,IAAK6B,GAAqC,WAAvB2mB,GAAkCxd,KAAK,SAC7D,0BAAOQ,EAAE,uBAA6B,yBACrCkC,EAAYlC,EAAE,6BAA8B,CAAC0D,aAAcxB,IAAclC,EAAE,gCAAgC,0BAE9G,qBAAKxL,IAAK6B,GAAqC,WAAvB4mB,GAAkCzd,KAAK,SAC7D,0BAAOQ,EAAE,uBAA6B,yBACrCkd,EAAoBld,EAAE,6BAA8B,CAAC0D,aAAcwZ,IAAsBld,EAAE,gCAAgC,4BC9CvHqd,GAAWvxB,YAAY,CAClCC,KAAM,WACNL,aAVwB,CACxB0M,KAAK,EACLzM,MAAO,WASPK,SAAU,CACRsxB,OAAQ,SAACpxB,EAAOC,GACdD,EAAMkM,IAAMjM,EAAOC,QAAQmxB,SAC3BrxB,EAAMP,MAAQQ,EAAOC,QAAQT,UAKpB2xB,GAAYD,GAAShxB,QAArBixB,OAGFE,GAAc,SAACtxB,GAAD,OAA+CA,EAAMuxB,SAASrlB,KAC5EslB,GAAiB,SAACxxB,GAAD,OAAmDA,EAAMuxB,SAAS9xB,OAEjF0xB,MAAf,QCqBMM,GAA+B,WAAO,IAElC3d,EAAMC,eAAND,EAGFhB,EAAWC,cAEX2e,EAAU,WACd5e,EAASse,GAAO,CAACC,UAAU,EAAM5xB,MAAO,gBAG1C,OACE,qBAAK6I,IAAG,CAAGe,EAAkBW,GAArB,OAA6C8C,MAAOgH,EAAE,2BAC5DR,KAAK,SAASC,SAAU,EACxBC,QAAUke,EACVje,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1FqvB,MAEF,cAAC,IAAD,CAAkB/d,KAAM8b,IAAe7b,KAAK,OAC5C,0BAAOE,EAAE,6BAKA6d,GAtDgB,WAAO,IAE5B7d,EAAMC,eAAND,EAEFpT,EAAcuS,YAAYxS,GAE1BmxB,EAActpB,cAAI,aACtBZ,QAAyB,oBAAhBhH,EAAoC,OAAS,OACtDiH,cAAe,SACfiC,WAAY,UACRjB,EAAwB,IAAI,IAJX,OAOvB,OACE,qBAAKL,IAAKspB,GACR,wBAAK9d,EAAE,0BACP,0BACGA,EAAE,sBAEL,qBAAKxL,IAAK2B,IACR,cAAC,GAAD,CAAY1J,WAAY,EAAGqrB,MAAO9X,EAAE,yBAA0BpB,SAAUwe,MACxE,cAAC,GAAD,SCrCF1xB,GAAiC,CACrCiE,OAAQ,OACRG,WAAO9C,GAGI+wB,GAAmC3kB,YAAiB,yCAAD,uCAA2C,WAAOyiB,GAAP,eAAAhuB,EAAA,yDACpGpC,EAASsB,eAD2F,sBAEjG,IAAIqE,MAAM,0BAFuF,uBAKlFuF,GAAOkB,KAAP,UAAepM,EAASwB,SAASC,IAAjC,mBAA+CzB,EAASsB,eAAxD,cACrB,CAAE2B,SAAUotB,GAAgBD,EAASntB,UAAW4J,OAAQujB,EAASvjB,OAAQY,UAAW2iB,EAASmC,WANU,cAKnGxuB,EALmG,yBAQlGA,GARkG,2CAA3C,uDAe1DyuB,GAA8BnyB,YAAY,CAC9CC,KAAM,8BACNL,gBACAM,SAAU,GAEVoP,cAAe,SAAAC,GACbA,EAAQC,QACNyiB,GAAiCxiB,SAAS,SAACrP,EAAOC,GAChDD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACNyiB,GAAiCviB,WAAW,SAACtP,EAAOC,GAClDD,EAAMyD,OAAS,aAEnB0L,EAAQC,QACNyiB,GAAiC7hB,UAAU,SAAChQ,EAAOC,GACjDD,EAAMyD,OAAS,SACfzD,EAAM4D,MAAQ3D,EAAO2D,MAAM8H,cAKtBqkB,GAAe,SAAC/vB,GAAD,OAC1BA,EAAMkwB,4BAA4BzsB,QACvBwsB,GAAc,SAACjwB,GAAD,OACzBA,EAAMkwB,4BAA4BtsB,OAGrBmuB,MAAf,QChCA,I,gFA2CaC,GAAiD,SAAC,GAAY,IAAX/tB,EAAU,EAAVA,KAGxD6O,EAAWC,cAEX/F,EAAYiG,YAAYtB,IACxBrF,EAAwB2G,YAAY9B,IACpC3O,EAAWyQ,YAAYjC,IACvB5E,EAAS6G,YAAYvB,IACrB0e,EAAiBnd,YAAY8c,IAC7BM,EAAiBpd,YAAYgE,IAGnCgC,qBAAU,WACe,YAAnBmX,GAAmD,YAAnBC,IAClCvd,EAAS0d,IAAmB,IAC5B1d,EAAS2d,IAAsB,OAEhC,CAAC3d,EAAUud,EAAgBD,IAE9B,IAAM6B,EAAiB,WACrBnf,EAASoD,MACTpD,EAAS+e,GAAiC,CACxCrvB,SAAUA,EACV4J,OAAQA,EACR0lB,SAAU,CAAC,CAAC/lB,GAAIiB,EAAUV,GAAuBP,SAKjD4H,EAAO6b,IACP1J,GAAO,EACY,WAAnBsK,GAAkD,WAAnBC,GACjC1c,EAAO2c,IACPxK,GAAO,GACqB,YAAnBsK,GAAmD,YAAnBC,GACzC1c,EAAOuZ,IACPpH,GAAO,EACPhT,EAASse,GAAO,CAACC,UAAU,EAAM5xB,MAAO,cACZ,YAAnB2wB,GAAmD,YAAnBC,IACzC1c,EAAOkS,IACPC,GAAO,GAIT,IAAMoM,EAAe,GAKrB,OACE,qBAAK5pB,IAAG,CAAGe,EAAkB6oB,EAArB,OAAuCplB,MAAO,0BACpDwG,KAAK,SAASC,SAAU,EACxBC,QAAUye,EACVxe,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1F4vB,MAEF,cAAC,IAAD,CAAkBte,KAAMA,EAAMmS,KAAMA,EAAMlS,KAAK,OAC/C,0BAAO3P,KAKEkuB,GA1G8B,WAAO,IAE1Cre,EAAMC,eAAND,EAEFse,EAA+Bnf,YAAY8c,IAC3CsC,EAAsBpf,YAAYgd,IAClCc,EAAqB9d,YAAYgE,IACjC+Z,EAAoB/d,YAAYiE,IAEhCob,EAA6BhqB,cAAI,aACrCZ,QAAS,OACTC,cAAe,SACfiC,WAAY,SACZY,QAAS,QACL7B,EAAwB,IAAI,IALI,OAQtC,OACE,qBAAKL,IAAKgqB,EAA4BxlB,MAAOgH,EAAE,gCAC7C,wBAAKA,EAAE,iCACP,cAAC,IAAD,CAAiBH,KAAM4e,IAAS3e,KAAK,QAFvC,cAIE,yBAAME,EAAE,kCACR,qBAAKxL,IAAK2B,IACR,cAAC,GAAD,CAAY1J,WAAY,EAAGqrB,MAAO9X,EAAE,yBAA0BpB,SAAUwe,MACxE,cAAC,GAAD,CAAsBjtB,KAAM6P,EAAE,oCAEhC,qBAAKxL,IAAK6B,GAA+C,WAAjCioB,GAA4C9e,KAAK,SACvE,0BAAOQ,EAAE,uBAA6B,yBACrCue,EAAsBve,EAAE,6BAA8B,CAAC0D,aAAc6a,IAAwBve,EAAE,gCAAgC,0BAElI,qBAAKxL,IAAK6B,GAAqC,WAAvB4mB,GAAkCzd,KAAK,SAC7D,0BAAOQ,EAAE,uBAA6B,yBACrCkd,EAAoBld,EAAE,6BAA8B,CAAC0D,aAAcwZ,IAAsBld,EAAE,gCAAgC,4B,UC2G9H0e,GAAuE,SAAC,GAAgC,IAA/B7f,EAA8B,EAA9BA,UAAW8f,EAAmB,EAAnBA,cAEhF3e,EAAMC,eAAND,EAEFhB,EAAWC,cACXzG,EAAwB2G,YAAY9B,IAEpCuhB,EAAsB,WAC1B5f,EAAShE,GAAyB2jB,KAG9BE,EAAsBrqB,cAAI,CAC9BE,gBAAiBiqB,IAAkBnmB,EAAwB,OAAS,OACpE9B,QAAS,QAFoB,OAK/B,OACE,qBAAKlC,IAAG,CAAGe,EAAiBspB,EAApB,OAA0C7lB,MAAOgH,EAAE,qCACzDR,KAAK,SAASC,SAAU,EACxBY,aAAYL,EAAE,oCAAqC,CAACnB,cACpDa,QAAUkf,EACVjf,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1FqwB,MAEF,0BAAO/f,KAKEigB,GAvK0B,WAAO,IAEtC9e,EAAMC,eAAND,EAGF9G,EAAYiG,YAAYtB,IACxBjR,EAAcuS,YAAYxS,GAC1BF,EAAa0S,YAAYtS,GACzB2L,EAAwB2G,YAAY9B,IAEpCihB,EAA+Bnf,YAAY8c,IAC3CsC,EAAsBpf,YAAYgd,IAClC4C,EAAa5f,YAAY6f,IACzBC,EAAY9f,YAAY+f,IAsBxBC,EAAyB3qB,cAAI,aACjCkC,QAAS,OACT9C,QAA0B,qBAAhBhH,GAAqD,IAAfH,EAAoB,OAAS,OAC7EoH,cAAe,SACfgC,eAAgB,SAChBC,WAAY,UACRjB,EAAwB,IAAI,IANA,OAS5BuqB,EAAkC5qB,cAAI,yBAC1CZ,QAAS,OACTC,cAAe,SACfiC,WAAY,QACRjB,EAAwB,IAAI,IAJS,IAKzC2mB,SAAU,OACV6D,UAAW,SAN8B,OAUrC3F,EAAS,SAAC4F,EAAkBC,EAAgCC,EAChE1gB,EAAmC2gB,EAAgCnpB,EACnEoN,GACA,OACE,qBAAKlP,IAAK2qB,GACR,wBAAKG,GACJC,EACCC,GACA,qBAAKhrB,IAAK4qB,EAAiCpmB,MAAM,2BA5CrDE,EAAU8E,KAAK,SAACggB,EAAoBthB,GAArB,OACb,cAAC,GAAD,CAAgBnO,IAAKmO,EAAOmC,UAAWmf,EAASjyB,KAAM4yB,cAAejiB,QA+CpEoC,EACD,qBAAKtK,IAAK2B,IACR,cAAC,GAAD,CAAY1J,WAAY,EAAGqrB,MAAO9X,EAAE,iCAAkCpB,SAAUwe,MAE/EqC,GAEH,qBAAKjrB,IAAK6B,GAA8B,WAAhBC,GAA2BkJ,KAAK,SACtD,0BAAOQ,EAAE,uBAA6B,yBACrC0D,EAAe1D,EAAE,6BAA8B,CAAC0D,aAAc6a,IAAwBve,EAAE,gCAAgC,4BAuDjI,OA/CM9G,EAAUpK,QAAU,EAEpB4qB,EACE1Z,EAAE,yCACF,cAAC0f,GAAA,EAAD,CAAOC,QAAQ,qCAAf,2EAC0E,yBAD1E,oEAIA,EACA,GACA,cAAC,GAAD,MACAZ,EACAE,GAG0B,IAArB/lB,EAAUpK,OAEjB4qB,EACE1Z,EAAE,yCACF,cAAC0f,GAAA,EAAD,CAAOC,QAAQ,sCAAf,0DAC0D,CAAC3B,SAAU9kB,EAAU,GAAGnN,MADlF,KAC0F,yBAD1F,8BAIA,EACA,GACA,cAAC,GAAD,CAAsBoE,KAAM6P,EAAE,8CAC9Bse,EACAC,GAKF7E,EACE1Z,EAAE,mCACF,yBACGA,EAAE,0CAEL,EACA,yBAAK,uBA9FP9G,EAAUpK,OAAS0J,GAAyBU,EAAUV,GAAuBuhB,YAE7E7gB,EAAUV,GAAuBuhB,YAG3B,SA0FJ,cAAC,GAAD,CAAsB5pB,KAAO6P,EAAE,8CAC/Bse,EACAC,IC9HV,I,0HAoCaqB,GAAuF,SAAC,GAAmC,IAAlCnzB,EAAiC,EAAjCA,WAAYqrB,EAAqB,EAArBA,MAAOlZ,EAAc,EAAdA,SAGjHI,EAAWC,cAEX4gB,EAAe,WACnB7gB,EAAStS,EAAcD,KAGnBqzB,EAAe,GAOrB,OACE,qBAAKtrB,IAAG,CAAGe,EAAkBuqB,EAArB,OACNtgB,KAAK,SAASC,SAAU,EACxBC,QAAUmgB,EACVlgB,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1FsxB,MAEF,cAAC,IAAD,CAAiBhgB,KAAMjB,EAAUkB,KAAK,OACtC,0BAAOgY,KAMEiI,GAlEe,WAE5B,IAAMtzB,EAAa0S,YAAYtS,GAEzBmzB,EAAgBxrB,cAAI,CACxBZ,QAAwB,IAAfnH,EAAmB,OAAQ,SADb,OAInBwzB,EAAezrB,cAAI,CACvBZ,QAAwB,IAAfnH,EAAmB,OAAQ,SADd,OAIlByzB,EAAe1rB,cAAI,CACvBZ,QAAwB,IAAfnH,EAAmB,OAAQ,SADd,OAIxB,OACE,yBACE,qBAAK+H,IAAKwrB,GACR,cAAC,GAAD,OAEF,qBAAKxrB,IAAKyrB,GACR,cAAC,GAAD,MACA,cAAC,GAAD,MACA,cAAC,GAAD,OAEF,qBAAKzrB,IAAK0rB,GACR,cAAC,GAAD,S,8DC1CFC,GAAmE,SAAC,GAAqB,IAApBp0B,EAAmB,EAAnBA,KAAMgsB,EAAa,EAAbA,QAEzEqI,EAAa5rB,cAAI,CACrBZ,QAAS,OACTC,cAAe,SACf2G,MAAO,SAHa,OAMhB6lB,EAAY,GAIlB,OACE,qBAAK7rB,IAAK4rB,GACR,oBAAI5rB,IAAK6rB,GAAet0B,GACvBgsB,EAAQ/Z,KAAI,SAACsiB,EAA6B5jB,GAA9B,OACX,cAAC,GAAD,CAAO6jB,OAAQD,EAAO/xB,IAAKmO,S,8dAM7B8jB,GAAkD,SAAC,GAAc,IAAbD,EAAY,EAAZA,OAEhDvgB,EAAMC,eAAND,EAEFygB,EAAajsB,cAAI,CACrBZ,QAAS,OACTC,cAAe,MACf2G,MAAO,OACPkmB,cAAe,MACfhb,WAAY,OALQ,OAQhBib,EAAU,GAeVC,EAAgBpsB,cAAI,aACxBqsB,UAAW,SACXvrB,WAAY,OACZ1B,QAAS,OACTC,cAAe,OACXgB,EAAwB,IAAI,IALT,OAQnBisB,EAAc,GASdC,EAAO,GAKb,OACE,qBAAKvsB,IAAKisB,GACR,qBAAKjsB,IAAKmsB,GAAaJ,EAAOx0B,MAAQiU,EAAE,kCACvCugB,EAAO3e,UAAU5D,KAAI,SAACqD,EAAU3E,EAAOskB,GAAlB,OACpB,qBAAKxsB,IAAKosB,EAAeryB,IAAKmO,GAC3B2E,EAASA,SAASsJ,WAAWhc,MAAM,KAAKqP,KAAI,SAACijB,EAAWvkB,GAAZ,OAC3C,qBAAKlI,IAAKssB,EAAgBvyB,IAAKmO,GAAQukB,MAEzC,qBAAKzsB,IAAKusB,GAAUC,EAAIlyB,OAAS,IAAM4N,GAASsD,EAAE,6CAsE7CkhB,GA9DwB,WAAO,IAEpClhB,EAAMC,eAAND,EAEFqH,EAAS8Z,kCAETC,EAAc5sB,cAAI,aACtBZ,QAAS,OACTC,cAAe,MACf2nB,SAAU,QACN3mB,EAAwB,IAAI,IAJX,OA4CvB,OACE,yBACE,wBACCmL,EAAE,4BAxCQ,WACb,GAAIqH,GAAUwD,OAAOkJ,KAAK1M,GAAQvY,OAAS,EAAG,CAE5C,IAAIN,EAAkD,GACtDA,EAAIwR,EAAE,sCAAwC,GAG9C,cAAwB6K,OAAOkN,QAAQ1Q,GAAvC,eAAgD,CAAC,IAAnC1b,EAAkC,wBAC1CA,EAAM2V,MACJ9S,EAAI7C,EAAM2V,OACZ9S,EAAI7C,EAAM2V,OAAOjO,KAAK1H,GAEtB6C,EAAI7C,EAAM2V,OAAS,CAAC3V,GAGtB6C,EAAIwR,EAAE,sCAAsC3M,KAAK1H,GAIrD,IAAM01B,EAAwB,GAC9B,IAAK,IAAM9yB,KAAOC,EACZA,EAAID,GAAKO,OAAS,GACpBuyB,EAAOhuB,KAAK,cAAC,GAAD,CAAOtH,KAAMwC,EAAKwpB,QAASvpB,EAAID,GAAMA,IAAKA,KAI1D,OACE,qBAAKiG,IAAK4sB,GACPC,GAMP,OAAO,yBAAMrhB,EAAE,kCASZ0Z,K,sDCjBQ4H,GAxGmB,WAEhC,IAAM/0B,EAAgB4S,YAAY7S,GAC5Bi1B,EAAepiB,YAAYqiB,IAC3BC,EAAkBtiB,YAAYuiB,IAGpCC,cAAgB,SAAC/hB,IACX2hB,GAAgBE,IAClB7hB,EAAM+G,oBAMV,IAAIib,GAAc,EACdC,EAAe,SAAC31B,GAClB,OAAIK,IAAkBL,GACpB01B,GAAc,EACP,CAAEhuB,QAAS,SAEb,CAAEA,QAAS,SAGd4f,EAAehf,cAAI,uCACpBqtB,EAAav2B,EAAmBM,UADb,IAEtBiI,cAAe,SACfgC,eAAgB,gBACZhB,EAAwB,IAAI,IAJV,IAKtBitB,aAAc,OACdC,YAAa,SANS,OASlB7N,EAAgB1f,cAAI,uCACrBqtB,EAAav2B,EAAmBiC,WAG/BsH,EAAwB,IAAI,IAJT,IAKvBitB,aAAc,OACdC,YAAa,SANU,OASnBC,EAAmBxtB,cAAI,uCACxBqtB,EAAav2B,EAAmBoC,iBADT,IAE1BmG,cAAe,SACfouB,aAAc,gBACVptB,EAAwB,IAAI,IAJN,IAK1BitB,aAAc,OACdrnB,OAAQ,SANkB,OAStBynB,EAAc1tB,cAAI,uCACnBqtB,EAAav2B,EAAmB+T,SADd,IAErBxL,cAAe,SACfgC,eAAgB,gBACZhB,EAAwB,IAAI,IAJX,IAKrBitB,aAAc,OACdrnB,OAAQ,SANa,OASjB0nB,EAAwB3tB,cAAI,uCAC7BqtB,EAAav2B,EAAmBsV,mBADJ,IAE/B/M,cAAe,SACfgC,eAAgB,gBACZhB,EAAwB,IAAI,IAJD,IAK/BitB,aAAc,OACdC,YAAa,SANkB,OAS3BK,EAAe5tB,cAAI,aACvBZ,QAASguB,EAAc,OAAS,OAChC/tB,cAAe,SACfiC,WAAY,SACZY,QAAS,QACL7B,EAAwB,IAAI,IALV,OAQxB,OACG,sBAAML,IAAG,GAAmBgL,KAAK,QAChC,qBAAKhL,IAAKgf,GACN,cAAC,GAAD,MACA,cAAC,GAAD,MACA,cAAC,GAAD,OAEJ,qBAAKhf,IAAK0f,GACN,cAAC,GAAD,OAEJ,qBAAK1f,IAAKwtB,GACN,cAAC,GAAD,OAEJ,qBAAKxtB,IAAK0tB,GACR,cAAC,GAAD,OAEF,qBAAK1tB,IAAK2tB,GACN,cAAC,GAAD,OAEJ,qBAAK3tB,IAAK4tB,GACR,cAAC,IAAD,CAAiBviB,KAAM4e,IAAS3e,KAAK,QADvC,iBC7DAuiB,GAAgC,WAAO,IAEnCriB,EAAMC,eAAND,EAEFsiB,EAAa,WACjBn1B,OAAOC,SAASm1B,QAAO,IAGzB,OACE,qBAAK/tB,IAAG,CAAGe,EAAkBW,GAArB,OAA6C8C,MAAOgH,EAAE,4BAC5DR,KAAK,SAASC,SAAU,EACxBC,QAAU4iB,EACV3iB,UAAW,SAACC,GAAmE,MAAdA,EAAMrR,KAA6B,UAAdqR,EAAMrR,KAC1F+zB,MAGF,0BAAOtiB,EAAE,8BAKAwiB,GAlEe,WAAO,IAE3BxiB,EAAMC,eAAND,EAGFyd,EAAWte,YAAYue,IACvB3kB,EAAWoG,YAAY3B,IAmBvBilB,EAAcjuB,cAAI,aACtBgG,MAAO,OACPC,OAAQ,OACR7G,QAAS,OACTC,cAAe,SACfgC,eAAgB,SAChBC,WAAY,UACRjB,EAAwB,IAAI,IAPX,OAUvB,OACE,qBAAKL,IAAKiuB,EAAazpB,MAAM,WAC3B,cAAC,IAAD,CAAiB6G,KA5BF,cAAb4d,EACK9B,IAEA+G,IAyBwB5iB,KAAK,QACpC,yBArBe,cAAb2d,EACKzd,EAAE,yBACa,YAAbyd,EACFzd,EAAE,mBAAoB,CAACjH,SAAS,GAAD,OAAK,IAAIhG,KAAiB,EAAXgG,GAAe/F,cAAcC,OAAO,GAAI,WADxF,GAoBU,cAAbwqB,GAA6B,cAAC,GAAD,Q,sFCJtBrsB,GApCe,WAAO,IAE3B4O,EAAMC,eAAND,EAGF0D,EAAevE,YAAY4E,IAC3BJ,EAAexE,YAAY6E,IAE3B2e,EAAY,GAMZF,EAAcjuB,cAAI,aACtBiG,OAAQ,OACR7G,QAAS,OACTC,cAAe,SACfgC,eAAgB,SAChBC,WAAY,UACRjB,EAAwB,IAAI,IANX,OASvB,OACE,qBAAKL,IAAKiuB,GACR,yBAAMziB,EAAE,0BACR,cAAC,IAAD,CAAiBH,KAAM+iB,IAAS9iB,KAAK,QACrC,0BAAO4D,GAAoB,yBAC3B,qBAAKlP,IAAKmuB,GACR,0BAAO3iB,EAAE,kBAAwB,yBACjC,0BAAO2D,GAA8B3D,EAAE,oC,mNCUhC6iB,GA/CiB,WAAO,IAE7B7iB,EAAMC,eAAND,EAEF8iB,EAAY,GAoBlB,OACE,qBAAKtuB,IAAKsuB,GACR,wBAAK9iB,EAAE,yBACP,yBACE,wBACCA,EAAE,0BAEH,wBACGA,EAAE,2BACH,kEACCA,EAAE,4BAEL,wBACGA,EAAE,iCACH,mBAAG+iB,KAAK,0DAAR,yBCQKC,GA3CY,WAEzB,IAAMC,EAAQ9jB,YAAYqe,IACpBxI,EAAU7V,YAAY0E,IA2BtBqf,EAAY,CAChBtvB,QAAS,OACTC,cAAe,MACf4G,OAAQ,QAGV,OACE,cAAC,IAAM0oB,SAAP,KA7BK13B,EAASsB,eAIHk2B,EAEP,cAAC,GAAD,MAEOjO,EAEP,cAAC,GAAD,MAIA,qBAAKxgB,IAAK0uB,GACR,cAAC,GAAD,MACA,cAAC,GAAD,OAdF,cAAC,GAAD,QCXOE,I9BNOvwB,G8BMPuwB,GATf,WACE,OACE,qBAAKC,UAAU,OACb,cAAC,EAAD,MACA,cAAC,GAAD,QCMSC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBz1B,MAAK,YAAkD,IAA/C01B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCCO,eAAe,CAC5BC,QAAS,CACPx3B,cAAey3B,EACfp3B,YAAaq3B,EACbrnB,WAAYsnB,GACZhI,kBAAmBiI,GACnB/H,4BAA6BgI,GAC7B3G,SAAU4G,GACV7hB,cAAe8hB,GACfxgB,WAAYygB,M,SCAVC,GAAa9sB,QAAQ+sB,KAAK,CAC9B72B,KjCboBiF,GiCcd,IjCd6B,IAAI6E,SAAQ,SAAC+T,EAAS9T,GAAV,OAAqB+sB,WAAWjZ,EAAS5Y,UiCqB1F2xB,GAAWz2B,MAET,WACE42B,IAASjL,OACP,cAAC,IAAMkL,WAAP,KACI,cAAC,IAAD,CAAUC,MAAOA,IACf,cAAC,KAAD,CAAyBC,MAAOrM,MAE9B,cAAC,iBAAD,KACE,cAAC,GAAD,UAKVhlB,SAASsxB,eAAe,YAK5B,SAAAj0B,GAAC,OAvBamD,EAuBF,gEACyBnD,EAAE8G,SACrC,yBAFU,uFAtBZ+sB,IAASjL,OAAOzlB,EAAMR,SAASsxB,eAAe,SADjC,IAAC9wB,KAiChBqvB,O","file":"static/js/main.f7b4f286.chunk.js","sourcesContent":["export interface Segment {\n  id: string,\n  start: number,\n  end: number,\n  deleted: boolean,\n}\n\nexport interface Track {\n  id: string,\n  uri: string,\n  flavor: any,\n  audio_stream: any,\n  video_stream: any,\n}\n\nexport interface Workflow {\n  id: string,\n  name: string,\n  description: string,\n  displayOrder: number,\n}\n\nexport interface TimelineState {\n  segments: Segment[]\n  scrubberPos: number\n}\n\nexport interface PostEditArgument {\n  segments: Segment[]\n  tracks: Track[]\n}\n\nexport interface PostAndProcessEditArgument extends PostEditArgument{\n  workflow: [{id: string}]\n}\n\n// Use respective i18n keys as values\nexport enum MainMenuStateNames {\n  cutting = \"mainMenu.cutting-button\",\n  metadata = \"mainMenu.metadata-button\",\n  trackSelection = \"mainMenu.select-tracks-button\",\n  thumbnail = \"mainMenu.thumbnail-button\",\n  finish = \"mainMenu.finish-button\",\n  keyboardControls = \"mainMenu.keyboard-controls-button\",\n}\n\nexport interface httpRequestState {\n  status: 'idle' | 'loading' | 'success' | 'failed',\n  error: string | undefined\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { MainMenuStateNames} from '../types'\n\nexport interface mainMenu {\n  value: MainMenuStateNames,\n}\n\nconst initialState: mainMenu = {\n  value: MainMenuStateNames.cutting,\n}\n\n/**\n * Slice for the main menu state\n */\nexport const mainMenuSlice = createSlice({\n  name: 'mainMenuState',\n  initialState,\n  reducers: {\n    setState: (state, action: PayloadAction<mainMenu[\"value\"]>) => {\n      state.value = action.payload;\n    }\n  }\n})\n\nexport const { setState, } = mainMenuSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectMainMenuState = (state: { mainMenuState: { value: mainMenu[\"value\"]; }; }) => state.mainMenuState.value\n\nexport default mainMenuSlice.reducer\n","/**\n * Loads config values from\n * - a settings file\n * - GET parameters\n * and exports them.\n * Code was largely adapted from https://github.com/elan-ev/opencast-studio/blob/master/src/settings.js (January 11th, 2021)\n */\nimport parseToml from '@iarna/toml/parse-string';\nimport deepmerge from 'deepmerge';\n\n/**\n * Local constants\n */\nconst CONTEXT_SETTINGS_FILE = 'editor-settings.toml';\n\n// Sources that values can come from.\nconst SRC_SERVER = 'src-server';\nconst SRC_URL = 'src-url';\n\n/**\n * Possible configuration values for a metadata catalog field\n */\nexport interface configureFieldsAttributes {\n  show: boolean,\n  readonly: boolean,\n}\n\n/**\n * Settings interface\n */\ninterface iSettings {\n  mediaPackageId: string | undefined,\n  opencast: {\n    url: string,\n    name: string | undefined,\n    password: string | undefined,\n  },\n  metadata: {\n    show: boolean,\n    configureFields: { [key: string]: { [key: string]: configureFieldsAttributes } }  | undefined,\n  },\n  trackSelection: {\n    show: boolean,\n  },\n  thumbnail: {\n    show: boolean,\n  }\n}\n\n/**\n * Settings objects\n * defaultSettings: Sets default values\n * configFileSettings: contains values from the config file\n * urlParameterSettings: contains values from GET parameters\n * settings: contains the combined values from all other setting objects\n */\nvar defaultSettings: iSettings = {\n  mediaPackageId: undefined,\n  opencast: {\n    url: window.location.origin,\n    name: undefined,\n    password: undefined,\n  },\n  metadata: {\n    show: true,\n    configureFields: undefined,\n  },\n  trackSelection: {\n    show: true,\n  },\n  thumbnail: {\n    show: false,\n  }\n}\nvar configFileSettings: iSettings\nvar urlParameterSettings: iSettings\nexport var settings: iSettings\n\n/**\n * Entry point. Loads values from settings into the exported variables\n * Priorities are:\n * 1. GET Parameters\n * 2. Settings file\n * 3. Default values\n */\nexport const init = async () => {\n  // Get settings from config file\n  await loadContextSettings().then((result) => {\n    configFileSettings = validate(result, false, SRC_SERVER, \"from server settings file\")\n  })\n\n  // Get settings from URL query.\n  var urlParams = new URLSearchParams(window.location.search);\n\n  let rawUrlSettings = {};\n  urlParams.forEach((value, key) => {\n    // Create empty objects for full path (if the key contains '.') and set\n    // the value at the end.\n    let obj : {[k: string]: any} = rawUrlSettings;\n    if (key.startsWith('opencast.')) {\n      return;\n    }\n    const segments = key.split('.');\n    segments.slice(0, -1).forEach((segment) => {\n      if (!(segment in obj)) {\n        obj[segment] = {};\n      }\n      obj = obj[segment];\n    });\n    obj[segments[segments.length - 1]] = value;\n  });\n\n  urlParameterSettings = validate(rawUrlSettings, true, SRC_URL, 'given as URL GET parameter');\n\n  // Combine results\n  settings = merge.all([defaultSettings, configFileSettings, urlParameterSettings]) as iSettings;\n};\n\n/**\n * Attempts to load toml settings file\n */\nconst loadContextSettings = async () => {\n\n  // Try to retrieve the context settings.\n  let basepath = process.env.PUBLIC_URL || '/';\n  if (!basepath.endsWith('/')) {\n    basepath += '/';\n  }\n\n  // Construct path to settings file. If the `REACT_APP_SETTINGS_PATH` is\n  // given and starts with '/', it is interpreted as absolute path from the\n  // server root.\n  const settingsPath = process.env.REACT_APP_SETTINGS_PATH || CONTEXT_SETTINGS_FILE;\n  const base = settingsPath.startsWith('/') ? '' : basepath;\n  const url = `${window.location.origin}${base}${settingsPath}`;\n  let response;\n  try {\n    response = await fetch(url);\n  } catch (e) {\n    console.warn(`Could not access '${settingsPath}' due to network error!`, e || \"\");\n    return null;\n  }\n\n  if (response.status === 404) {\n    // If the settings file was not found, we silently ignore the error. We\n    // expect many installation to provide this file.\n    console.debug(`'${settingsPath}' returned 404: ignoring`);\n    return null;\n  } else if (!response.ok) {\n    console.error(\n      `Fetching '${settingsPath}' failed: ${response.status} ${response.statusText}`\n    );\n    return null;\n  }\n\n  if (response.headers.get('Content-Type')?.startsWith('text/html')) {\n    console.warn(`'${settingsPath}' request has 'Content-Type: text/html' -> ignoring...`);\n    return null;\n  }\n\n  try {\n    return parseToml(await response.text());\n  } catch (e) {\n    console.error(`Could not parse '${settingsPath}' as TOML: `, e);\n    throw new SyntaxError(`Could not parse '${settingsPath}' as TOML: ${e}`);\n  }\n\n};\n\n/**\n * Validate the given `obj` with the global settings `SCHEMA`. If `allowParse`\n * is true, string values are attempted to parse into the expected type. `src`\n * must be one of `SRC_SERVER`, `SRC_URL` or `SRC_LOCAL_STORAGE`.\n * `srcDescription` is just a string for error messages specifying where `obj`\n * comes from.\n * */\nconst validate = (obj: Record<string, any> | null, allowParse: boolean, src: string, sourceDescription: string) => {\n  // Validates `obj` with `schema`. `path` is the current path used for error\n  // messages.\n  const validate = (schema: any, obj: Record<string, any> | null, path: string) => {\n    if (typeof schema === 'function') {\n      return validateValue(schema, obj, path);\n    } else {\n      return validateObj(schema, obj, path);\n    }\n  };\n\n  // Validate a settings value with a validation function. Returns the final\n  // value of the setting or `null` if it should be ignored.\n  const validateValue = (validation: (arg0: any, arg1: boolean, arg2: string) => any, value: Record<string, any> | null, path: string) => {\n    try {\n      const newValue = validation(value, allowParse, src);\n      return newValue === undefined ? value : newValue;\n    } catch (e) {\n      console.warn(\n        `Validation of setting '${path}' (${sourceDescription}) with value '${value}' failed: `\n          + `${e}. Ignoring.`\n      );\n      return null;\n    }\n  };\n\n  // Validate a settings object/namespace. `schema` and `obj` need to be\n  // objects.\n  const validateObj = (schema: any, obj: Record<string, any> | null, path: string) => {\n    // We iterate through all keys of the given settings object, checking if\n    // each key is valid and recursively validating the value of that key.\n    let out : {[k: string]: any} = {};\n    for (const key in obj) {\n      const newPath = path ? `${path}.${key}` : key;\n      if (key in schema) {\n        const value = validate(schema[key], obj[key], newPath);\n\n        // If `null` is returned, the validation failed and we ignore this\n        // value.\n        if (value !== null) {\n          out[key] = value;\n        }\n      } else {\n        console.warn(\n          `'${newPath}' (${sourceDescription}) is not a valid settings key. Ignoring.`\n        );\n      }\n    }\n\n    return out;\n  };\n\n  return validate(SCHEMA, obj, \"\");\n}\n\n\n// Validation functions for different types.\nconst types = {\n  'string': (v: any, allowParse: any) => {\n    if (typeof v !== 'string') {\n      throw new Error(\"is not a string, but should be\");\n    }\n  },\n  'boolean': (v: string, allowParse: any) => {\n    if (typeof v === 'boolean') {\n      return;\n    }\n\n    if (allowParse) {\n      if (v === 'true') {\n        return true;\n      }\n      if (v === 'false') {\n        return false;\n      }\n      throw new Error(\"can't be parsed as boolean\");\n    } else {\n      throw new Error(\"is not a boolean\");\n    }\n  },\n  'objectsWithinObjects': (v: any, allowParse: any) => {\n    for (let catalogName in v) {\n      if (typeof catalogName !== 'string') {\n        throw new Error(\"is not a string, but should be\");\n      }\n      for (let fieldName in v[catalogName]) {\n        if (typeof fieldName !== 'string') {\n          throw new Error(\"is not a string, but should be\");\n        }\n        for (let attributeName in v[catalogName][fieldName]) {\n          if (typeof attributeName !== 'string') {\n            throw new Error(\"is not a string, but should be\");\n          }\n          if (attributeName === 'show' && typeof v[catalogName][fieldName][attributeName] !== 'boolean') {\n            throw new Error(\"is not a boolean\");\n          }\n          if (attributeName === 'readonly' && typeof v[catalogName][fieldName][attributeName] !== 'boolean') {\n            throw new Error(\"is not a boolean\");\n          }\n        }\n      }\n    }\n  }\n};\n\n// Defines all potential settings and their types.\n//\n// Each setting value has to be a validation function. Such a function takes two\n// arguments: the input value `v` and the boolean `allowParse` which specifies\n// whether the input might be parsed into the correct type (this is only `true`\n// for GET parameters). The validation should throw an error if the input value\n// is not valid for the setting. If the function returns `undefined`, the input\n// value is valid and used. If the validator returns a different value, the\n// input is valid, but is replaced by that new value. See the `types` object\n// above for some examples.\nconst SCHEMA = {\n  mediaPackageId: types.string,\n  opencast: {\n    url: types.string,\n    name: types.string,\n    password: types.string,\n  },\n  metadata: {\n    show : types.boolean,\n    configureFields: types.objectsWithinObjects,\n  },\n  trackSelection: {\n    show : types.boolean,\n  },\n  thumbnail: {\n    show : types.boolean,\n  }\n}\n\nconst merge = (a: iSettings, b: iSettings) => {\n  return deepmerge(a, b, { arrayMerge });\n};\nmerge.all = (array: object[]) => deepmerge.all(array, { arrayMerge })\nconst arrayMerge = (destinationArray: any, sourceArray: any, options: any) => sourceArray;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface finish {\n  value: \"Save changes\" | \"Start processing\" | \"Discard changes\" | undefined,\n  pageNumber: number,\n}\n\nconst initialState: finish = {\n  value: \"Start processing\",\n  pageNumber: 0,\n}\n\n/**\n * Slice for the main menu state\n */\nexport const finishSlice = createSlice({\n  name: 'finishState',\n  initialState,\n  reducers: {\n    setState: (state, action: PayloadAction<finish[\"value\"]>) => {\n      state.value = action.payload;\n    },\n    setPageNumber: (state, action) => {\n      state.pageNumber = action.payload;\n    }\n  }\n})\n\n// Export Actions\nexport const { setState, setPageNumber } = finishSlice.actions\n\n// Export Selectors\nexport const selectFinishState = (state: { finishState: { value: finish[\"value\"]; }; }) => state.finishState.value\nexport const selectPageNumber = (state: { finishState: { pageNumber: finish[\"pageNumber\"]; }; }) => state.finishState.pageNumber\n\nexport default finishSlice.reducer\n","export const roundToDecimalPlace = (num: number, decimalPlace: number) => {\n  let decimalFactor = Math.pow(10, decimalPlace)\n  return Math.round((num + Number.EPSILON) * decimalFactor) / decimalFactor\n}\n\n\n// Returns a promise that resolves after `ms` milliseconds.\nexport const sleep = (ms: number) => new Promise((resolve, reject) => setTimeout(resolve, ms));\n\n\n// Get an understandable time string for ARIA\nexport const convertMsToReadableString = (ms: number): string => {\n  let hours = new Date((ms ? ms : 0)).toISOString().substr(11, 2)\n  let minutes = new Date((ms ? ms : 0)).toISOString().substr(14, 2)\n  let seconds = new Date((ms ? ms : 0)).toISOString().substr(17, 2)\n\n  let result = []\n  if (parseInt(hours) > 0) { result.push(hours + \" hours, \")}\n  if (parseInt(minutes) > 0 || parseInt(hours) > 0) { result.push(minutes + \" minutes, \")}\n  result.push(seconds + \" seconds\")\n\n  return result.join(\"\")\n}\n\n/**\n * Parses JSON. Returns [err, result]\n * @param str string that should be parsed\n */\nexport function safeJsonParse(str : string) {\n  try {\n      return [null, JSON.parse(str)];\n  } catch (err) {\n      return [err];\n  }\n}\n\n/**\n * Checks whether the css property gap for flexbox is supported by the browser.\n * Currently, this cannot be checked with \"@support\", so we use this workaround\n * instead.\n */\nvar flexGapIsSupported: boolean | undefined;\nexport function checkFlexGapSupport() {\n  // Use the cached value if it has been defined\n\tif (flexGapIsSupported !== undefined) {\n\t\treturn flexGapIsSupported\n\t}\n\n\t// Create a flex container with row-gap set\n\tconst flex = document.createElement('div')\n\tflex.style.display = 'flex'\n\tflex.style.flexDirection = 'column'\n\tflex.style.rowGap = '1px'\n\tflex.style.position = 'absolute'\n\n\t// Create two, elements inside it\n\tflex.appendChild(document.createElement('div'))\n\tflex.appendChild(document.createElement('div'))\n\n\t// Append to the DOM (needed to obtain scrollHeight)\n\tdocument.body.appendChild(flex)\n\n  // Flex container should be 1px high due to the row-gap\n  flexGapIsSupported = flex.scrollHeight === 1\n\n  // Remove element from the DOM after you are done with it\n  if(flex.parentNode) {\n    flex.parentNode.removeChild(flex)\n  }\n\n\treturn flexGapIsSupported\n}","/**\n * This file contains general css stylings\n */\nimport { css, Global } from '@emotion/react'\nimport React from \"react\";\nimport emotionNormalize from 'emotion-normalize';\nimport { checkFlexGapSupport } from './util/utilityFunctions';\n\n/**\n * An emotion component that inserts styles globally\n * Is removed when the styles change or when the Global component unmounts.\n */\nexport const GlobalStyle: React.FC = () => {\n  return (\n    <Global styles={globalStyle} />\n  );\n}\n\n/**\n * CSS for the global style component\n */\nexport const globalStyle = css({\n  emotionNormalize,\n  body: {\n    backgroundColor: 'snow',\n    fontSize: 'medium',\n    // Makes the body span to the bottom of the page\n    minHeight: \"100vh\",\n  },\n});\n\n\n/**\n * CSS for replacing flexbox gap in browers that do not support it\n * Does not return a css prop, but is meant as a direct replacement for \"gap\"\n * Example: ...(flexGapReplacementStyle(30, false))\n */\nexport const flexGapReplacementStyle = (flexGapValue: number, flexDirectionIsRow: boolean) => {\n\n  let half = flexGapValue / 2\n  let quarter = flexGapValue / 4\n\n  return (\n    {\n    // Use gap if supported\n    ...(checkFlexGapSupport()) && {gap: `${flexGapValue}px`},\n    // Else use margins\n    ...(!checkFlexGapSupport()) &&\n      {\n        \">*\": { // For each child\n          marginTop: `${quarter}px`,\n          marginBottom: `${quarter}px`,\n          marginRight: `${half}px`,\n          marginLeft: `${half}px`,\n        },\n        ...(flexDirectionIsRow) && {\n          \">*:first-of-type\": {\n            marginLeft: '0px',\n          },\n          \">*:last-child\": {\n            marginRight: '0px',\n          },\n        },\n      }\n    }\n  );\n}\n\n/**\n * CSS for buttons\n */\nexport const basicButtonStyle = css({\n  borderRadius: '10px',\n  cursor: \"pointer\",\n  // Animation\n  transitionDuration: \"0.3s\",\n  transitionProperty: \"transform\",\n  \"&:hover\": {\n    transform: 'scale(1.1)',\n  },\n  \"&:focus\": {\n    transform: 'scale(1.1)',\n  },\n  \"&:active\": {\n    transform: 'scale(0.9)',\n  },\n  // Flex position child elements\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(flexGapReplacementStyle(10, false)),\n  textAlign: 'center' as const,\n});\n\n/**\n * CSS for deactivated buttons\n */\nexport const deactivatedButtonStyle = css({\n  borderRadius: '10px',\n  cursor: \"pointer\",\n  opacity: \"0.4\",\n  // Flex position child elements\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(flexGapReplacementStyle(10, false)),\n  textAlign: 'center' as const,\n});\n\n/**\n * CSS for nagivation styled buttons\n */\nexport const nagivationButtonStyle = css({\n  width: '200px',\n  padding: '16px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  justifyContent: 'space-around'\n })\n\n/**\n * CSS for a container that holds back/forward buttons\n */\nexport const backOrContinueStyle = css(({\n  display: 'flex',\n  flexDirection: 'row' as const,\n  ...(flexGapReplacementStyle(20, false)),\n}))\n\n/**\n * CSS for ariaLive regions that should not be visible\n */\nexport const ariaLive = css({\n  position: 'absolute',\n  left: '-99999px',\n  height: '1px',\n  width: '1px',\n  overflow: 'hidden',\n})\n\n/**\n * CSS for displaying of errors\n */\nexport const errorBoxStyle = (errorStatus: boolean) => {\n  return (\n    css({\n      ...(!errorStatus) && {display: \"none\"},\n      borderColor: 'red',\n      borderStyle: 'dashed',\n      fontWeight: 'bold',\n      padding: '10px',\n    })\n  );\n}\n","// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nimport { settings } from '../config';\n\n/**\n * Client I stole this form a react tutorial\n */\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application/json' }\n\n  // Attempt Http basic auth if we got credentials\n  let authHeaders = {}\n  if (settings.opencast.name && settings.opencast.password) {\n    const encoded = btoa(unescape(encodeURIComponent(\n      settings.opencast.name + \":\" + settings.opencast.password\n    )));\n    authHeaders = { 'Authorization': `Basic ${encoded}` };\n  }\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n      ...authHeaders,\n    },\n  }\n\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let data\n  let text\n  let response\n  try {\n    response = await window.fetch(endpoint, config)\n    text = await response.text()\n\n    if (response.url.includes(\"login.html\")) {\n      throw new Error(\"Got redirected to login page, authentification failed.\")\n    }\n\n    if (response.ok) {\n      text.length ? data = JSON.parse(text) : data = ''\n      return data\n    }\n    throw new Error(response.statusText)\n  } catch (err) {\n    return Promise.reject(response.status ?\n        \"Status \" + response.status + \": \" + text :\n        err.message\n      )\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'GET' })\n}\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body })\n}","import { createSlice, nanoid, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\n\nimport { Segment, httpRequestState, Track, Workflow }  from '../types'\nimport { roundToDecimalPlace } from '../util/utilityFunctions'\nimport { WritableDraft } from 'immer/dist/internal';\nimport { settings } from '../config';\n\nexport interface video {\n  isPlaying: boolean,             // Are videos currently playing?\n  isPlayPreview: boolean,         // Should deleted segments be skipped?\n  previewTriggered: boolean,      // Basically acts as a callback for the video players.\n  clickTriggered: boolean,        // Another video player callback\n  currentlyAt: number,            // Position in the video in milliseconds\n  segments: Segment[],\n  tracks: Track[],\n  activeSegmentIndex: number,     // Index of the segment that is currenlty hovered\n  selectedWorkflowIndex: number,  // Index of the currently selected workflow\n  aspectRatios: {width: number, height: number}[],  // Aspect ratios of every video\n  hasChanges: boolean             // Did user make changes in cutting view since last save\n\n  videoURLs: string[],  // Links to each video\n  videoCount: number,   // Total number of videos\n  duration: number,     // Video duration in milliseconds\n  title: string,\n  presenters: string[],\n  workflows: Workflow[],\n}\n\nexport const initialState: video & httpRequestState = {\n  isPlaying: false,\n  isPlayPreview: true,\n  currentlyAt: 0,   // Position in the video in milliseconds\n  segments: [{id: nanoid(), start: 0, end: 1, deleted: false}],\n  tracks: [],\n  activeSegmentIndex: 0,\n  selectedWorkflowIndex: 0,\n  previewTriggered: false,\n  clickTriggered: false,\n  aspectRatios: [],\n  hasChanges: false,\n\n  videoURLs: [],\n  videoCount: 0,\n  duration: 0,\n  title: '',\n  presenters: [],\n  workflows: [],\n\n  status: 'idle',\n  error: undefined,\n}\n\nexport const fetchVideoInformation = createAsyncThunk('video/fetchVideoInformation', async () => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  // const response = await client.get('https://legacy.opencast.org/admin-ng/tools/ID-dual-stream-demo/editor.json')\n  const response = await client.get(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`)\n  return response\n})\n\nconst updateCurrentlyAt = (state: video, milliseconds: number) => {\n  state.currentlyAt = roundToDecimalPlace(milliseconds, 0);\n\n  if (state.currentlyAt < 0) {\n    state.currentlyAt = 0;\n  }\n\n  if (state.duration !== 0 && state.duration < state.currentlyAt) {\n    state.currentlyAt = state.duration\n  }\n\n  updateActiveSegment(state);\n  skipDeletedSegments(state);\n};\n\n/**\n * Slice for the state of the \"video\"\n * Treats the multitude of videos that may exist as one video\n */\nexport const videoSlice = createSlice({\n  name: 'videoState',\n  initialState,\n  reducers: {\n    setTrackEnabled: (state, action) => {\n      for (let track of state.tracks) {\n        if (track.id === action.payload.id) {\n          track.audio_stream.enabled = action.payload.enabled;\n          track.video_stream.enabled = action.payload.enabled;\n        }\n      }\n      state.hasChanges = true;\n    },\n    setIsPlaying: (state, action: PayloadAction<video[\"isPlaying\"]>) => {\n      state.isPlaying = action.payload;\n    },\n    setIsPlayPreview: (state, action: PayloadAction<video[\"isPlaying\"]>) => {\n      state.isPlayPreview = action.payload;\n    },\n    setPreviewTriggered: (state, action) => {\n      state.previewTriggered = action.payload\n    },\n    setClickTriggered: (state, action) => {\n      state.clickTriggered = action.payload\n    },\n    setCurrentlyAt: (state, action: PayloadAction<video[\"currentlyAt\"]>) => {\n      updateCurrentlyAt(state, action.payload);\n    },\n    setCurrentlyAtInSeconds: (state, action: PayloadAction<video[\"currentlyAt\"]>) => {\n      updateCurrentlyAt(state, roundToDecimalPlace(action.payload * 1000, 0))\n    },\n    addSegment: (state, action: PayloadAction<video[\"segments\"][0]>) => {\n      state.segments.push(action.payload)\n    },\n    setAspectRatio: (state, action: PayloadAction<{dataKey: number} & {width: number, height: number}> ) => {\n      state.aspectRatios[action.payload.dataKey] = {width: action.payload.width, height: action.payload.height}\n    },\n    setHasChanges: (state, action: PayloadAction<video[\"hasChanges\"]>) => {\n      state.hasChanges = action.payload\n    },\n    cut: (state) => {\n      // If we're exactly between two segments, we can't split the current segment\n      if (state.segments[state.activeSegmentIndex].start === state.currentlyAt ||\n          state.segments[state.activeSegmentIndex].end === state.currentlyAt ) {\n        return state;\n      }\n\n      // Make two (new) segments out of it\n      let segmentA : Segment =  {id: nanoid(),\n        start: state.segments[state.activeSegmentIndex].start,\n        end: state.currentlyAt,\n        deleted: state.segments[state.activeSegmentIndex].deleted}\n      let segmentB : Segment =  {id: nanoid(),\n        start: state.currentlyAt,\n        end: state.segments[state.activeSegmentIndex].end,\n        deleted: state.segments[state.activeSegmentIndex].deleted}\n\n      // Add the new segments and remove the old one\n      state.segments.splice(state.activeSegmentIndex, 1, segmentA, segmentB);\n\n      state.hasChanges = true\n    },\n    markAsDeletedOrAlive: (state) => {\n      state.segments[state.activeSegmentIndex].deleted = !state.segments[state.activeSegmentIndex].deleted\n      state.hasChanges = true\n    },\n    setSelectedWorkflowIndex: (state, action: PayloadAction<video[\"selectedWorkflowIndex\"]>) => {\n      state.selectedWorkflowIndex = action.payload\n    },\n    mergeLeft: (state) => {\n      mergeSegments(state, state.activeSegmentIndex, state.activeSegmentIndex - 1)\n      state.hasChanges = true\n    },\n    mergeRight: (state) => {\n      mergeSegments(state, state.activeSegmentIndex, state.activeSegmentIndex + 1)\n      state.hasChanges = true\n    },\n  },\n  // For Async Requests\n  extraReducers: builder => {\n    builder.addCase(\n      fetchVideoInformation.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      fetchVideoInformation.fulfilled, (state, action) => {\n        state.status = 'success'\n\n        // // Old API\n        // // eslint-disable-next-line no-sequences\n        // state.videoURLs = action.payload.previews.reduce((a: string[], o: { uri: string }) => (a.push(o.uri), a), [])\n        // state.videoCount = action.payload.previews.length\n        // state.duration = action.payload.duration\n        // state.title = action.payload.title\n        // state.presenters = action.payload.presenters\n        // state.segments = parseSegments(action.payload.segments, action.payload.duration)\n        // state.workflows = action.payload.workflows.sort((n1: { displayOrder: number; },n2: { displayOrder: number; }) => {\n        //   if (n1.displayOrder > n2.displayOrder) { return 1; }\n        //   if (n1.displayOrder < n2.displayOrder) { return -1; }\n        //   return 0;\n        // });\n\n        // New API\n        // eslint-disable-next-line no-sequences\n        state.videoURLs = action.payload.tracks.reduce((a: string[], o: { uri: string }) => (a.push(o.uri), a), [])\n        state.videoCount = state.videoURLs.length\n        state.duration = action.payload.duration\n        state.title = action.payload.title\n        state.presenters = []\n        state.segments = parseSegments(action.payload.segments, action.payload.duration)\n        state.tracks = action.payload.tracks\n        state.workflows = action.payload.workflows.sort((n1: { displayOrder: number; },n2: { displayOrder: number; }) => {\n          return n1.displayOrder - n2.displayOrder;\n        });\n\n        state.aspectRatios = new Array(state.videoCount)\n    })\n    builder.addCase(\n      fetchVideoInformation.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\n/**\n * Helper function to update the activeSegmentIndex\n * @param state\n */\nconst updateActiveSegment = (state: WritableDraft<video>) => {\n  state.activeSegmentIndex = state.segments.findIndex(element =>\n    element.start <= state.currentlyAt && element.end >= state.currentlyAt)\n  // If there is an error, assume the first (the starting) segment\n  if(state.activeSegmentIndex < 0) {\n    state.activeSegmentIndex = 0\n  }\n}\n\n/**\n * Helper Function for testing with current/old editor API\n */\nexport const parseSegments = (segments: Segment[], duration: number) => {\n  let newSegments : Segment[] = []\n\n  if (segments.length === 0) {\n    newSegments.push({id: nanoid(), start: 0, end: duration, deleted: false})\n  }\n\n  segments.forEach((segment: Segment) => {\n    newSegments.push({id: nanoid(), start: segment.start, end: segment.end, deleted: segment.deleted})\n  });\n  return newSegments\n}\n\n/**\n * Helper function for merging two segments\n */\nconst mergeSegments = (state: WritableDraft<video>, activeSegmentIndex: number, mergeSegmentIndex: number) => {\n  // Check if mergeSegmentIndex is valid\n  if (mergeSegmentIndex < 0 || mergeSegmentIndex > state.segments.length - 1) {\n    return\n  }\n\n  // Increase activeSegment length\n  state.segments[activeSegmentIndex].start = Math.min(\n    state.segments[activeSegmentIndex].start, state.segments[mergeSegmentIndex].start)\n  state.segments[activeSegmentIndex].end = Math.max(\n    state.segments[activeSegmentIndex].end, state.segments[mergeSegmentIndex].end)\n\n  // Remove the other segment\n  state.segments.splice(mergeSegmentIndex, 1);\n\n  // Update active segment\n  updateActiveSegment(state)\n}\n\nconst skipDeletedSegments = (state: WritableDraft<video>) => {\n  if(state.isPlaying && state.segments[state.activeSegmentIndex].deleted && state.isPlayPreview) {\n      let endTime = state.segments[state.activeSegmentIndex].end\n\n      for (let index = state.activeSegmentIndex; index < state.segments.length; index++) {\n        endTime = state.segments[index].end\n\n        if (!state.segments[index].deleted) {\n          // Need to at +1 as start and end of neighbouring segments are identical\n          endTime = state.segments[index].start + 1\n          break\n        }\n      }\n\n      state.currentlyAt = endTime\n      state.previewTriggered = true\n      updateActiveSegment(state);\n    }\n}\n\n/**\n * Calculates a total aspect ratio for the video player wrappers,\n * based on the aspect ratio of all videos.\n * Returns the total aspect ratio in percent,\n * or returns a default aspect ratio to limit the height of the video player area\n * TODO: Error checking\n * TODO: Improve calculation to handle multiple rows of videos\n */\nconst calculateTotalAspectRatio = (aspectRatios: video[\"aspectRatios\"]) => {\n  let minHeight = Math.min.apply(Math, aspectRatios.map(function(o) { return o.height; }))\n  let minWidth = Math.min.apply(Math, aspectRatios.map(function(o) { return o.width; }))\n  minWidth *= aspectRatios.length\n  return Math.min((minHeight / minWidth) * 100, (9/32) * 100)\n}\n\nexport const { setTrackEnabled, setIsPlaying, setIsPlayPreview, setCurrentlyAt, setCurrentlyAtInSeconds,\n  addSegment, setAspectRatio, setHasChanges, cut, markAsDeletedOrAlive, setSelectedWorkflowIndex, mergeLeft, mergeRight,\n  setPreviewTriggered, setClickTriggered } = videoSlice.actions\n\n// Export selectors\n// Selectors mainly pertaining to the video state\nexport const selectIsPlaying = (state: { videoState: { isPlaying: video[\"isPlaying\"] }; }) =>\n  state.videoState.isPlaying\nexport const selectIsPlayPreview = (state: { videoState: { isPlayPreview: video[\"isPlayPreview\"] }; }) =>\n  state.videoState.isPlayPreview\nexport const selectPreviewTriggered = (state: { videoState: { previewTriggered: video[\"previewTriggered\"] } }) =>\n  state.videoState.previewTriggered\nexport const selectClickTriggered = (state: { videoState: { clickTriggered: video[\"clickTriggered\"] } }) =>\n  state.videoState.clickTriggered\nexport const selectCurrentlyAt = (state: { videoState: { currentlyAt: video[\"currentlyAt\"]; }; }) =>\n  state.videoState.currentlyAt\nexport const selectCurrentlyAtInSeconds = (state: { videoState: { currentlyAt: video[\"currentlyAt\"]; }; }) =>\n  state.videoState.currentlyAt / 1000\nexport const selectSegments = (state: { videoState: { segments: video[\"segments\"] } }) =>\n  state.videoState.segments\nexport const selectActiveSegmentIndex = (state: { videoState: { activeSegmentIndex: video[\"activeSegmentIndex\"]; }; }) =>\n  state.videoState.activeSegmentIndex\nexport const selectIsCurrentSegmentAlive = (state: { videoState:\n  { segments: { [x: number]: { deleted: boolean; }; }; activeSegmentIndex: video[\"activeSegmentIndex\"]; }; }) =>\n  !state.videoState.segments[state.videoState.activeSegmentIndex].deleted\nexport const selectSelectedWorkflowIndex = (state: { videoState:\n  { selectedWorkflowIndex: video[\"selectedWorkflowIndex\"]; }; }) =>\n  state.videoState.selectedWorkflowIndex\nexport const hasChanges = (state: { videoState: { hasChanges: video[\"hasChanges\"]; }; }) =>\n  state.videoState.hasChanges\n\n// Selectors mainly pertaining to the information fetched from Opencast\nexport const selectVideoURL = (state: { videoState: { videoURLs: video[\"videoURLs\"] } }) => state.videoState.videoURLs\nexport const selectVideoCount = (state: { videoState: { videoCount: video[\"videoCount\"] } }) => state.videoState.videoCount\nexport const selectDuration = (state: { videoState: { duration: video[\"duration\"] } }) => state.videoState.duration\nexport const selectDurationInSeconds = (state: { videoState: { duration: video[\"duration\"] } }) => state.videoState.duration / 1000\nexport const selectTitle = (state: { videoState: { title: video[\"title\"] } }) => state.videoState.title\nexport const selectPresenters = (state: { videoState: { presenters: video[\"presenters\"] } }) => state.videoState.presenters\nexport const selectTracks = (state: { videoState: { tracks: video[\"tracks\"] } }) => state.videoState.tracks\nexport const selectWorkflows = (state: { videoState: { workflows: video[\"workflows\"] } }) => state.videoState.workflows\nexport const selectAspectRatio = (state: { videoState: { aspectRatios: video[\"aspectRatios\"] } }) =>\n  calculateTotalAspectRatio(state.videoState.aspectRatios)\n\nexport default videoSlice.reducer\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport enTranslations from './locales/en.json';\n\nconst resources = {\n  en: { translation: enTranslations }\n};\n\ni18n\n    .use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        resources,\n        fallbackLng: 'en',\n  });\n  ","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCut, faFilm, faListUl, faPhotoVideo, faSignOutAlt, faKeyboard, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setState, selectMainMenuState, mainMenu } from '../redux/mainMenuSlice'\nimport { setPageNumber } from '../redux/finishSlice'\n\nimport { MainMenuStateNames } from '../types'\nimport { settings } from '../config'\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\nimport { setIsPlaying } from \"../redux/videoSlice\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * A container for selecting the functionality shown in the main part of the app\n */\nconst MainMenu: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const mainMenuStyle = css({\n    borderRight: '1px solid #BBB',\n    width: '100px',\n    display: 'flex',\n    flexDirection: 'column' as const,\n    flexShrink: 0,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(30, false)),\n  });\n\n  return (\n    <nav css={mainMenuStyle} role=\"navigation\" aria-label={t(\"mainMenu.tooltip-aria\")}>\n      <MainMenuButton iconName={faCut} stateName={MainMenuStateNames.cutting} bottomText={t(MainMenuStateNames.cutting)} miniButton={false}/>\n      {settings.metadata.show && <MainMenuButton iconName={faListUl} stateName={MainMenuStateNames.metadata} bottomText={t(MainMenuStateNames.metadata)} miniButton={false}/>}\n      {settings.trackSelection.show && <MainMenuButton iconName={faFilm} stateName={MainMenuStateNames.trackSelection} bottomText={t(MainMenuStateNames.trackSelection)} miniButton={false}/>}\n      {settings.thumbnail.show && <MainMenuButton iconName={faPhotoVideo} stateName={MainMenuStateNames.thumbnail} bottomText={t(MainMenuStateNames.thumbnail)} miniButton={false}/>}\n      <MainMenuButton iconName={faSignOutAlt} stateName={MainMenuStateNames.finish} bottomText={t(MainMenuStateNames.finish)} miniButton={false}/>\n      {/* A space for buttons that would normally go in a header or footer */}\n      <div css={{flexGrow: 99, display: 'flex', flexDirection: 'row', alignItems: 'flex-end'}}>\n        <MainMenuButton iconName={faKeyboard} stateName={MainMenuStateNames.keyboardControls} bottomText={\"\"} miniButton={true}/>\n      </div>\n    </nav>\n  );\n};\n\ninterface mainMenuButtonInterface {\n  iconName: IconDefinition,\n  stateName: mainMenu[\"value\"],\n  bottomText: string,\n  miniButton: boolean,\n}\n\n/**\n * A button to set the state of the app\n * @param param0\n */\nconst MainMenuButton: React.FC<mainMenuButtonInterface> = ({iconName, stateName, bottomText, miniButton = false}) => {\n\n  const dispatch = useDispatch();\n  const activeState = useSelector(selectMainMenuState)\n\n  const onMenuItemClicked = () => {\n    dispatch(setState(stateName));\n    // Reset multi-page content to their first page\n    if (stateName === MainMenuStateNames.finish) {\n      dispatch(setPageNumber(0))\n    }\n    // Halt ongoing events\n    dispatch(setIsPlaying(false))\n  }\n\n  const buttonStyle = () => {\n    if (!miniButton) {\n      return mainMenuButtonStyle\n    } else {\n      return miniMenuButtonStyle\n    }\n  }\n\n  const mainMenuButtonStyle = css({\n    width: '100%',\n    height: '100px',\n    ...(activeState === stateName) && {\n      backgroundColor: '#DDD',\n    },\n    flexDirection: 'column' as const,\n  });\n\n  const miniMenuButtonStyle = css({\n    width: '40px',\n    height: '40px',\n    ...(activeState === stateName) && {\n      backgroundColor: '#DDD',\n    },\n    flexDirection: 'column' as const,\n  });\n\n  return (\n    <li css={[basicButtonStyle, buttonStyle()]}\n      role=\"menuitem\" tabIndex={0}\n      onClick={ onMenuItemClicked }\n      onKeyDown={(event: React.KeyboardEvent<HTMLLIElement>) => { if (event.key === \"Enter\") {\n        onMenuItemClicked()\n      }}}\n      >\n      <FontAwesomeIcon icon={iconName} size={miniButton ? \"1x\" : \"2x\"}/>\n      {bottomText && <div>{bottomText}</div>}\n    </li>\n  );\n};\n\nexport default MainMenu;\n","/**\n * Contains mappings for special keyboard controls, beyond what is usually expected of a webpage\n * Learn more about keymaps at https://github.com/greena13/react-hotkeys#defining-key-maps (12.03.2021)\n */\nimport { KeyMap } from \"react-hotkeys\";\nimport { isMacOs } from 'react-device-detect';\nimport i18next from \"i18next\";\n\n// Groups for displaying hotkeys in the overview page\nconst groupCuttingView = \"Cutting View\"\nconst groupCuttingViewScrubber = \"Cutting View - Scrubber\"\n\n/**\n * Helper function that rewrites keys based on the OS\n */\nconst rewriteKeys = (key: string) => {\n  let newKey = key\n  if (isMacOs) {\n    newKey = newKey.replace(\"Alt\", \"Option\")\n  }\n\n  return newKey\n}\n\n/**\n * (Semi-) global map for the buttons in the cutting view\n */\nexport const cuttingKeyMap: KeyMap = {\n  cut: {\n    name: i18next.t(\"cuttingActions.cut-button\"),\n    sequence: rewriteKeys(\"Control+Alt+c\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n  delete: {\n    name: i18next.t(\"cuttingActions.delete-button\"),\n    sequence: rewriteKeys(\"Control+Alt+d\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n  mergeLeft: {\n    name: i18next.t(\"cuttingActions.mergeLeft-button\"),\n    sequence: rewriteKeys(\"Control+Alt+n\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n  mergeRight: {\n    name: i18next.t(\"cuttingActions.mergeRight-button\"),\n    sequence: rewriteKeys(\"Control+Alt+m\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n  preview: {\n    name: i18next.t(\"video.previewButton\"),\n    sequence: rewriteKeys(\"Control+Alt+p\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n  play: {\n    name: i18next.t(\"keyboardControls.videoPlayButton\"),\n    sequence: rewriteKeys(\"Space\"),\n    action: \"keydown\",\n    group: groupCuttingView,\n  },\n}\n\n/**\n * (Semi-) global map for moving the scrubber\n */\nexport const scrubberKeyMap: KeyMap = {\n  left: {\n    name: i18next.t(\"keyboardControls.scrubberLeft\"),\n    // Typescript requires 'sequence' even though there is 'sequences, but it doesn't do anything?\n    sequence: rewriteKeys(\"Control+Alt+j\"),\n    sequences: [rewriteKeys(\"Control+Alt+j\"), \"ArrowLeft\"],\n    action: \"keydown\",\n    group: groupCuttingViewScrubber,\n  },\n  right: {\n    name: i18next.t(\"keyboardControls.scrubberRight\"),\n    // Typescript requires 'sequence' even though there is 'sequences, but it doesn't do anything?\n    sequence: rewriteKeys(\"Control+Alt+l\"),\n    sequences: [rewriteKeys(\"Control+Alt+l\"), \"ArrowRight\"],\n    action: \"keydown\",\n    group: groupCuttingViewScrubber,\n  },\n  increase: {\n    name: i18next.t(\"keyboardControls.scubberIncrease\"),\n    // Typescript requires 'sequence' even though there is 'sequences, but it doesn't do anything?\n    sequence: rewriteKeys(\"Control+Alt+i\"),\n    sequences: [rewriteKeys(\"Control+Alt+i\"), \"ArrowUp\"],\n    action: \"keydown\",\n    group: groupCuttingViewScrubber,\n  },\n  decrease: {\n    name: i18next.t(\"keyboardControls.scrubberDecrease\"),\n    // Typescript requires 'sequence' even though there is 'sequences, but it doesn't do anything?\n    sequence: rewriteKeys(\"Control+Alt+k\"),\n    sequences: [rewriteKeys(\"Control+Alt+k\"), \"ArrowDown\"],\n    action: \"keydown\",\n    group: groupCuttingViewScrubber,\n  },\n}\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\n\nimport { httpRequestState }  from '../types'\nimport { settings } from '../config';\n\nexport interface Catalog {\n  fields: MetadataField[],\n  flavor: string, // \"dublincore/episode\"\n  title: string,  // name identifier\n}\n\nexport interface MetadataField {\n  readOnly: boolean,\n  id: string      // name\n  label: string   // name identifier\n  type: string    // irrelevant?\n  value: string,\n  required: boolean,\n  collection: any | undefined,\n}\n\n// interface metadata {\n//   title: string,\n//   subject: string,\n//   description: string,\n//   language: string,\n//   languageOptions: string[],\n//   rightsHolder: string,\n//   license: string,\n//   licenseOptions: string[],\n//   isPartOf: string,\n//   creator: string,\n//   creatorOptions: string[],\n//   contributor: string,\n//   contributorOptions: string[],\n//   startDate: Date,\n//   duration: string,\n//   location: string,\n//   source: string,\n//   created: Date,\n//   publisher: string,\n//   identifier: string,\n// }\n\ninterface metadata {\n  catalogs: Catalog[]\n  hasChanges: boolean         // Did user make changes to metadata view since last save\n}\n\ninterface postRequestState {\n  postStatus: 'idle' | 'loading' | 'success' | 'failed',\n  postError: string | undefined,\n}\n\n// TODO: Create an 'httpRequestState' array or something\nconst initialState: metadata & httpRequestState & postRequestState = {\n  catalogs: [],\n  hasChanges: false,\n\n  status: 'idle',\n  error: undefined,\n\n  postStatus: 'idle',\n  postError: undefined,\n}\n\nexport const fetchMetadata = createAsyncThunk('metadata/fetchMetadata', async () => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.get(`${settings.opencast.url}/editor/${settings.mediaPackageId}/metadata.json`)\n  return response\n})\n\nexport const postMetadata = createAsyncThunk('metadata/postMetadata', async (_, { getState }) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  // TODO: Get only metadataState instead of all states\n  const allStates = getState() as { metadataState: { catalogs: metadata[\"catalogs\"] } }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/metadata.json`,\n    allStates.metadataState.catalogs\n  )\n\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes and starting a workflow\n */\nconst metadataSlice = createSlice({\n  name: 'metadataState',\n  initialState,\n  reducers: {\n    setFieldValue: (state, action: any) => {\n      state.catalogs[action.payload.catalogIndex].fields[action.payload.fieldIndex].value = action.payload.value\n      state.hasChanges = true\n    },\n    setFieldReadonly: (state, action: any) => {\n      state.catalogs[action.payload.catalogIndex].fields[action.payload.fieldIndex].readOnly = action.payload.value\n    },\n    setHasChanges: (state, action: PayloadAction<metadata[\"hasChanges\"]>) => {\n      state.hasChanges = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      fetchMetadata.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      fetchMetadata.fulfilled, (state, action) => {\n        state.catalogs = action.payload\n\n        state.status = 'success'\n    })\n    builder.addCase(\n      fetchMetadata.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n    builder.addCase(\n      postMetadata.pending, (state, action) => {\n        state.postStatus = 'loading'\n    })\n    builder.addCase(\n      postMetadata.fulfilled, (state, action) => {\n        state.postStatus = 'success'\n    })\n    builder.addCase(\n      postMetadata.rejected, (state, action) => {\n        state.postStatus = 'failed'\n        state.postError = action.error.message\n    })\n  }\n})\n\nexport const { setFieldValue, setHasChanges, setFieldReadonly } = metadataSlice.actions\n\nexport const selectCatalogs = (state: { metadataState: { catalogs: metadata[\"catalogs\"] } }) =>\n  state.metadataState.catalogs\nexport const hasChanges = (state: { metadataState: { hasChanges: metadata[\"hasChanges\"] } }) =>\n  state.metadataState.hasChanges\nexport const selectGetStatus = (state: { metadataState: { status: httpRequestState[\"status\"] } }) =>\n  state.metadataState.status\nexport const selectGetError = (state: { metadataState: { error: httpRequestState[\"error\"] } }) =>\n  state.metadataState.error\nexport const selectPostStatus = (state: { metadataState: { postStatus: postRequestState[\"postStatus\"] } }) =>\n  state.metadataState.postStatus\nexport const selectPostError = (state: { metadataState: { postError: postRequestState[\"postError\"] } }) =>\n  state.metadataState.postError\n\nexport const selectTitleFromEpisodeDc = (state: { metadataState: { catalogs: metadata[\"catalogs\"] } }) => {\n  for (const catalog of state.metadataState.catalogs) {\n    if (catalog.flavor === \"dublincore/episode\") {\n      for (const field of catalog.fields) {\n        if (field.id === \"title\") {\n          return field.value\n        }\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport default metadataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface error {\n  error: boolean,\n  errorMessage: string,\n  errorDetails: string | undefined,\n}\n\nconst initialState: error = {\n  error: false,\n  errorMessage: \"Unknown error\",\n  errorDetails: \"\",\n}\n\n/**\n * Slice for the error page state\n */\nexport const errorSlice = createSlice({\n  name: 'errorState',\n  initialState,\n  reducers: {\n    setError: (state, action: PayloadAction<{\n      error: error[\"error\"],\n      errorMessage: error[\"errorMessage\"],\n      errorDetails: error[\"errorDetails\"]\n    }>) => {\n      state.error = action.payload.error;\n      state.errorMessage = action.payload.errorMessage;\n      state.errorDetails = action.payload.errorDetails;\n    },\n  }\n})\n\nexport const { setError, } = errorSlice.actions\n\n// Export Selectors\nexport const selectIsError = (state: { errorState: { error: error[\"error\"] }; }) => state.errorState.error\nexport const selectErrorMessage = (state: { errorState: { errorMessage: error[\"errorMessage\"] }; }) => state.errorState.errorMessage\nexport const selectErrorDetails = (state: { errorState: { errorDetails: error[\"errorDetails\"] }; }) => state.errorState.errorDetails\n\nexport default errorSlice.reducer\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { httpRequestState, MainMenuStateNames } from '../types'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faToggleOn, faToggleOff} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsPlaying, selectCurrentlyAt, selectCurrentlyAtInSeconds, setIsPlaying, setCurrentlyAtInSeconds,\n  fetchVideoInformation, selectVideoURL, selectVideoCount, selectDurationInSeconds, selectTitle, selectPresenters,\n  setPreviewTriggered, selectPreviewTriggered, selectIsPlayPreview, setIsPlayPreview, setAspectRatio, selectAspectRatio, selectDuration, setClickTriggered, selectClickTriggered\n} from '../redux/videoSlice'\n\nimport ReactPlayer, { Config } from 'react-player'\n\nimport { roundToDecimalPlace, convertMsToReadableString } from '../util/utilityFunctions'\nimport { basicButtonStyle, flexGapReplacementStyle } from \"../cssStyles\";\n\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { selectMainMenuState } from \"../redux/mainMenuSlice\";\nimport { cuttingKeyMap } from \"../globalKeys\";\nimport { SyntheticEvent } from \"react\";\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { selectTitleFromEpisodeDc } from \"../redux/metadataSlice\";\nimport { setError } from \"../redux/errorSlice\";\n\n/**\n * Container for the videos and their controls\n * TODO: Move fetching to a more central part of the app\n */\nconst Video: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch()\n  const videoURLs = useSelector(selectVideoURL)\n  const videoCount = useSelector(selectVideoCount)\n  const videoURLStatus = useSelector((state: { videoState: { status: httpRequestState[\"status\"] } }) => state.videoState.status);\n  const error = useSelector((state: { videoState: { error: httpRequestState[\"error\"] } }) => state.videoState.error)\n\n  // Try to fetch URL from external API\n  useEffect(() => {\n    if (videoURLStatus === 'idle') {\n      dispatch(fetchVideoInformation())\n    } else if (videoURLStatus === 'failed') {\n      dispatch(setError({error: true, errorMessage: t(\"video.comError-text\"), errorDetails: error}))\n    }\n  }, [videoURLStatus, dispatch, error, t])\n\n  // Update based on current fetching status\n  // let content\n  // if (videoURLStatus === 'loading') {\n  //   content = <div className=\"loader\">Loading...</div>\n  // } else if (videoURLStatus === 'success') {\n  //   content = \"\"//<div className=\"loader\">Success...</div>\n  // } else if (videoURLStatus === 'failed') {\n  //   content = <div>{error}</div>\n  // }\n\n  // Initialize video players\n  const videoPlayers: JSX.Element[] = [];\n  for (let i = 0; i < videoCount; i++) {\n    // videoPlayers.push(<VideoPlayer key={i} url='https://media.geeksforgeeks.org/wp-content/uploads/20190616234019/Canvas.move_.mp4' />);\n    videoPlayers.push(<VideoPlayer key={i} dataKey={i} url={videoURLs[i]} isPrimary={i === 0}/>);\n  }\n\n  // Style\n  const videoAreaStyle = css({\n    display: 'flex',\n    width: 'auto',\n    flexDirection: 'column' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '0px',\n    borderBottom: '1px solid #BBB',\n  });\n\n  const videoPlayerAreaStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  });\n\n  return (\n    <div css={videoAreaStyle}>\n      <VideoHeader />\n      <div css={videoPlayerAreaStyle}>\n        {videoPlayers}\n      </div>\n      <VideoControls />\n    </div>\n  );\n};\n\n/**\n * A single video player\n * @param {string} url - URL to load video from\n * @param {boolean} isPrimary - If the player is the main control\n */\nconst VideoPlayer: React.FC<{dataKey: number, url: string, isPrimary: boolean}> = ({dataKey, url, isPrimary}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const currentlyAt = useSelector(selectCurrentlyAtInSeconds)\n  const duration  = useSelector(selectDurationInSeconds)\n  const previewTriggered = useSelector(selectPreviewTriggered)\n  const clickTriggered = useSelector(selectClickTriggered)\n  const aspectRatio = useSelector(selectAspectRatio)\n\n  // Init state variables\n  const ref = useRef<ReactPlayer>(null);\n  const [ready, setReady] = useState(false);\n  const [errorState, setError] = useState(false);\n\n  // Callback for when the video is playing\n  const onProgressCallback = (state: { played: number, playedSeconds: number, loaded: number, loadedSeconds:  number }) => {\n    if (isPrimary) {\n      // Only update redux if there was a substantial change\n      if (roundToDecimalPlace(currentlyAt, 3) !== roundToDecimalPlace(state.playedSeconds, 3)) {\n        dispatch(setCurrentlyAtInSeconds(state.playedSeconds))\n      }\n    }\n  }\n\n  // Callback for checking whether the video element is ready\n  const onReadyCallback = () => {\n    setReady(true);\n\n    if (ref.current && ref.current.getInternalPlayer()) {\n      let w = (ref.current.getInternalPlayer() as HTMLVideoElement).videoWidth\n      let h = (ref.current.getInternalPlayer() as HTMLVideoElement).videoHeight\n      dispatch(setAspectRatio({dataKey, width: w, height: h}))\n    }\n  }\n\n  const onEndedCallback = () => {\n    if (isPrimary) {\n      dispatch(setIsPlaying(false));\n      dispatch(setCurrentlyAtInSeconds(duration)); // It seems onEnded is called before the full duration is reached, so we set currentlyAt to the very end\n    }\n  }\n\n  useEffect(() => {\n    // Seek if the position in the video got changed externally\n    if (!isPlaying && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n    }\n    if (previewTriggered && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n      dispatch(setPreviewTriggered(false))\n    }\n    if (clickTriggered && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n      dispatch(setClickTriggered(false))\n    }\n  })\n\n  const onErrorCallback = (e: any) => {\n    setError(true)\n  }\n\n  // Skip player when navigating page with keyboard\n  const playerConfig: Config = {\n    file: { attributes: { tabIndex: '-1' }}\n  }\n\n  const errorBoxStyle = css({\n    ...(!errorState) && {display: \"none\"},\n    borderColor: 'red',\n    borderStyle: 'dashed',\n    fontWeight: 'bold',\n    padding: '10px',\n  })\n\n  const playerWrapper = css({\n    position: 'relative',\n    width: '100%',\n    paddingTop: aspectRatio + '%',\n  });\n\n  const reactPlayerStyle = css({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  })\n\n  const render = () => {\n    if (!errorState) {\n      return(\n        <div css={playerWrapper}>\n          <ReactPlayer url={url}\n            css={reactPlayerStyle}\n            ref={ref}\n            width='100%'\n            height='100%'\n            playing={isPlaying}\n            muted={!isPrimary}\n            onProgress={onProgressCallback}\n            progressInterval={100}\n            onReady={onReadyCallback}\n            onEnded={onEndedCallback}\n            onError={onErrorCallback}\n            tabIndex={-1}\n            config={playerConfig}\n            disablePictureInPicture\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div css={errorBoxStyle} role=\"alert\">\n          <span>{t(\"video.loadError-text\")} </span>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      {render()}\n    </>\n  );\n\n  // return (\n  //   <div title=\"Video Player\">\n  //     <video width=\"320\" height=\"240\" controls ref={vidRef}>\n  //     <source src=\"https://media.geeksforgeeks.org/wp-content/uploads/20190616234019/Canvas.move_.mp4\" type=\"video/mp4\" />\n  //     Your browser does not support the video tag.\n  //     </video>\n  //   </div>\n  // );\n};\n\n/**\n * Contains controls for manipulating multiple video players at once\n * Flexbox magic keeps the play button at the center\n */\nconst VideoControls: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const videoControlsRowStyle = css({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: '20px',\n    ...(flexGapReplacementStyle(50, false)),\n  })\n\n  const leftSideBoxStyle = css({\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  })\n\n  const rightSideBoxStyle = css({\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-start'\n  })\n\n  return (\n    <div css={videoControlsRowStyle} title={t(\"video.controls-tooltip\")}>\n      <div css={leftSideBoxStyle}>\n        <PreviewMode />\n      </div>\n      <PlayButton />\n      <div css={rightSideBoxStyle}>\n        <TimeDisplay />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Enable/Disable Preview Mode\n */\nconst PreviewMode: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlayPreview = useSelector(selectIsPlayPreview)\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  // Change preview mode from \"on\" to \"off\" and vice versa\n  const switchPlayPreview = (event: KeyboardEvent | SyntheticEvent, ref: React.RefObject<HTMLDivElement> | undefined) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    event.stopPropagation()                     // Prevent video playback due to Space bar press\n    dispatch(setIsPlayPreview(!isPlayPreview))\n\n    // Lose focus if clicked by mouse\n    if (ref) {\n      ref.current?.blur()\n    }\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    // preview: switchPlayPreview,\n    preview: (keyEvent?: KeyboardEvent) => { if(keyEvent) { switchPlayPreview(keyEvent, undefined) } }\n  }\n\n  const previewModeStyle = css({\n    cursor: \"pointer\",\n    display: 'flex',\n    ...(flexGapReplacementStyle(10, false)),\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n\n  const switchIconStyle = css({\n    cursor: \"pointer\",\n    transitionDuration: \"0.3s\",\n    transitionProperty: \"transform\",\n    \"&:hover\": {\n      transform: 'scale(1.05)',\n    },\n  })\n\n  return (\n    <div css={previewModeStyle}\n      ref={ref}\n      title={t(\"video.previewButton-tooltip\", { status: (isPlayPreview ? \"on\" : \"off\"), hotkeyName: cuttingKeyMap[handlers.preview.name] })}\n      role=\"switch\" aria-checked={isPlayPreview} tabIndex={0} aria-hidden={false}\n      aria-label={t(\"video.previewButton-aria\", { hotkeyName: cuttingKeyMap[handlers.preview.name] })}\n      onClick={ (event: SyntheticEvent) => switchPlayPreview(event, ref) }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \") {\n        switchPlayPreview(event, undefined)\n      }}}>\n      <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} />\n      <div css={{display: 'inline-block', flexWrap: 'nowrap'}}>\n        {t(\"video.previewButton\")}\n      </div>\n      <FontAwesomeIcon css={switchIconStyle} icon={isPlayPreview ? faToggleOn : faToggleOff} size=\"1x\"/>\n    </div>\n  );\n}\n\n/**\n * Start/Pause playing the videos\n */\nconst PlayButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  // Change play mode from \"on\" to \"off\" and vice versa\n  const switchIsPlaying = (event: KeyboardEvent | SyntheticEvent) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    dispatch(setIsPlaying(!isPlaying))\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    play: (keyEvent?: KeyboardEvent) => { if(keyEvent) { switchIsPlaying(keyEvent) } }\n  }\n\n  return (\n    <>\n    <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} />\n    <FontAwesomeIcon css={[basicButtonStyle, {justifySelf: 'center'}]} icon={isPlaying ? faPause : faPlay} size=\"2x\"\n      title={t(\"video.playButton-tooltip\")}\n      role=\"button\" aria-pressed={isPlaying} tabIndex={0} aria-hidden={false}\n      aria-label={t(\"video.playButton-tooltip\")}\n      onClick={(event: SyntheticEvent) => { switchIsPlaying(event) }}\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \"Enter\") { // \"Space\" is handled by global key\n        switchIsPlaying(event)\n      }}}\n    />\n    </>\n  );\n}\n\n/**\n * Live update for the current time\n */\nconst TimeDisplay: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const currentlyAt = useSelector(selectCurrentlyAt)\n  const duration = useSelector(selectDuration)\n\n  return (\n    <div css={{display: 'flex', flexDirection: 'row', gap: '5px'}}>\n      <time css={{display: 'inline-block', width: '100px'}}\n        title={t(\"video.time-duration-tooltip\")}\n        tabIndex={0} role=\"timer\" aria-label={t(\"video.time-aria\")+\": \" + convertMsToReadableString(currentlyAt)}>\n        {new Date((currentlyAt ? currentlyAt : 0)).toISOString().substr(11, 12)}\n      </time>\n      {\" / \"}\n      <div tabIndex={0} aria-label={t(\"video.duration-aria\")+\": \" + convertMsToReadableString(duration)}>\n        {new Date((duration ? duration : 0)).toISOString().substr(11, 12)}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Displays elements above the video, e.g. title\n */\nconst VideoHeader: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const title = useSelector(selectTitle)\n  const metadataTitle = useSelector(selectTitleFromEpisodeDc)\n  const presenters = useSelector(selectPresenters)\n\n  const titleStyle = css({\n    display: 'inline-block',\n    padding: '15px',\n    overflow: 'hidden',\n    whiteSpace: \"nowrap\",\n    textOverflow: 'ellipsis',\n    maxWidth: '500px',\n  })\n\n  const titleStyleBold = css({\n    fontWeight: 'bold',\n    fontSize: '24px',\n    verticalAlign: '-2.5px',\n  })\n\n  let presenter_header;\n  if (presenters && presenters.length) {\n      presenter_header = <div css={titleStyle} title={t(\"video.presenter-tooltip\")}>by {presenters.join(\", \")}</div>\n  }\n  return (\n    <div title={t(\"video.area-tooltip\")} css={{fontSize: '16px'}}>\n      <div css={[titleStyle, titleStyleBold]} title={t(\"video.title-tooltip\")}>\n        {metadataTitle ? metadataTitle : title}\n      </div>\n      {presenter_header}\n    </div>\n  );\n}\n\nexport default Video;\n","/**\n * Big thanks to Duncan \"slampunk\" Smith for writing this code and allowing it\n * to be used for this application.\n * duncan83@gmail.com\n */\n\nimport { AudioContext } from 'standardized-audio-context';\n\nexport function Waveform(opts) {\n  this.audioContext = new AudioContext();\n  this.oCanvas = document.createElement('canvas');\n  this.buffer = {};\n  this.WIDTH = 0;\n  this.HEIGHT = 0;\n  this.channelData = [];\n  this.waveformImage = '';\n  this.audioBuffer = null;\n\n  this.aveRMS = 0;\n  this.peakRMS = 0;\n\n  this.numberSamples = 100000;\n  this.waveformType = 'img';\n  this.drawWaveform = this.drawCanvasWaveform;\n\n  if (opts.width && opts.height) {\n    this.setDimensions(opts.width, opts.height);\n  }\n  if (opts.samples) {\n    this.numberSamples = opts.samples;\n  }\n  if (opts.type && opts.type === 'svg') {\n    this.waveformType = 'svg';\n    this.drawWaveform = this.delegateToWorker;\n    this.worker = null;\n  }\n  if (opts.media) {\n    this.generateWaveform(opts.media)\n      .then(() => {\n        this.getAudioData();\n        this.drawWaveform();\n        if (this.waveformType !== 'svg') {\n          _completeFuncs.forEach(fn => {\n            fn(this.waveformImage || this.svgPath, this.waveformType);\n          });\n        }\n      })\n      .catch((e) => {\n        console.log(\"Waveform Worker: \" + e);\n        this._error = e.toString()\n        this.onerror.forEach(fn => fn(e.toString()));\n      });\n  }\n\n  var _completeFuncs = [];\n  Object.defineProperty(this, 'oncomplete', {\n    get: function() {\n      return _completeFuncs;\n    },\n    set: function(fn, opt) {\n      if (typeof fn == 'function') {\n        if (this.waveformImage || this.svgPath) {\n          fn(this.waveformImage || this.svgPath, this.svgLength);\n          return;\n        }\n\n        _completeFuncs.push(fn);\n      }\n    }\n  });\n\n  var _error = \"\";\n  var _errorFuncs = [];\n  Object.defineProperty(this, 'onerror', {\n    get: function() {\n      return _errorFuncs;\n    },\n    set: function(fn, opt) {\n      if (typeof fn == 'function') {\n        if (this._error && this._error !== \"\") {\n          fn(_error);\n          return;\n        }\n      }\n\n      _errorFuncs.push(fn);\n    }\n  });\n}\n\nWaveform.prototype = {\n  constructor: Waveform,\n  setDimensions: function(width, height) {\n    this.oCanvas.width = width;\n    this.WIDTH = width;\n    this.oCanvas.height = height;\n    this.HEIGHT = height;\n    this.ocCtx = this.oCanvas.getContext('2d');\n  },\n  decodeAudioData: function(arraybuffer) {\n    return new Promise((resolve, reject) => {\n      new Promise((res, rej) => {\n        if (arraybuffer instanceof ArrayBuffer) {\n          res(arraybuffer);\n        }\n        else if (arraybuffer instanceof Blob) {\n          let reader = new FileReader();\n          reader.onload = function() {\n            res(reader.result);\n          }\n          reader.readAsArrayBuffer(arraybuffer);\n        }\n      })\n      .then(buffer => {\n        this.audioContext.decodeAudioData(buffer)\n          .then(audiobuffer => {\n            this.buffer = audiobuffer;\n            resolve();\n          })\n          .catch(e => {\n            reject(e);\n          })\n      })\n      .catch(e => {\n        reject(e);\n      })\n    })\n  },\n  getAudioData: function(buffer) {\n    buffer = buffer || this.buffer;\n    this.channelData = this.dropSamples(buffer.getChannelData(0), this.numberSamples);\n  },\n  drawCanvasWaveform: function(amp) {\n    amp = amp || 1;\n    this.ocCtx.fillStyle = '#FFFFFF00'; //'#b7d8f9';\n    this.ocCtx.fillRect(0, 0, this.WIDTH, this.HEIGHT);\n    this.ocCtx.lineWidth = 1;\n    this.ocCtx.strokeStyle = 'black'; //'#38597a';\n    let sliceWidth = this.WIDTH * 1.0 / this.channelData.length;\n    let x = 0;\n\n    this.ocCtx.beginPath();\n    this.ocCtx.moveTo(x, this.channelData[0] * this.HEIGHT / 128.0 / 2);\n\n    this.channelData.forEach(sample => {\n      let v = sample * amp;\n      let y = this.HEIGHT * (1 + v) / 2;\n      this.ocCtx.lineTo(x, y);\n      this.aveRMS += sample * sample;\n      this.peakRMS = Math.max(sample * sample, this.peakRMS);\n      x += sliceWidth;\n    });\n    this.ocCtx.lineTo(this.WIDTH, this.HEIGHT/2);\n    this.ocCtx.stroke();\n    this.aveRMS = Math.sqrt(this.aveRMS / this.channelData.length);\n    this.aveDBs = 20 * Math.log(this.aveRMS) / Math.log(10);\n    this.waveformImage = this.oCanvas.toDataURL();\n  },\n  dropSamples: function(data, requestedLength) {\n    let divider = Math.max(parseInt(data.length / requestedLength), 1);\n    return data.filter((sample, i) => i % divider === 0);\n  },\n  generateWaveform: function(arraybuffer) {\n    return this.decodeAudioData(arraybuffer);\n  },\n  delegateToWorker: function() {\n    if (!this.worker) {\n      this.worker = new Worker('../util/svgworker.js');\n      this.worker.addEventListener('message', this.workerCommunication.bind(this), false);\n      this.worker.postMessage(this.channelData);\n    }\n  },\n  workerCommunication: function(e) {\n    switch(e.data.type) {\n      case 'path':\n        this.setSVGpath(e.data.path, e.data.length);\n        this.worker.removeEventListener('message', this.workerCommunication.bind(this), false);\n        this.worker.terminate();\n        this.worker = null;\n        break;\n      default:\n        break;\n    }\n  },\n  setSVGpath: function(path, len) {\n    this.svgPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.svgLength = len;\n\n    this.svgPath.setAttribute('d', path);\n    this.svgPath.setAttribute('vector-effect', 'non-scaling-stroke');\n    this.svgPath.setAttribute('stroke-width', '0.5px');\n\n    this.oncomplete.forEach(fn => fn(this.svgPath, this.svgLength));\n  }\n};\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport Draggable from 'react-draggable';\n\nimport { css } from '@emotion/react'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Segment, httpRequestState, MainMenuStateNames } from '../types'\nimport {\n  selectIsPlaying, selectCurrentlyAt, selectSegments, selectActiveSegmentIndex, selectDuration,\n  setIsPlaying, selectVideoURL, setCurrentlyAt, setClickTriggered\n} from '../redux/videoSlice'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport useResizeObserver from \"use-resize-observer\";\n\nimport { Waveform } from '../util/waveform'\nimport { convertMsToReadableString } from '../util/utilityFunctions';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { scrubberKeyMap } from '../globalKeys';\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { selectMainMenuState } from '../redux/mainMenuSlice';\n\n/**\n * A container for visualizing the cutting of the video, as well as for controlling\n * the current position in the video\n * Its width corresponds to the duration of the video\n * TODO: Figure out why ResizeObserver does not update anymore if we stop passing the width to the SegmentsList\n */\nconst Timeline: React.FC<{}> = () => {\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const duration = useSelector(selectDuration)\n\n  const { ref, width = 1, } = useResizeObserver<HTMLDivElement>();\n\n  const timelineStyle = css({\n    position: 'relative',     // Need to set position for Draggable bounds to work\n    height: '250px',\n    width: '100%',\n  });\n\n  // Update the current time based on the position clicked on the timeline\n  const setCurrentlyAtToClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let rect = e.currentTarget.getBoundingClientRect()\n    let offsetX = e.clientX - rect.left\n    dispatch(setClickTriggered(true))\n    dispatch(setCurrentlyAt((offsetX / width) * (duration)))\n  }\n\n  return (\n  <div ref={ref} css={timelineStyle} title=\"Timeline\" onMouseDown={e => setCurrentlyAtToClick(e)}>\n    <Scrubber timelineWidth={width}/>\n    <div css={{height: '230px'}} >\n      <Waveforms />\n      <SegmentsList timelineWidth={width}/>\n    </div>\n  </div>\n  );\n};\n\n/**\n * Displays and defines the current position in the video\n * @param param0\n */\nconst Scrubber: React.FC<{timelineWidth: number}> = ({timelineWidth}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const currentlyAt = useSelector(selectCurrentlyAt)\n  const duration = useSelector(selectDuration)\n  const activeSegmentIndex = useSelector(selectActiveSegmentIndex)  // For ARIA information display\n  const segments = useSelector(selectSegments)                      // For ARIA information display\n  const mainMenuState = useSelector(selectMainMenuState)            // For hotkey enabling/disabling\n\n  // Init state variables\n  const [controlledPosition, setControlledPosition] = useState({x: 0,y: 0,});\n  const [isGrabbed, setIsGrabbed] = useState(false)\n  const [wasPlayingWhenGrabbed, setWasPlayingWhenGrabbed] = useState(false)\n  const [keyboardJumpDelta, setKeyboardJumpDelta] = useState(1000)  // In milliseconds. For keyboard navigation\n  const wasCurrentlyAtRef = useRef(0)\n  const nodeRef = React.useRef(null); // For supressing \"ReactDOM.findDOMNode() is deprecated\" warning\n\n  // Reposition scrubber when the current x position was changed externally\n  useEffect(() => {\n    if(currentlyAt !== wasCurrentlyAtRef.current && !isGrabbed) {\n      updateXPos();\n      wasCurrentlyAtRef.current = currentlyAt;\n    }\n  })\n\n  // Reposition scrubber when the timeline width changes\n  useEffect(() => {\n    if(currentlyAt && duration) {\n      setControlledPosition({x: (currentlyAt / duration) * (timelineWidth), y: 0});\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineWidth])\n\n  // Callback for when the scrubber gets dragged by the user\n  const onControlledDrag = (e: any, position: any) => {\n    // Update position\n    const {x} = position\n    dispatch(setCurrentlyAt((x / timelineWidth) * (duration)))\n  };\n\n  // Callback for when the position changes by something other than dragging\n  const updateXPos = () => {\n    setControlledPosition({x: (currentlyAt / duration) * (timelineWidth), y: 0});\n  };\n\n  const onStartDrag = () => {\n    setIsGrabbed(true)\n\n    // Halt video playback\n    if (isPlaying) {\n      setWasPlayingWhenGrabbed(true)\n      dispatch(setIsPlaying(false))\n    } else {\n      setWasPlayingWhenGrabbed(false)\n    }\n  }\n\n  const onStopDrag = (e: any, position: any) => {\n    // Update position\n    const {x} = position;\n    setControlledPosition({x, y: 0});\n    dispatch(setCurrentlyAt((x / timelineWidth) * (duration)));\n\n    setIsGrabbed(false)\n    // Resume video playback\n    if (wasPlayingWhenGrabbed) {\n      dispatch(setIsPlaying(true))\n    }\n  }\n\n  // Callbacks for keyboard controls\n  // TODO: Better increases and decreases than ten intervals\n  // TODO: Additional helpful controls (e.g. jump to start/end of segment/next segment)\n  const handlers = {\n    left: () => dispatch(setCurrentlyAt(Math.max(currentlyAt - keyboardJumpDelta, 0))),\n    right: () => dispatch(setCurrentlyAt(Math.min(currentlyAt + keyboardJumpDelta, duration))),\n    increase: () => setKeyboardJumpDelta(keyboardJumpDelta => Math.min(keyboardJumpDelta * 10, 1000000)),\n    decrease: () => setKeyboardJumpDelta(keyboardJumpDelta => Math.max(keyboardJumpDelta / 10, 1))\n  }\n\n  const scrubberStyle = css({\n    backgroundColor: 'black',\n    height: '240px',\n    width: '1px',\n    position: 'absolute' as 'absolute',\n    zIndex: 2,\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  });\n\n  const scrubberDragHandleStyle = css({\n    // Base style\n    background: \"black\",\n    display: \"inline-block\",\n    height: \"10px\",\n    position: \"relative\",\n    width: \"20px\",\n    \"&:after\": {\n      borderTop: '10px solid black',\n      borderLeft: '10px solid transparent',\n      borderRight: '10px solid transparent',\n      content: '\"\"',\n      height: 0,\n      left: 0,\n      position: \"absolute\",\n      top: \"10px\",\n      width: 0,\n    },\n    // Animation\n    cursor: isGrabbed ? \"grabbing\" : \"grab\",\n    transitionDuration: \"0.3s\",\n    transitionProperty: \"transform\",\n    \"&:hover\": {\n      transform: 'scale(1.1)',\n    },\n    \"&:active\": {\n      transform: 'scale(0.9)',\n    },\n  })\n\n  const scrubberDragHandleIconStyle = css({\n    transform: 'scaleY(0.7) rotate(90deg)',\n    paddingRight: '5px',\n    color: \"white\"\n  })\n\n  // // Possible TODO: Find a way to use ariaLive in a way that only the latest change is announced\n  // const keyboardUpdateMessage = () => {\n  //   return currentlyAt +  \" Milliseconds\"\n  // }\n\n  return (\n    <GlobalHotKeys keyMap={scrubberKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true}>\n      <Draggable\n        onDrag={onControlledDrag}\n        onStart={onStartDrag}\n        onStop={onStopDrag}\n        axis=\"x\"\n        bounds=\"parent\"\n        position={controlledPosition}\n        nodeRef={nodeRef}\n        >\n          <div ref={nodeRef} css={scrubberStyle}>\n\n            <div css={scrubberDragHandleStyle} aria-grabbed={isGrabbed}\n              aria-label={t(\"timeline.scrubber-text-aria\",\n                         {currentTime: convertMsToReadableString(currentlyAt), segment: activeSegmentIndex,\n                          segmentStatus: (segments[activeSegmentIndex].deleted ? \"Deleted\" : \"Alive\"),\n                          moveLeft: scrubberKeyMap[handlers.left.name],\n                          moveRight: scrubberKeyMap[handlers.right.name],\n                          increase: scrubberKeyMap[handlers.increase.name],\n                          decrease: scrubberKeyMap[handlers.decrease.name] })}\n              tabIndex={0}>\n              <FontAwesomeIcon css={scrubberDragHandleIconStyle} icon={faBars} size=\"1x\" />\n            </div>\n          </div>\n      </Draggable>\n    </GlobalHotKeys>\n  );\n};\n\n/**\n * Container responsible for rendering the segments that are created when cutting\n */\nconst SegmentsList: React.FC<{timelineWidth: number}> = ({timelineWidth}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const segments = useSelector(selectSegments)\n  const duration = useSelector(selectDuration)\n  const activeSegmentIndex = useSelector(selectActiveSegmentIndex)\n\n  /**\n   * Returns a background color based on whether the segment is to be deleted\n   * and whether the segment is currently active\n   */\n  const bgColor = (deleted: boolean, active: boolean) => {\n    if (!deleted && !active) {\n      return 'rgba(0, 0, 255, 0.4)'\n    } else if (deleted && !active) {\n      return `repeating-linear-gradient(\n                -45deg,\n                rgba(255, 45, 45, 0.4),\n                rgba(255, 45, 45, 0.4) 10px,\n                rgba(255, 0, 0, 0.4) 10px,\n                rgba(255, 0, 0, 0.4) 20px);`\n    } else if (!deleted && active) {\n      return 'rgba(0, 0, 200, 0.4)'\n    } else if (deleted && active) {\n      return `repeating-linear-gradient(\n                -45deg,\n                rgba(200, 45, 45, 0.4),\n                rgba(200, 45, 45, 0.4) 10px,\n                rgba(200, 0, 0, 0.4) 10px,\n                rgba(200, 0, 0, 0.4) 20px);`\n    }\n  }\n\n  // Render the individual segments\n  const renderedSegments = () => {\n    return (\n      segments.map( (segment: Segment, index: number) => (\n        <div key={segment.id} title={t(\"timeline.segment-tooltip\", {segment: index})}\n          aria-label={t(\"timeline.segments-text-aria\",\n                     {segment: index,\n                      segmentStatus: (segment.deleted ? \"Deleted\" : \"Alive\"),\n                      start: convertMsToReadableString(segment.start),\n                      end: convertMsToReadableString(segment.end) })}\n          tabIndex={0}\n        css={{\n          background: bgColor(segment.deleted, activeSegmentIndex === index),\n          borderRadius: '5px',\n          borderStyle: activeSegmentIndex === index ? 'dashed' : 'solid',\n          borderColor: 'white',\n          borderWidth: '1px',\n          boxSizing: 'border-box',\n          width: ((segment.end - segment.start) / duration) * 100 + '%',\n          height: '230px',\n          zIndex: 1,\n        }}>\n        </div>\n      ))\n    );\n  }\n\n  const segmentsStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    paddingTop: '10px',\n  })\n\n  return (\n    <div css={segmentsStyle} title=\"Segments\">\n      {renderedSegments()}\n    </div>\n  );\n};\n\n/**\n * Generates waveform images and displays them\n */\nconst Waveforms: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const videoURLs = useSelector(selectVideoURL)\n  const videoURLStatus = useSelector((state: { videoState: { status: httpRequestState[\"status\"] } }) => state.videoState.status);\n\n  // Update based on current fetching status\n  const [images, setImages] = useState<string[]>([])\n  const [waveformWorkerError, setWaveformWorkerError] = useState<boolean>(false)\n\n  const waveformDisplayTestStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    position: \"absolute\" as \"absolute\",\n    justifyContent: 'center',\n    ...(images.length <= 0) && {alignItems: 'center'},  // Only center during loading\n    width: '100%',\n    height: '230px',\n    paddingTop: '10px',\n  });\n\n  // When the URLs to the videos are fetched, generate waveforms\n  useEffect( () => {\n    if (videoURLStatus === 'success') {\n      const images: string[] = []    // Store local paths to image files\n      let waveformsProcessed : number = 0  // Counter for checking if all workers are done\n\n      // Only display the waveform of the first video we get\n      const onlyOneURL = [videoURLs[0]]\n\n      onlyOneURL.forEach((videoURL, _index, array) => {\n        // Set up blob request\n        var blob = null\n        var xhr = new XMLHttpRequest()\n        xhr.open(\"GET\", videoURL)\n        xhr.responseType = \"blob\"\n        xhr.onload = function()\n        {\n          blob = xhr.response\n          var file = new File([blob], blob)\n\n          // Start waveform worker with blob\n          const waveformWorker : any = new Waveform({type: 'img', width: '2000', height: '230', samples: 100000, media: file})\n\n          waveformWorker.onerror = function(error: string) {\n            setWaveformWorkerError(true)\n            console.log(\"Waveform could not be generated:\" + error)\n          }\n\n          // When done, save path to generated waveform img\n          waveformWorker.oncomplete = function(image: any, numSamples: any) {\n            images.push(image)\n            waveformsProcessed++\n            // If all images are generated, rerender\n            if (waveformsProcessed === array.length) {\n              setImages(images)\n            }\n          }\n        }\n\n        xhr.send()\n      })\n    }\n  }, [videoURLStatus, videoURLs]);\n\n\n  const renderImages = () => {\n    if (images.length > 0) {\n      return (\n        images.map((image, index) =>\n          <img key={index} alt='Waveform' src={image ? image : \"\"} css={{minHeight: 0}}></img>\n        )\n      );\n    } else if (waveformWorkerError) {\n      return (\n        <div>{\"Waveform could not be generated\"}</div>\n      );\n    }\n    else {\n      return (\n        <>\n          <FontAwesomeIcon icon={faSpinner} spin size=\"3x\"/>\n          <div>{t(\"timeline.generateWaveform-text\")}</div>\n        </>\n      );\n    }\n  }\n\n  return (\n  <div css={waveformDisplayTestStyle}>\n    {renderImages()}\n  </div>\n  );\n}\n\nexport default Timeline;\n","import React, { SyntheticEvent } from \"react\";\n\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconDefinition,\n  faCut,\n  faStepBackward,\n  faStepForward,\n  faTrash,\n  faTrashRestore,\n  } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { css } from '@emotion/react'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  cut, markAsDeletedOrAlive, selectIsCurrentSegmentAlive, mergeLeft, mergeRight\n} from '../redux/videoSlice'\nimport { GlobalHotKeys, KeySequence, KeyMapOptions } from \"react-hotkeys\";\nimport { selectMainMenuState } from \"../redux/mainMenuSlice\";\nimport { MainMenuStateNames } from \"../types\";\nimport { cuttingKeyMap } from \"../globalKeys\";\nimport { ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Defines the different actions a user can perform while in cutting mode\n */\nconst CuttingActions: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  /**\n   * General action callback for cutting actions\n   * @param event event triggered by click or button press\n   * @param action redux event to dispatch\n   * @param ref Pass a reference if the clicked element should lose focus\n   */\n  const dispatchAction = (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    event.stopPropagation()                     // Prevent video playback due to Space bar press\n    dispatch(action())\n\n    // Lose focus if clicked by mouse\n    if (ref) {\n      ref.current?.blur()\n    }\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    cut: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, cut, undefined) } },\n    delete: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, markAsDeletedOrAlive, undefined) } },\n    mergeLeft: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, mergeLeft, undefined) } },\n    mergeRight: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, mergeRight, undefined) } },\n  }\n\n  const cuttingStyle =  css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'space-between',\n    ...(flexGapReplacementStyle(30, true)),\n  })\n\n  const blockStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    ...(flexGapReplacementStyle(30, true)),\n  })\n\n  return (\n    <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} >\n      <div css={cuttingStyle}>\n          <div css={blockStyle}>\n            <CuttingActionsButton iconName={faCut}\n              actionName=\"Cut\" actionHandler={dispatchAction} action={cut}\n              tooltip={t('cuttingActions.cut-tooltip', { hotkeyName: (cuttingKeyMap[handlers.cut.name] as KeyMapOptions).sequence })}\n              ariaLabelText={t('cuttingActions.cut-tooltip-aria', { hotkeyName: (cuttingKeyMap[handlers.cut.name] as KeyMapOptions).sequence })}\n            />\n            <MarkAsDeletedButton actionHandler={dispatchAction} action={markAsDeletedOrAlive}\n              hotKeyName={(cuttingKeyMap[handlers.delete.name] as KeyMapOptions).sequence}\n            />\n            <CuttingActionsButton iconName={faStepBackward}\n              actionName=\"Merge Left\" actionHandler={dispatchAction} action={mergeLeft}\n              tooltip={t('cuttingActions.mergeLeft-tooltip', { hotkeyName: (cuttingKeyMap[handlers.mergeLeft.name] as KeyMapOptions).sequence })}\n              ariaLabelText={t('cuttingActions.mergeLeft-tooltip-aria', { hotkeyName: (cuttingKeyMap[handlers.mergeLeft.name] as KeyMapOptions).sequence })}\n            />\n            <CuttingActionsButton iconName={faStepForward}\n              actionName=\"Merge Right\" actionHandler={dispatchAction} action={mergeRight}\n              tooltip={t('cuttingActions.mergeRight-tooltip', { hotkeyName: (cuttingKeyMap[handlers.mergeRight.name] as KeyMapOptions).sequence })}\n              ariaLabelText={t('cuttingActions.mergeRight-tooltip-aria', { hotkeyName: (cuttingKeyMap[handlers.mergeRight.name] as KeyMapOptions).sequence })}\n            />\n          </div>\n          <div css={blockStyle}>\n            {/* <CuttingActionsButton iconName={faQuestion} actionName=\"Reset changes\" action={null}\n              tooltip=\"Not implemented\"\n              ariaLabelText=\"Reset changes. Not implemented\"\n            />\n            <CuttingActionsButton iconName={faQuestion} actionName=\"Undo\" action={null}\n              tooltip=\"Not implemented\"\n              ariaLabelText=\"Undo. Not implemented\"\n            /> */}\n          </div>\n      </div>\n    </GlobalHotKeys>\n  );\n};\n\n/**\n * CSS for cutting buttons\n */\nconst cuttingActionButtonStyle = {\n  padding: '16px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n};\n\ninterface cuttingActionsButtonInterface {\n  iconName: IconDefinition,\n  actionName: string,\n  actionHandler: (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => void,\n  action: ActionCreatorWithoutPayload<string>,\n  tooltip: string,\n  ariaLabelText: string,\n}\n\n/**\n * A button representing a single action a user can take while cutting\n * @param param0\n */\nconst CuttingActionsButton: React.FC<cuttingActionsButtonInterface> = ({iconName, actionName, actionHandler, action, tooltip, ariaLabelText}) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  return (\n    <div css={[basicButtonStyle, cuttingActionButtonStyle]}\n      title={tooltip}\n      ref={ref}\n      role=\"button\" tabIndex={0} aria-label={ariaLabelText}\n      onClick={ (event: SyntheticEvent) => actionHandler(event, action, ref) }\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \" \" || event.key === \"Enter\") {\n        actionHandler(event, action, undefined)\n      }}}\n      >\n      <FontAwesomeIcon icon={iconName} size=\"1x\" />\n      <span>{actionName}</span>\n    </div>\n  );\n};\n\ninterface markAsDeleteButtonInterface {\n  actionHandler: (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => void,\n  action: ActionCreatorWithoutPayload<string>,\n  hotKeyName: KeySequence,\n}\n\n/**\n * Button that changes its function based on context\n */\nconst MarkAsDeletedButton : React.FC<markAsDeleteButtonInterface> = ({actionHandler, action, hotKeyName}) => {\n  const { t } = useTranslation();\n  const isCurrentSegmentAlive = useSelector(selectIsCurrentSegmentAlive)\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  return (\n    <div css={[basicButtonStyle, cuttingActionButtonStyle]}\n      title={t('cuttingActions.delete-restore-tooltip', { hotkeyName: hotKeyName })}\n      ref={ref}\n      role=\"button\" tabIndex={0}\n      aria-label={t('cuttingActions.delete-restore-tooltip-aria', { hotkeyName: hotKeyName })}\n      onClick={(event: SyntheticEvent) => actionHandler(event, action, ref)}\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \" \" || event.key === \"Enter\") {\n        actionHandler(event, action, undefined)\n      }}}\n      >\n      <FontAwesomeIcon icon={isCurrentSegmentAlive ? faTrash : faTrashRestore} size=\"1x\" />\n      <div>{isCurrentSegmentAlive ? t('cuttingActions.delete-button') : t(\"cuttingActions.restore-button\")}</div>\n    </div>\n  );\n}\n\nexport default CuttingActions;\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { errorBoxStyle } from '../cssStyles'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchMetadata, postMetadata, selectCatalogs,\n  Catalog, MetadataField, setFieldValue, selectGetError, selectGetStatus, selectPostError, selectPostStatus, setFieldReadonly\n} from '../redux/metadataSlice'\n\nimport { Form, Field, FieldInputProps } from 'react-final-form'\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\nimport {\n  KeyboardDateTimePicker,\n  KeyboardTimePicker,\n  showErrorOnBlur,\n} from 'mui-rff';\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { DateTime as LuxonDateTime} from \"luxon\";\n\nimport { configureFieldsAttributes, settings } from '../config'\n\n\n/**\n * Creates a Metadata form\n *\n * Takes data from a redux slice and throws it into a react-final-form.\n * When submitting, the state in the redux slice gets updated\n *\n * If something doesn't work, main places of interest are the submit function\n * and the initialValues function\n */\nconst Metadata: React.FC<{}> = () => {\n\n  const { t, i18n } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch()\n  const catalogs = useSelector(selectCatalogs);\n  const getStatus = useSelector(selectGetStatus);\n  const getError = useSelector(selectGetError);\n  const postStatus = useSelector(selectPostStatus);\n  const postError = useSelector(selectPostError);\n\n  // Try to fetch URL from external API\n  useEffect(() => {\n    if (getStatus === 'idle') {\n      dispatch(fetchMetadata())\n    }\n  }, [getStatus, dispatch])\n\n  // Overwrite readonly property of fields based on config settings\n  useEffect(() => {\n    if (getStatus === 'success') {\n      for(let catalogIndex = 0; catalogIndex < catalogs.length; catalogIndex++) {\n        if (settings.metadata.configureFields) {\n          let configureFields = settings.metadata.configureFields\n          let catalog = catalogs[catalogIndex]\n\n          if (catalog.title in configureFields) {\n            if (Object.keys(configureFields[catalog.title]).length > 0) {\n              let configureFieldsCatalog = configureFields[catalog.title]\n\n              for (let fieldIndex = 0; fieldIndex < catalog.fields.length; fieldIndex++) {\n                if (catalog.fields[fieldIndex].id in configureFieldsCatalog) {\n                  if (\"readonly\" in configureFieldsCatalog[catalog.fields[fieldIndex].id]) {\n                    dispatch(setFieldReadonly({catalogIndex: catalogIndex, fieldIndex: fieldIndex,\n                      value: configureFieldsCatalog[catalog.fields[fieldIndex].id].readonly\n                    }))\n                  }\n                }\n              }\n            } else {\n              return undefined\n            }\n          }\n        }\n      }\n    }\n  }, [getStatus, catalogs, dispatch])\n\n  /**\n   * CSS\n   */\n\n  const metadataStyle = css({\n    // maxWidth: '1500px',\n    // margin: '10px',\n    padding: '20px',\n  })\n\n  const fieldStyle = css({\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    lineHeight: '2em',\n    margin: '10px',\n  })\n\n  const fieldLabelStyle = css({\n    alignSelf: 'center',\n    width: '110px',\n    fontSize: '1em',\n    lineHeight: '32px',\n  })\n\n  const fieldTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css({\n        flex: '1',\n        fontSize: '1em',\n        marginLeft: '15px',\n        borderRadius: '5px',\n        backgroundColor: 'snow',\n        boxShadow: isReadOnly ? '0 0 0px rgba(0, 0, 0, 0.3)' : '0 0 1px rgba(0, 0, 0, 0.3)',\n        ...isReadOnly && {color: 'grey'}\n      })\n    );\n  }\n\n  const inputFieldTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css({\n        padding: '10px 10px',\n        border: isReadOnly ? '0px solid #ccc' : '1px solid #ccc',\n      })\n    );\n  }\n\n  const selectFieldTypeStyle = {\n    control: (provided: any) => ({\n      ...provided,\n      background: 'snow'\n    }),\n    menu: (provided: any) => ({\n      ...provided,\n      background: 'snow',\n      // kill the gap\n      marginTop: 0\n    }),\n  }\n\n  const dateTimeTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css ({\n        padding: '5px 10px',\n        border: isReadOnly ? '0px solid #ccc' : '1px solid #ccc',\n      })\n    );\n  }\n\n  const validateStyle = (isError: boolean) => {\n    return (\n      css({\n        lineHeight: '32px',\n        marginLeft: '10px',\n        ...(isError) && {color: '#800'},\n        fontWeight: 'bold',\n      })\n    )\n  }\n\n  // const buttonContainerStyle = css({\n  //   display: 'flex',\n  //   flexFlow: 'row nowrap',\n  //   justifyContent: 'space-around',\n  //   marginTop: '25px',\n  // })\n\n  // // TODO: Rework all div buttons so the ':enabled' pseudo-class does not screw them over\n  // const basicButtonStyleCOPY = css({\n  //   borderRadius: '10px',\n  //   cursor: \"pointer\",\n  //   // Animation\n  //   transitionDuration: \"0.3s\",\n  //   transitionProperty: \"transform\",\n  //   \"&:hover:enabled\": {\n  //     transform: 'scale(1.1)',\n  //   },\n  //   \"&:focus:enabled\": {\n  //     transform: 'scale(1.1)',\n  //   },\n  //   \"&:active:enabled\": {\n  //     transform: 'scale(0.9)',\n  //   },\n  //   // Flex position child elements\n  //   display: 'flex',\n  //   justifyContent: 'center',\n  //   alignItems: 'center',\n  //   gap: '10px',\n  //   textAlign: 'center' as const,\n  // });\n\n  // const submitButtonStyle = css({\n  //   background: 'snow',\n  //   border: '1px solid #ccc',\n\n  //   \"&[disabled]\": {\n  //     opacity: '0.6',\n  //     cursor: 'not-allowed',\n  //   },\n  // })\n\n  /**\n   * Form Callbacks - Other\n   */\n\n   /**\n    * Recursively recreates nested array structures for form initalValues\n    * @param library\n    * @param input\n    * @param output\n    */\n  const helperHandleArrays = (library: any[] | null, input: any, output: any[]) => {\n    // If the value is hid inside an array, we need to extract it\n    if (Array.isArray(input)) {\n      input.forEach((subArray: any) => {\n        output.push(helperHandleArrays(library, subArray, output))\n      })\n    }\n\n    // Find react-select equivalent for inital value\n    return library?.find(el => el.submitValue === input)\n  }\n\n  /**\n   * Returns a data structure to initialize the form fields with\n   * @param catalogs\n   */\n  const getInitialValues = (catalogs: Catalog[]) => {\n    const initValues : { [n: string]: any } = {};\n\n    catalogs.forEach((catalog: Catalog, catalogIndex: number) => {\n      initValues[\"catalog\" + catalogIndex] = {}\n      catalog.fields.forEach((field: MetadataField) =>{\n        initValues[\"catalog\" + catalogIndex][field.id] = field.value\n\n        // Handle initial values for select fields differently\n        // Since react-select creates different values\n        if (field.collection) {\n          const library = generateReactSelectLibrary(field)\n          let searchValue : any = field.value\n\n          if (Array.isArray(searchValue)) {\n            let result: any[] = [];\n            helperHandleArrays(library, field.value, result)\n            searchValue = result\n          } else {\n            searchValue = library?.find(el => el.submitValue === searchValue)\n          }\n\n          initValues[\"catalog\" + catalogIndex][field.id] = searchValue\n        }\n      })\n    })\n\n    return initValues\n  }\n\n  /**\n   * Form Callbacks - Validation\n   */\n\n  /**\n   * Validator for required fields\n   * @param value\n   */\n  const required = (value: any) => (value ? undefined : t(\"metadata.validation.required\"))\n\n  /**\n   * Validator for the duration field\n   * @param value\n   */\n  const duration = (value: any) => {\n    let re: RegExp = /^[0-9][0-9]:[0-9][0-9]:[0-9][0-9]$/\n    return re.test(value) ? undefined : t(\"metadata.validation.duration-format\")\n  }\n\n  /**\n   * Validator for the date time fields\n   * @param date\n   */\n  const dateTimeValidator = (date: any) => {\n    // Empty field is valid value in Opencast\n    if (!date) {\n      return undefined\n    }\n\n    let dt = undefined\n    if (Object.prototype.toString.call(date) === '[object Date]') {\n      dt = LuxonDateTime.fromJSDate(date);\n    }\n    if (typeof(date) === 'string') {\n      dt = LuxonDateTime.fromISO(date);\n    }\n\n    if (dt) {\n      return dt.isValid ? undefined : t(\"metadata.validation.datetime\")\n    }\n    return t(\"metadata.validation.datetime\")\n  }\n\n  // // Function that combines multiple validation functions. Needs to be made typescript conform\n  // const composeValidators = (...validators) => value =>\n  // validators.reduce((error, validator) => error || validator(value), undefined)\n\n  /**\n   * Returns the desired combination of validators for a given field\n   * TODO: Fix 'composeValidators' so this function can actually work as advertised\n   * @param field\n   */\n  const getValidators = (field: MetadataField) => {\n    if (field.required) {\n      return required\n    } else if (field.id === \"duration\") {\n      return duration\n    } else if (field.type === \"date\" || field.type === \"time\") {\n      return dateTimeValidator\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n   * Form Callbacks - Submitting\n   */\n\n   /**\n    * Sends a single value to the corresponding field in redux.\n    * This kinda breaks the form workflow, since we do not use the submit callback\n    * of the form class anymore.\n    * @param value value for the field\n    * @param fieldId String of the form \"catalog{catalogIndex}.name\"\n    */\n  const submitSingleField = (value: any, fieldId: string) => {\n    const catalogIndexString = fieldId.substring(\n      fieldId.indexOf(\"g\") + 1,\n      fieldId.indexOf(\".\")\n    );\n    const fieldName = fieldId.substring(\n      fieldId.indexOf(\".\") + 1,\n      fieldId.length\n    );\n    const catalogIndex = parseInt(catalogIndexString)\n\n    // Find the corresponding field index in the redux catalog\n    for (let fieldIndex = 0; fieldIndex < catalogs[catalogIndex].fields.length; fieldIndex++) {\n      if (catalogs[catalogIndex].fields[fieldIndex].id === fieldName) {\n        // Update the field in the redux catalog\n        dispatch(setFieldValue({catalogIndex: catalogIndex, fieldIndex: fieldIndex,\n          value: parseValue(catalogs[catalogIndex].fields[fieldIndex], value)}))\n        break\n      }\n    }\n  }\n\n  /**\n   * Executes given blur callback while also sending the value of the current field to redux\n   * @param e\n   * @param input\n   */\n  const blurWithSubmit = (e: any, input: any) => {\n      input.onBlur(e);\n      submitSingleField(input.value, input.name)\n  }\n\n  /**\n   * Helper function for onSubmit\n   * Corrects formatting for certain form values\n   * @param field\n   * @param value\n   */\n  const parseValue = (field: MetadataField | null, value: any) => {\n    let returnValue : any = value\n\n    // Parse values out react-multi-select and put them in an array\n    if(Array.isArray(value)) {\n      returnValue = []\n      value.forEach((subValue : any) => {\n        returnValue.push(parseValue(null, subValue))  // Pass field as null to avoid each value into an array later on\n      })\n    }\n\n    // If the value is hidden an object due to react-select, extract it\n    if (typeof value === 'object' && value !== null && value.hasOwnProperty(\"submitValue\")) {\n      returnValue = value.submitValue\n    } else if (typeof value === 'object' && value !== null && value.__isNew__) {\n      returnValue = value.value\n    }\n\n    // For these fields, the value needs to be inside an array\n    if (field && !Array.isArray(value) &&(field.id === \"creator\" || field.id === \"contributor\")) {\n      returnValue = [returnValue]\n    }\n\n    // For these fields, the value needs to be inside an array\n    if (field && (field.type === \"date\" || field.type === \"time\") && Object.prototype.toString.call(returnValue) === '[object Date]') {\n      // If invalid date\n      if ((isNaN(returnValue.getTime()))) {\n        // Do nothing\n      } else {\n        returnValue = returnValue.toJSON()\n      }\n    } else if (field && (field.type === \"date\" || field.type === \"time\") && typeof returnValue === \"string\") {\n      if (returnValue !== \"\") { // Empty string is allowed\n        returnValue = new Date(returnValue).toJSON()\n      }\n    }\n\n    return returnValue\n  }\n\n  /**\n   * Callback for when the form is submitted\n   * Saves values in redux state and sends them to Opencast\n   * @param values\n   */\n  const onSubmit = (values: { [x: string]: { [x: string]: any; }; }) => {\n    // For each submitted value, get the catalog it belongs to\n    Object.keys(values).forEach((formCatalogName: string) => {\n      let catalogIndex = parseInt(formCatalogName.replace(\"catalog\", \"\"))\n\n      // For each field in the submitted values\n      Object.keys(values[formCatalogName]).forEach((formFieldName: any) => {\n        // Find the corresponding field index in the redux catalog\n        for (let fieldIndex = 0; fieldIndex < catalogs[catalogIndex].fields.length; fieldIndex++) {\n          if (catalogs[catalogIndex].fields[fieldIndex].id === formFieldName) {\n            // Update the field in the redux catalog\n            dispatch(setFieldValue({catalogIndex: catalogIndex, fieldIndex: fieldIndex,\n              value: parseValue(catalogs[catalogIndex].fields[fieldIndex], values[formCatalogName][formFieldName])}))\n            break\n          }\n        }\n      })\n\n      // Send updated values to Opencast\n      dispatch(postMetadata())\n    })\n  }\n\n  /**\n   * Form - Rendering\n   */\n\n  /**\n   * Transforms field values and labels into an array of objects\n   * that can be parsed by react-select\n   * @param field\n   */\n  const generateReactSelectLibrary = (field: MetadataField) => {\n    if (field.collection) {\n      // For whatever reason react-select uses 'value' as their key, which is not at all confusing\n      const library: [{value: any, label: any, submitValue: any}] = [{value: \"\", label: \"No value\", submitValue: \"\"}]\n      Object.entries(field.collection).forEach(([key, value]) => {\n        // // Parse License\n        // let [err, result] = safeJsonParse(key)\n        // if (!err) {\n        //   console.log(result)\n        // }\n\n        // Parse Label\n        let descLabel = null\n        if (i18n.exists(`metadata.${field.id}`)) {\n          descLabel = t(`metadata.${field.id}.${key.replaceAll(\".\", \"-\")}`)\n\n          if (field.id === \"license\") {\n            descLabel = t(`metadata.${field.id}.${JSON.parse(key).label.replaceAll(\".\", \"-\")}`)\n          }\n        }\n\n        // Change label for series\n        if (field.id === \"isPartOf\") {\n          descLabel = key\n        }\n\n        // Add to library\n        library.push({\n          value: key,\n          label: descLabel ? descLabel : value,\n          submitValue: value\n        })\n      })\n      return library\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Generates different form components based on the field\n   * @param field\n   * @param input\n   */\n  const generateComponent = (field: MetadataField, input: any) => {\n    input.id = input.name\n    if (field.collection) {\n      if (Array.isArray(field.value)) {\n        return (\n          <CreatableSelect {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            isMulti\n            isClearable\n            readOnly={field.readOnly}\n            options={generateReactSelectLibrary(field)}\n            styles={selectFieldTypeStyle}\n            css={fieldTypeStyle(field.readOnly)}>\n          </CreatableSelect>\n          );\n      } else {\n        return (\n          <Select {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            readOnly={field.readOnly}\n            options={generateReactSelectLibrary(field)}\n            styles={selectFieldTypeStyle}\n            css={fieldTypeStyle(field.readOnly)}>\n          </Select>\n          );\n      }\n\n    } else if (field.type === \"date\") {\n      return (\n        <div css={[fieldTypeStyle(field.readOnly), dateTimeTypeStyle(field.readOnly)]}>\n          <KeyboardDateTimePicker {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            name={field.id}\n            format=\"yyyy/MM/dd HH:mm\"\n            disabled={field.readOnly}\n            dateFunsUtils={DateFnsUtils}\n            showError={showErrorOnBlur}\n          />\n        </div>\n      );\n    } else if (field.type === \"time\") {\n      return (\n        <div css={[fieldTypeStyle(field.readOnly), dateTimeTypeStyle(field.readOnly)]}>\n          <KeyboardTimePicker {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            name={field.id}\n            format=\"HH:mm\"\n            disabled={field.readOnly}\n            dateFunsUtils={DateFnsUtils}\n            showError={showErrorOnBlur}\n          />\n        </div>\n      );\n    } else if (field.type === \"text_long\") {\n      return (\n        <textarea {...input}\n          onBlur={e => {blurWithSubmit(e, input)}}\n          readOnly={field.readOnly}\n          css={[fieldTypeStyle(field.readOnly), inputFieldTypeStyle(field.readOnly)]}\n        />\n      );\n    } else {\n      return(\n        <input {...input}\n          onBlur={e => {blurWithSubmit(e, input)}}\n          readOnly={field.readOnly}\n          css={[fieldTypeStyle(field.readOnly), inputFieldTypeStyle(field.readOnly)]}\n        />\n      );\n    }\n  }\n\n  /**\n   * Renders a field in a catalog\n   * @param field\n   * @param catalogIndex\n   * @param fieldIndex\n   */\n  const renderField = (field: MetadataField, catalogIndex: number, fieldIndex: number) => {\n\n    /**\n     * Wrapper function for component generation.\n     * Handles the special case of KeyboardDateTimePicker/KeyboardTimePicker, which\n     * can't handle empty string as a value (which is what Opencast uses to\n     * represent no date/time)\n     */\n    const generateComponentWithModifiedInput = (field: MetadataField, input: FieldInputProps<any, HTMLElement>) => {\n      if ((field.type === \"date\" || field.type === \"time\") && input.value === \"\") {\n        var {value, ...other} = input\n        return generateComponent(field, other)\n      } else {\n        return generateComponent(field, input)\n      }\n    }\n\n    return (\n        <Field key={fieldIndex}\n                name={\"catalog\" + catalogIndex + \".\" + field.id}\n                validate={getValidators(field)}\n                type={field.type === \"boolean\" ? \"checkbox\" : undefined}  // react-final-form complains if we don't specify checkboxes here\n                >\n                {({ input, meta }) => (\n                  <div css={fieldStyle}>\n                    <label css={fieldLabelStyle} htmlFor={input.name}>{\n                      i18n.exists(`metadata.labels.${field.id}`) ?\n                      t(`metadata.labels.${field.id}`) : field.id\n                    }</label>\n\n                    {generateComponentWithModifiedInput(field, input)}\n                    {meta.error && meta.touched && <span css={validateStyle(true)}>{meta.error}</span>}\n                    {meta.modified && meta.valid && !meta.active && <span css={validateStyle(false)}><FontAwesomeIcon icon={faCheck}/></span>}\n                  </div>\n                )}\n        </Field>\n    );\n  }\n\n  const renderCatalog = (\n    catalog: Catalog,\n    catalogIndex: number,\n    configureFields: { [key: string]: configureFieldsAttributes }\n  ) => {\n    return (\n      <div key={catalogIndex}>\n        <h2>\n          {i18n.exists(`metadata.${catalog.title.replaceAll(\".\", \"-\")}`) ?\n            t(`metadata.${catalog.title.replaceAll(\".\", \"-\")}`) : catalog.title\n          }\n        </h2>\n\n        {catalog.fields.map((field, i) => {\n          // Render fields based on given array (usually parsed from config settings)\n          if (field.id in configureFields && \"show\" in configureFields[field.id]) {\n            if (configureFields[field.id].show) {\n              return renderField(field, catalogIndex, i)\n            } else {\n              return undefined\n            }\n          }\n          return renderField(field, catalogIndex, i)\n        })}\n\n      </div>\n    );\n  }\n\n  /**\n   * Main render function. Renders all catalogs in a single form\n   */\n  const render = () => {\n    return (\n        <Form\n          onSubmit={onSubmit}\n          subscription={{ submitting: true, pristine: true }} // Hopefully causes less rerenders\n          initialValues={getInitialValues(catalogs)}\n          render={({ handleSubmit, form, submitting, pristine, values}) => (\n            <form onSubmit={event => {\n              handleSubmit(event)\n              // Ugly fix for form not getting updated after submit. TODO: Find a better fix\n              form.reset()\n            }} css={metadataStyle}>\n\n              <div css={errorBoxStyle(getStatus === \"failed\")} role=\"alert\">\n                <span>A problem occurred during communication with Opencast.</span><br />\n                {getError ? \"Details: \" + getError : \"No error details are available.\"}<br />\n              </div>\n\n              {catalogs.map((catalog, i) => {\n                if (settings.metadata.configureFields) {\n                  if (catalog.title in settings.metadata.configureFields) {\n                    // If there are no fields for a given catalog, do not render\n                    if (Object.keys(settings.metadata.configureFields[catalog.title]).length > 0) {\n                      return renderCatalog(catalog, i, settings.metadata.configureFields[catalog.title])\n                    } else {\n                      return undefined\n                    }\n                  }\n                }\n                // If there are no settings for a given catalog, just render it completely\n                return renderCatalog(catalog, i, {})\n              })}\n\n{/* \n                <div css={{display: \"block\", wordWrap: \"normal\", whiteSpace: \"pre\"}}>{t(\"metadata.submit-helpertext\", { buttonName: t(\"metadata.submit-button\") })}</div>\n\n\n              <div title=\"buttons\" css={buttonContainerStyle}>\n                <button css={[basicButtonStyleCOPY, nagivationButtonStyle, submitButtonStyle]}\n                  type=\"submit\"\n                  title={t(\"metadata.submit-button-tooltip\")}\n                  aria-label={t(\"metadata.submit-button-tooltip\")}\n                  disabled={submitting || pristine}>\n                    {t(\"metadata.submit-button\")}\n                </button>\n                <button css={[basicButtonStyleCOPY, nagivationButtonStyle, submitButtonStyle]}\n                  type=\"button\"\n                  title={t(\"metadata.reset-button-tooltip\")}\n                  aria-label={t(\"metadata.reset-button-tooltip\")}\n                  onClick={() => {form.reset()}}\n                  disabled={submitting || pristine}>\n                    {t(\"metadata.reset-button\")}\n                </button>\n              </div> */}\n\n              <div css={errorBoxStyle(postStatus === \"failed\")} role=\"alert\">\n                <span>A problem occurred during communication with Opencast. <br />\n                      Changes could not be saved to Opencast.</span><br />\n                {postError ? \"Details: \" + postError : \"No error details are available.\"}<br />\n              </div>\n\n              {/* For debugging the forms current values*/}\n              {/* <FormSpy subscription={{ values: true }}>\n                {({ values }) => (\n                  <pre>{JSON.stringify(values, null, 2)}</pre>\n                )}\n              </FormSpy> */}\n            </form>\n          )}\n        />\n    );\n  }\n\n  return (\n    render()\n  );\n}\n\nexport default Metadata;\n","import React from \"react\";\nimport { css } from '@emotion/react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faTrash,\n  faTrashRestore,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactPlayer from 'react-player'\n\nimport { Track }  from '../types'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTracks, setTrackEnabled } from '../redux/videoSlice'\nimport { basicButtonStyle, deactivatedButtonStyle } from '../cssStyles'\n\nimport { useTranslation } from 'react-i18next';\n\n\n/**\n * Creates the track selection.\n */\nconst TrackSelection: React.FC<{}> = () => {\n\n  // Generate list of tracks\n  const tracks: Track[] = useSelector(selectTracks);\n  const enabledCount = tracks.filter(t => t.video_stream.enabled).length;\n  const trackItems: JSX.Element[] = tracks.map((track: Track) =>\n    <TrackItem key={ track.id } track={ track } enabledCount={ enabledCount } />\n  );\n\n  return (\n    <div>\n      { trackItems }\n      <Description />\n    </div>\n  );\n}\n\n\nconst Description: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const description: string = t('trackSelection.description',\n    'Select or deselect which tracks are used for processing and publication.');\n\n  const descriptionStyle = css({\n    display: 'flex',\n    alignItems: 'center',\n    margin: '20px',\n    padding: '10px',\n    backgroundColor: '#eee',\n  });\n\n  return (\n    <aside css={ descriptionStyle }>\n      <FontAwesomeIcon css={{margin: '10px'}} icon={faInfoCircle} size=\"2x\" />\n      { description }\n    </aside>\n  );\n}\n\n\nconst TrackItem: React.FC<{track: Track, enabledCount: number}> = ({track, enabledCount}) => {\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const header = track.flavor.type + ' '\n    + (track.video_stream.enabled ? ''\n       :  `(${t('trackSelection.trackInactive', 'inactive')})`);\n\n  const trackItemStyle = css({\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '20px',\n    paddingBottom: '10px',\n    backgroundColor: '#eee',\n    verticalAlign: 'middle',\n  });\n\n  const playerStyle = css({\n    display: 'inline-block',\n    width: '80%',\n    maxHeight: '200px',\n    margin: '10px',\n  });\n\n  const headerStyle = css({\n    display: 'inline-block',\n    width: '100%',\n    fontWeight: 'bold',\n    padding: '5px 25px',\n    borderBottom: '1px solid white',\n    textTransform: 'capitalize',\n    fintSize: 'larger',\n  });\n\n  // What state is the track in and can it be deactivated?\n  // We do not permit deactivating the last remaining track\n  // 2 -> Track is enabled and can be deactivated\n  // 1 -> Track is enabled but is the last and cannot be deactivated\n  // 0 -> Track is disabled and can be restored\n  const deleteStatus = track.video_stream.enabled ? (enabledCount > 1 ? 0 : 1) : 2;\n  const deleteEnabled = deleteStatus !== 1;\n  const deleteText = [\n    t('trackSelection.deleteTrackText', 'Delete Track'),\n    t('trackSelection.cannotDeleteTrackText', 'Cannot Delete Track'),\n    t('trackSelection.restoreTrackText', 'Restore Track')\n    ][deleteStatus];\n  const deleteTooltip = [\n    t('trackSelection.deleteTrackTooltip', 'Do not encode and publish this track.'),\n    t('trackSelection.cannotDeleteTrackTooltip', 'Cannot remove this track from publication.'),\n    t('trackSelection.restorerackTooltip', 'Encode and publish this track.')\n    ][deleteStatus];\n  const deleteIcon = [faTrash, faTrash, faTrashRestore][deleteStatus];\n  const trackEnabledChange = () => {\n    dispatch(setTrackEnabled({\n      id: track.id,\n      enabled: !track.video_stream.enabled,\n    }))\n  }\n\n  return (\n    <div css={ trackItemStyle }>\n      <div css={ headerStyle }>{ header }</div>\n      <div css={{ width: '95%', textAlign: 'center', opacity: track.video_stream.enabled ? '1' : '0.5' }}>\n        <ReactPlayer css={ playerStyle } url={ track.uri } width=\"90%\" />\n      </div>\n      <SelectButton\n        text={ deleteText }\n        tooltip={ deleteTooltip }\n        handler={ trackEnabledChange }\n        icon={ deleteIcon }\n        active={ deleteEnabled } />\n    </div>\n  );\n}\n\ninterface selectButtonInterface {\n  handler: any,\n  text: string,\n  icon: any,\n  tooltip: string,\n  active: boolean,\n  color?: string,\n}\n\nconst SelectButton : React.FC<selectButtonInterface> = ({handler, text, icon, tooltip, active, color = 'black'}) => {\n  const buttonStyle = [\n    active ? basicButtonStyle : deactivatedButtonStyle,\n    {\n      margin: '10px 15px',\n      padding: '16px',\n      boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n      width: '25%',\n    }];\n  const clickHandler = () => {\n    active && handler();\n    ref.current?.blur();\n  };\n  const keyHandler = (event: React.KeyboardEvent) => {\n    if (active && (event.key === \" \" || event.key === \"Enter\")) {\n      handler();\n    }\n  };\n  const ref = React.useRef<HTMLDivElement>(null)\n  return (\n    <div css={ buttonStyle }\n         tabIndex={ 0 }\n         ref={ref}\n         role=\"button\"\n         title={ tooltip }\n         aria-label={ tooltip }\n         onClick={ clickHandler }\n         onKeyDown={ keyHandler } >\n      <FontAwesomeIcon css={{ color: color }} icon={ icon } size=\"1x\" />\n      <div>{ text }</div>\n    </div>\n  );\n}\n\nexport default TrackSelection;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSave, faFileExport, faTimesCircle, IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch } from 'react-redux';\nimport { setState, setPageNumber, finish } from '../redux/finishSlice'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Displays a menu for selecting what should be done with the current changes\n */\nconst FinishMenu : React.FC<{}> = () => {\n\n  const finishMenuStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={finishMenuStyle}>\n        <FinishMenuButton iconName={faSave} stateName=\"Save changes\"/>\n        <FinishMenuButton iconName={faFileExport} stateName=\"Start processing\"/>\n        <FinishMenuButton iconName={faTimesCircle} stateName=\"Discard changes\"/>\n    </div>\n  );\n}\n\n/**\n * Buttons for the finish menu\n */\nconst FinishMenuButton: React.FC<{iconName: IconDefinition, stateName: finish[\"value\"]}> = ({iconName, stateName}) => {\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const finish = () => {\n    dispatch(setState(stateName));\n    dispatch(setPageNumber(1))\n  }\n\n  const finishMenuButtonStyle = css({\n    width: '250px',\n    height: '220px',\n    flexDirection: 'column' as const,\n    fontSize: \"x-large\",\n    ...(flexGapReplacementStyle(30, false)),\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  });\n\n  var buttonString;\n  switch(stateName) {\n    case \"Save changes\":\n      buttonString = t(\"finishMenu.save-button\");\n      break;\n    case \"Start processing\":\n      buttonString = t(\"finishMenu.start-button\");\n      break;\n    case \"Discard changes\":\n      buttonString = t(\"finishMenu.discard-button\");\n      break;\n    default: \n      buttonString = \"Could not load String value\";\n      break;\n  }\n\n  return (\n    <div css={[basicButtonStyle, finishMenuButtonStyle]}\n    role=\"button\" tabIndex={0}\n      onClick={ finish }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        finish()\n      }}}>\n      <FontAwesomeIcon  icon={iconName} size=\"2x\"/>\n      <div>{buttonString}</div>\n    </div>\n  );\n};\n\n\n\n\n\nexport default FinishMenu;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\nimport { Segment, PostEditArgument, httpRequestState } from '../types'\nimport { settings } from '../config'\n\nconst initialState: httpRequestState = {\n  status: 'idle',\n  error: undefined,\n}\n\nexport const postVideoInformation = createAsyncThunk('video/postVideoInformation', async (argument: PostEditArgument) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`,\n    { segments: convertSegments(argument.segments), tracks: argument.tracks }\n  )\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes\n * TODO: Create a wrapper for this and workflowPostAndProcessSlice\n */\nconst workflowPostSlice = createSlice({\n  name: 'workflowPostState',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      postVideoInformation.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      postVideoInformation.fulfilled, (state, action) => {\n        state.status = 'success'\n    })\n    builder.addCase(\n      postVideoInformation.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\ninterface segmentAPI {\n  start: number,\n  end: number,\n  deleted: boolean,\n  selected: boolean,\n}\n\n// Convert a segment from how it is stored in redux into\n// a segment that can be send to Opencast\nexport const convertSegments = (segments: Segment[]) => {\n  let newSegments: segmentAPI[] = []\n\n  segments.forEach(segment => {\n    newSegments.push({\n      start: segment.start,\n      end: segment.end,\n      deleted: segment.deleted,\n      selected: false,\n    })\n  });\n\n  return newSegments\n}\n\nexport const selectStatus = (state: { workflowPostState: { status: httpRequestState[\"status\"] } }) =>\n  state.workflowPostState.status\nexport const selectError = (state: { workflowPostAndProcessState: { error: httpRequestState[\"error\"] } }) =>\n  state.workflowPostAndProcessState.error\n\nexport default workflowPostSlice.reducer\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, ariaLive, errorBoxStyle,\n  nagivationButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSpinner, faCheck, faExclamationCircle, faChevronLeft, faSave,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFinishState } from '../redux/finishSlice'\nimport { selectSegments, selectTracks, setHasChanges as videoSetHasChanges } from '../redux/videoSlice'\nimport { postVideoInformation, selectStatus, selectError } from '../redux/workflowPostSlice'\n\nimport { PageButton } from './Finish'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { postMetadata, selectPostError, selectPostStatus, setHasChanges as metadataSetHasChanges } from \"../redux/metadataSlice\";\n\n/**\n * Shown if the user wishes to save.\n * Informs the user about saving and displays a save button\n */\nconst Save : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const finishState = useSelector(selectFinishState)\n\n  const postWorkflowStatus = useSelector(selectStatus);\n  const postError = useSelector(selectError)\n  const postMetadataStatus = useSelector(selectPostStatus);\n  const postMetadataError = useSelector(selectPostError);\n\n  const saveStyle = css({\n    height: '100%',\n    display: finishState !== \"Save changes\" ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={saveStyle} title={t(\"save.saveArea-tooltip\")}>\n      <h1>{t(\"save.headline-text\")}</h1>\n      <span css={{maxWidth: '500px'}}>\n        {t(\"save.info-text\")}\n      </span>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={0} label={t(\"various.goBack-button\")} iconName={faChevronLeft}/>\n        <SaveButton />\n      </div>\n      <div css={errorBoxStyle(postWorkflowStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postError ? t(\"various.error-details-text\", {errorMessage: postError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n      <div css={errorBoxStyle(postMetadataStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postMetadataError ? t(\"various.error-details-text\", {errorMessage: postMetadataError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sends a post request to save current changes\n */\nexport const SaveButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const segments = useSelector(selectSegments)\n  const tracks = useSelector(selectTracks)\n  const workflowStatus = useSelector(selectStatus);\n  const metadataStatus = useSelector(selectPostStatus);\n\n  // Update based on current fetching status\n  let icon = faSave\n  let spin = false\n  let tooltip = t(\"save.confirmButton-default-tooltip\")\n  if (workflowStatus === 'failed' || metadataStatus === 'failed'){\n    icon = faExclamationCircle\n    spin = false\n    tooltip = t(\"save.confirmButton-failed-tooltip\")\n  } else if (workflowStatus === 'success' && metadataStatus === 'success') {\n    icon = faCheck\n    spin = false\n    tooltip = t(\"save.confirmButton-success-tooltip\")\n  } else if (workflowStatus === 'loading' || metadataStatus === 'loading')  {\n    icon = faSpinner\n    spin = true\n    tooltip = t(\"save.confirmButton-attempting-tooltip\")\n  }\n\n  const ariaSaveUpdate = () => {\n    if(workflowStatus === 'success') {\n      return t(\"save.success-tooltip-aria\")\n    }\n  }\n\n  const save = () => {\n    dispatch(postMetadata())\n    dispatch(postVideoInformation({\n      segments: segments,\n      tracks: tracks,\n    }))\n  }\n\n  // Let users leave the page without warning after a successful save\n  useEffect(() => {\n    if (workflowStatus === 'success' && metadataStatus === 'success') {\n      dispatch(videoSetHasChanges(false))\n      dispatch(metadataSetHasChanges(false))\n    }\n  }, [dispatch, metadataStatus, workflowStatus])\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={tooltip}\n      role=\"button\" tabIndex={0}\n      onClick={ save }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        save()\n      }}}>\n      <FontAwesomeIcon icon={icon} spin={spin} size=\"1x\"/>\n      <span>{t(\"save.confirm-button\")}</span>\n      <div css={ariaLive} aria-live=\"polite\" aria-atomic=\"true\">{ariaSaveUpdate()}</div>\n    </div>\n  );\n}\n\n\nexport default Save;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface end {\n  end: boolean,\n  value: 'success' | 'discarded',\n}\n\nconst initialState: end = {\n  end: false,\n  value: 'success',\n}\n\n/**\n * Slice for the main menu state\n */\nexport const endSlice = createSlice({\n  name: 'endState',\n  initialState,\n  reducers: {\n    setEnd: (state, action: PayloadAction<{hasEnded: end[\"end\"], value: end[\"value\"]}>) => {\n      state.end = action.payload.hasEnded;\n      state.value = action.payload.value;\n    },\n  }\n})\n\nexport const { setEnd, } = endSlice.actions\n\n// Export Selectors\nexport const selectIsEnd = (state: { endState: { end: end[\"end\"] }; }) => state.endState.end\nexport const selectEndState = (state: { endState: { value: end[\"value\"] }; }) => state.endState.value\n\nexport default endSlice.reducer\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, nagivationButtonStyle, flexGapReplacementStyle} from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft, faTimesCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFinishState } from '../redux/finishSlice'\nimport { setEnd } from '../redux/endSlice'\n\nimport { PageButton } from './Finish'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Shown if the user wishes to abort.\n * Informs the user about aborting and displays abort button.\n */\nconst Discard : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const finishState = useSelector(selectFinishState)\n\n  const cancelStyle = css({\n    display: finishState !== \"Discard changes\" ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={cancelStyle}>\n      <h1>{t(\"discard.headline-text\")}</h1>\n      <span>\n        {t(\"discard.info-text\")}\n      </span>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={0} label={t(\"various.goBack-button\")} iconName={faChevronLeft} />\n        <DiscardButton />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sets the app into an aborted state\n */\nconst DiscardButton : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const discard = () => {\n    dispatch(setEnd({hasEnded: true, value: 'discarded'}))\n  }\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={t(\"discard.confirm-tooltip\")}\n      role=\"button\" tabIndex={0}\n      onClick={ discard }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        discard()\n      }}}>\n      <FontAwesomeIcon  icon={faTimesCircle} size=\"1x\"/>\n      <span>{t(\"discard.confirm-button\")}</span>\n    </div>\n  );\n}\n\nexport default Discard;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\nimport { PostAndProcessEditArgument, httpRequestState } from '../types'\n\nimport { convertSegments } from './workflowPostSlice'\nimport { settings } from '../config'\n\nconst initialState: httpRequestState = {\n  status: 'idle',\n  error: undefined,\n}\n\nexport const postVideoInformationWithWorkflow = createAsyncThunk('video/postVideoInformationWithWorkflow', async (argument: PostAndProcessEditArgument) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`,\n    { segments: convertSegments(argument.segments), tracks: argument.tracks, workflows: argument.workflow }\n  )\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes and starting a workflow\n * TODO: Create a wrapper for this and workflowPostAndProcessSlice\n */\nconst workflowPostAndProcessSlice = createSlice({\n  name: 'workflowPostAndProcessState',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      postVideoInformationWithWorkflow.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      postVideoInformationWithWorkflow.fulfilled, (state, action) => {\n        state.status = 'success'\n    })\n    builder.addCase(\n      postVideoInformationWithWorkflow.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\nexport const selectStatus = (state: { workflowPostAndProcessState: { status: httpRequestState[\"status\"] } }) =>\n  state.workflowPostAndProcessState.status\nexport const selectError = (state: { workflowPostAndProcessState: { error: httpRequestState[\"error\"] } }) =>\n  state.workflowPostAndProcessState.error\n\n\nexport default workflowPostAndProcessSlice.reducer\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, errorBoxStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTools} from \"@fortawesome/free-solid-svg-icons\";\nimport { faSpinner, faCheck, faExclamationCircle, faChevronLeft, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWorkflows, selectSelectedWorkflowIndex, selectSegments, selectTracks, setHasChanges as videoSetHasChanges } from '../redux/videoSlice'\nimport { postVideoInformationWithWorkflow, selectStatus, selectError } from '../redux/workflowPostAndProcessSlice'\n\nimport { PageButton } from './Finish'\nimport { setEnd } from \"../redux/endSlice\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { postMetadata, selectPostError, selectPostStatus, setHasChanges as metadataSetHasChanges } from \"../redux/metadataSlice\";\n\n/**\n * Will eventually display settings based on the selected workflow index\n */\nconst WorkflowConfiguration : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const postAndProcessWorkflowStatus = useSelector(selectStatus);\n  const postAndProcessError = useSelector(selectError)\n  const postMetadataStatus = useSelector(selectPostStatus);\n  const postMetadataError = useSelector(selectPostError);\n\n  const workflowConfigurationStyle = css({\n    display: 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={workflowConfigurationStyle} title={t(\"workflowConfig.area-tooltip\")}>\n      <h2>{t(\"workflowConfig.headline-text\")}</h2>\n      <FontAwesomeIcon icon={faTools} size=\"10x\" />\n      Placeholder\n      <div>{t(\"workflowConfig.satisfied-text\")}</div>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={1} label={t(\"various.goBack-button\")} iconName={faChevronLeft}/>\n        <SaveAndProcessButton text={t(\"workflowConfig.confirm-button\")}/>\n      </div>\n      <div css={errorBoxStyle(postAndProcessWorkflowStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postAndProcessError ? t(\"various.error-details-text\", {errorMessage: postAndProcessError}) : t(\"various.error-noDetails-text\")}<br/>\n      </div>\n      <div css={errorBoxStyle(postMetadataStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postMetadataError ? t(\"various.error-details-text\", {errorMessage: postMetadataError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sends a post request to save current changes\n * and starts the selected workflow\n */\nexport const SaveAndProcessButton: React.FC<{text: string}> = ({text}) => {\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const workflows = useSelector(selectWorkflows)\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n  const segments = useSelector(selectSegments)\n  const tracks = useSelector(selectTracks)\n  const workflowStatus = useSelector(selectStatus);\n  const metadataStatus = useSelector(selectPostStatus);\n\n  // Let users leave the page without warning after a successful save\n  useEffect(() => {\n    if (workflowStatus === 'success' && metadataStatus === 'success') {\n      dispatch(videoSetHasChanges(false))\n      dispatch(metadataSetHasChanges(false))\n    }\n  }, [dispatch, metadataStatus, workflowStatus])\n\n  const saveAndProcess = () => {\n    dispatch(postMetadata())\n    dispatch(postVideoInformationWithWorkflow({\n      segments: segments,\n      tracks: tracks,\n      workflow: [{id: workflows[selectedWorkflowIndex].id}],\n    }))\n  }\n\n  // Update based on current fetching status\n  let icon = faFileExport\n  let spin = false\n  if (workflowStatus === 'failed' || metadataStatus === 'failed') {\n    icon = faExclamationCircle\n    spin = false\n  } else if (workflowStatus === 'success' && metadataStatus === 'success') {\n    icon = faCheck\n    spin = false\n    dispatch(setEnd({hasEnded: true, value: 'success'}))\n  } else if (workflowStatus === 'loading' || metadataStatus === 'loading') {\n    icon = faSpinner\n    spin = true\n\n  }\n\n  const saveButtonStyle = css({\n    padding: '16px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  })\n\n  return (\n    <div css={[basicButtonStyle, saveButtonStyle]} title={\"Start processing button\"}\n      role=\"button\" tabIndex={0}\n      onClick={ saveAndProcess }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        saveAndProcess()\n      }}}>\n      <FontAwesomeIcon  icon={icon} spin={spin} size=\"1x\"/>\n      <span>{text}</span>\n    </div>\n  );\n}\n\nexport default WorkflowConfiguration;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, errorBoxStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWorkflows, selectSelectedWorkflowIndex, setSelectedWorkflowIndex } from '../redux/videoSlice'\nimport { selectFinishState, selectPageNumber } from '../redux/finishSlice'\n\nimport { PageButton } from './Finish'\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { SaveAndProcessButton } from \"./WorkflowConfiguration\";\nimport { selectStatus, selectError } from \"../redux/workflowPostAndProcessSlice\";\nimport { selectStatus as saveSelectStatus, selectError as saveSelectError } from \"../redux/workflowPostSlice\";\nimport { httpRequestState, Workflow } from \"../types\";\nimport { SaveButton } from \"./Save\";\nimport { EmotionJSX } from \"@emotion/react/types/jsx-namespace\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { Trans } from \"react-i18next\";\n\n/**\n * Allows the user to select a workflow\n */\nconst WorkflowSelection : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialite redux states\n  const workflows = useSelector(selectWorkflows)\n  const finishState = useSelector(selectFinishState)\n  const pageNumber = useSelector(selectPageNumber)\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n\n  const postAndProcessWorkflowStatus = useSelector(selectStatus);\n  const postAndProcessError = useSelector(selectError)\n  const saveStatus = useSelector(saveSelectStatus);\n  const saveError = useSelector(saveSelectError)\n\n  // Create workflow selection\n  const workflowButtons = () => {\n    return (\n      workflows.map( (workflow: Workflow, index: number) => (\n        <WorkflowButton key={index} stateName={workflow.name} workflowIndex={index}/>\n      ))\n    );\n  }\n\n  // Gets the description from the currently selected workflow\n  const workflowDescription = () => {\n    if (workflows.length > selectedWorkflowIndex && workflows[selectedWorkflowIndex].description) {\n      return (\n        workflows[selectedWorkflowIndex].description\n      );\n    } else {\n      return (' ');\n    }\n  }\n\n  const workflowSelectionStyle = css({\n    padding: '20px',\n    display: (finishState === \"Start processing\" && pageNumber === 1) ? 'flex' : 'none',\n    flexDirection: 'column' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(50, false)),\n  })\n\n  const workflowSelectionSelectionStyle = css({\n    display: 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'left',\n    ...(flexGapReplacementStyle(20, false)),\n    flexWrap: 'wrap',\n    maxHeight: '50vh',\n  })\n\n  // Layout template\n  const render = (topTitle: string, topText: {} | null | undefined, hasWorkflowButtons: boolean,\n    bottomText: {} | null | undefined, nextButton: EmotionJSX.Element, errorStatus: httpRequestState[\"status\"],\n    errorMessage: httpRequestState[\"error\"]) => {\n    return (\n      <div css={workflowSelectionStyle}>\n        <h2>{topTitle}</h2>\n        {topText}\n        { hasWorkflowButtons &&\n          <div css={workflowSelectionSelectionStyle} title=\"Workflow Selection Area\">\n            {workflowButtons()}\n          </div>\n        }\n        {bottomText}\n        <div css={backOrContinueStyle}>\n          <PageButton pageNumber={0} label={t(\"workflowSelection.back-button\")} iconName={faChevronLeft}/>\n          {/* <PageButton pageNumber={2} label=\"Continue\" iconName={faChevronRight}/> */}\n          {nextButton}\n        </div>\n        <div css={errorBoxStyle(errorStatus === \"failed\")} role=\"alert\">\n          <span>{t(\"various.error-text\")}</span><br />\n          {errorMessage ? t(\"various.error-details-text\", {errorMessage: postAndProcessError}) : t(\"various.error-noDetails-text\")}<br/>\n        </div>\n      </div>\n    );\n  }\n\n  // Fills the layout template with values based on how many workflows are available\n  const renderSelection = () => {\n    if (workflows.length <= 0) {\n      return(\n        render(\n          t(\"workflowSelection.saveAndProcess-text\"),\n          <Trans i18nKey=\"workflowSelection.noWorkflow-text\">\n            A problem occurred, there are no workflows to process your changes with.<br />\n            Please save your changes and contact an Opencast Administrator.\n          </Trans>,\n          false,\n          \"\",\n          <SaveButton />,\n          saveStatus,\n          saveError\n        )\n      );\n    } else if (workflows.length === 1) {\n      return (\n        render(\n          t(\"workflowSelection.saveAndProcess-text\"),\n          <Trans i18nKey=\"workflowSelection.oneWorkflow-text\">\n            The video will be cut and processed with the workflow \"{{workflow: workflows[0].name}}\".<br/>\n            This will take some time.\n          </Trans>,\n          false,\n          \"\",\n          <SaveAndProcessButton text={t(\"workflowSelection.startProcessing-button\")}/>,\n          postAndProcessWorkflowStatus,\n          postAndProcessError\n        )\n      );\n    } else {\n      return (\n        render(\n          t(\"workflowSelection.selectWF-text\"),\n          <div>\n            {t(\"workflowSelection.manyWorkflows-text\")}\n          </div>,\n          true,\n          <div><i>{workflowDescription()}</i></div>,\n          <SaveAndProcessButton text= {t(\"workflowSelection.startProcessing-button\")}/>,\n          postAndProcessWorkflowStatus,\n          postAndProcessError\n        )\n      )\n    }\n  }\n\n  return (\n    renderSelection()\n  );\n}\n\n/**\n * Clicking this button sets the associated workflow as selected\n * @param param0\n */\nconst WorkflowButton: React.FC<{stateName: string, workflowIndex: number}> = ({stateName, workflowIndex}) => {\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n\n  const selectWorkflowIndex = () => {\n    dispatch(setSelectedWorkflowIndex(workflowIndex))\n  }\n\n  const workflowButtonStyle = css({\n    backgroundColor: workflowIndex !== selectedWorkflowIndex ? 'snow' : '#DDD',\n    padding: '16px',\n  });\n\n  return (\n    <div css={[basicButtonStyle,workflowButtonStyle]} title={t(\"workflowSelection.selectWF-button\")}\n      role=\"button\" tabIndex={0}\n      aria-label={t(\"workflowSelection.selectWF-button\", {stateName})}\n      onClick={ selectWorkflowIndex }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        selectWorkflowIndex()\n      }}}>\n      <span>{stateName}</span>\n    </div>\n  );\n}\n\nexport default WorkflowSelection;\n","import React from \"react\";\n\nimport FinishMenu from \"./FinishMenu\";\nimport Save from \"./Save\"\nimport Discard from \"./Discard\"\nimport WorkflowSelection from \"./WorkflowSelection\";\nimport WorkflowConfiguration from \"./WorkflowConfiguration\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPageNumber, setPageNumber } from '../redux/finishSlice'\n\n/**\n * Displays a menu for selecting what should be done with the current changes\n */\nconst Finish : React.FC<{}> = () => {\n\n  const pageNumber = useSelector(selectPageNumber)\n\n  const pageZeroStyle = css({\n    display: pageNumber !== 0 ? 'none' :'block',\n  })\n\n  const pageOneStyle = css({\n    display: pageNumber !== 1 ? 'none' :'block',\n  })\n\n  const pageTwoStyle = css({\n    display: pageNumber !== 2 ? 'none' :'block',\n  })\n\n  return (\n    <div>\n      <div css={pageZeroStyle} >\n        <FinishMenu />\n      </div>\n      <div css={pageOneStyle} >\n        <Save />\n        <WorkflowSelection />\n        <Discard />\n      </div>\n      <div css={pageTwoStyle} >\n        <WorkflowConfiguration />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Takes you to a different page\n */\nexport const PageButton : React.FC<{pageNumber: number, label: string, iconName: IconDefinition}> = ({pageNumber, label, iconName}) => {\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const onPageChange = () => {\n    dispatch(setPageNumber(pageNumber))\n  }\n\n  const pageButtonStyle = css({\n    width: '200px',\n    padding: '16px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n    justifyContent: 'space-around'\n  })\n\n  return (\n    <div css={[basicButtonStyle, pageButtonStyle]}\n      role=\"button\" tabIndex={0}\n      onClick={ onPageChange }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        onPageChange()\n      }}}>\n      <FontAwesomeIcon icon={iconName} size=\"1x\" />\n      <span>{label}</span>\n    </div>\n  );\n}\n\n\nexport default Finish;\n","import { css } from \"@emotion/react\";\nimport React from \"react\";\n\nimport { getApplicationKeyMap, KeyMapDisplayOptions } from 'react-hotkeys';\nimport { useTranslation } from \"react-i18next\";\nimport { flexGapReplacementStyle } from \"../cssStyles\";\n\nconst Group: React.FC<{name: string, entries: KeyMapDisplayOptions[]}> = ({name, entries}) => {\n\n  const groupStyle = css({\n    display: 'flex',\n    flexDirection: 'column' as const,\n    width: '500px'\n  });\n\n  const headingStyle = css({\n    borderBottom: '1px solid #BBB',\n  })\n\n  return (\n    <div css={groupStyle}>\n      <h3 css={headingStyle}>{name}</h3>\n      {entries.map((entry: KeyMapDisplayOptions, index: number) => (\n        <Entry params={entry} key={index}></Entry>\n      ))}\n    </div>\n  )\n}\n\nconst Entry: React.FC<{params: KeyMapDisplayOptions}> = ({params}) => {\n\n  const { t } = useTranslation();\n\n  const entryStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    width: '100%',\n    paddingBottom: '5px',\n    paddingTop: '5px',\n  });\n\n  const labelStyle = css({\n    alignSelf: 'center',\n    width: '110px',\n    height: '64px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    wordWrap: 'break-word',\n\n    // Center text vertically\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n    flexDirection: 'column',\n  })\n\n  const sequenceStyle = css({\n    alignSelf: 'center',\n    marginLeft: '15px',\n    display: 'flex',\n    flexDirection: 'row' as const,\n    ...(flexGapReplacementStyle(10, true))\n  })\n\n  const singleKeyStyle = css({\n    borderRadius: '5px',\n    borderWidth: '2px',\n    borderStyle: 'solid',\n    borderColor: 'Gainsboro',\n    background: 'linear-gradient(180deg, rgba(255,255,255,1) 0%, rgba(245,245,245,1) 100%)',\n    padding: '10px',\n  })\n\n  const orStyle = css({\n    alignSelf: 'center',\n    lineHeight: '32px',\n  })\n\n  return (\n    <div css={entryStyle}>\n      <div css={labelStyle}>{params.name || t(\"keyboardControls.missingLabel\")}</div>\n      {params.sequences.map((sequence, index, arr) => (\n        <div css={sequenceStyle} key={index}>\n          {sequence.sequence.toString().split('+').map((singleKey, index) => (\n            <div css={singleKeyStyle} key={index}>{singleKey}</div>\n          ))}\n          <div css={orStyle}>{arr.length - 1 !== index && t(\"keyboardControls.sequenceSeperator\")}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\n\nconst KeyboardControls: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const keyMap = getApplicationKeyMap();\n\n  const groupsStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    flexWrap: 'wrap',\n    ...(flexGapReplacementStyle(30, true)),\n  })\n\n  const render = () => {\n    if (keyMap && Object.keys(keyMap).length > 0) {\n\n      var obj: Record<string,Array<KeyMapDisplayOptions>> = {}\n      obj[t(\"keyboardControls.defaultGroupName\")] = []    // For keys without a group\n\n      // Sort by group\n      for (const [, value] of Object.entries(keyMap)) {\n        if (value.group) {\n          if (obj[value.group]) {\n            obj[value.group].push(value)\n          } else {\n            obj[value.group] = [value]\n          }\n        } else {\n          obj[t(\"keyboardControls.defaultGroupName\")].push(value)\n        }\n      }\n\n      const groups: JSX.Element[] = [];\n      for (const key in obj) {\n        if (obj[key].length > 0) {\n          groups.push(<Group name={key} entries={obj[key]} key={key}/>);\n        }\n      }\n\n      return (\n        <div css={groupsStyle}>\n          {groups}\n        </div>\n      )\n    }\n\n    // No groups fallback\n    return <div>{t(\"keyboardControls.genericError\")}</div>\n  }\n\n  return (\n    <div>\n      <h2>\n      {t(\"keyboardControls.header\")}\n      </h2>\n\n      {render()}\n\n    </div>\n  );\n};\n\nexport default KeyboardControls;\n","import React from \"react\";\n\nimport Video from './Video';\nimport Timeline from './Timeline';\nimport CuttingActions from './CuttingActions';\nimport Metadata from './Metadata';\nimport TrackSelection from './TrackSelection';\nimport Finish from \"./Finish\"\nimport KeyboardControls from \"./KeyboardControls\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTools} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { css } from '@emotion/react'\n\nimport { useSelector } from 'react-redux'\nimport { selectMainMenuState } from '../redux/mainMenuSlice'\n\nimport { MainMenuStateNames } from '../types'\nimport { flexGapReplacementStyle } from \"../cssStyles\";\n\nimport { useBeforeunload } from 'react-beforeunload';\nimport { hasChanges as videoHasChanges } from \"../redux/videoSlice\";\nimport { hasChanges as metadataHasChanges} from \"../redux/metadataSlice\";\n\n/**\n * A container for the main functionality\n * Shows different components depending on the state off the app\n */\nconst MainContent: React.FC<{}> = () => {\n\n  const mainMenuState = useSelector(selectMainMenuState)\n  const videoChanged = useSelector(videoHasChanges)\n  const metadataChanged = useSelector(metadataHasChanges)\n\n  // Display warning when leaving the page if there are unsaved changes\n  useBeforeunload((event: { preventDefault: () => void; }) => {\n    if (videoChanged || metadataChanged) {\n      event.preventDefault();\n    }\n  });\n\n  // Return display 'flex' if state is currently active\n  // also keep track if any state was activated\n  var stateActive = false;\n  let displayState = (state: MainMenuStateNames): object => {\n    if (mainMenuState === state) {\n      stateActive = true;\n      return { display: \"flex\" };\n    }\n    return { display: 'none' };\n  }\n\n  const cuttingStyle = css({\n    ...displayState(MainMenuStateNames.cutting),\n    flexDirection: 'column' as const,\n    justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    paddingLeft: '20px',\n  })\n\n  const metadataStyle = css({\n    ...displayState(MainMenuStateNames.metadata),\n    // flexDirection: 'column' as const,\n    // justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    paddingLeft: '20px',\n  })\n\n  const trackSelectStyle = css({\n    ...displayState(MainMenuStateNames.trackSelection),\n    flexDirection: 'column' as const,\n    alignContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    height: '100%',\n  })\n\n  const finishStyle = css({\n    ...displayState(MainMenuStateNames.finish),\n    flexDirection: 'column' as const,\n    justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    height: '100%',\n  })\n\n  const keyboardControlsStyle = css({\n    ...displayState(MainMenuStateNames.keyboardControls),\n    flexDirection: 'column' as const,\n    justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    paddingLeft: '20px',\n  })\n\n  const defaultStyle = css({\n    display: stateActive ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(20, false)),\n  })\n\n  return (\n     <main css={{width: '100%'}} role=\"main\">\n      <div css={cuttingStyle}>\n          <Video />\n          <CuttingActions />\n          <Timeline />\n      </div>\n      <div css={metadataStyle}>\n          <Metadata />\n      </div>\n      <div css={trackSelectStyle}>\n          <TrackSelection />\n      </div>\n      <div css={finishStyle}>\n        <Finish />\n      </div>\n      <div css={keyboardControlsStyle}>\n          <KeyboardControls />\n      </div>\n      <div css={defaultStyle}>\n        <FontAwesomeIcon icon={faTools} size=\"10x\" />\n        Placeholder\n      </div>\n     </main>\n  );\n};\n\nexport default MainContent;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector } from 'react-redux';\nimport { selectDuration } from '../redux/videoSlice'\nimport { selectEndState } from '../redux/endSlice'\nimport { basicButtonStyle, flexGapReplacementStyle, nagivationButtonStyle } from \"../cssStyles\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the user is \"done\" with the editor\n * and should not be able to perfom any actions anymore\n */\nconst TheEnd : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const endState = useSelector(selectEndState)\n  const duration = useSelector(selectDuration)\n\n  const icon = () => {\n    if (endState === 'discarded') {\n      return faTimesCircle\n    } else {\n      return faCheckCircle\n    }\n  }\n\n  const text = () => {\n    if (endState === 'discarded') {\n      return t(\"theEnd.discarded-text\")\n    } else if (endState === 'success') {\n      return t(\"theEnd.info-text\", {duration: `${new Date((duration * 2)).toISOString().substr(11, 8)}`}\n      )\n    }\n  }\n\n  const theEndStyle = css({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(20, false)),\n  })\n\n  return (\n    <div css={theEndStyle} title=\"The End\">\n      <FontAwesomeIcon icon={icon()} size=\"10x\" />\n      <div>{text()}</div>\n      {(endState === 'discarded') && <StartOverButton />}\n    </div>\n  );\n}\n\n\nconst StartOverButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const reloadPage = () => {\n    window.location.reload(true);\n  };\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={t(\"theEnd.startOver-tooltip\")}\n      role=\"button\" tabIndex={0}\n      onClick={ reloadPage }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        reloadPage()\n      }}}>\n      {/* <FontAwesomeIcon icon={icon} spin={spin} size=\"1x\"/> */}\n      <span>{t(\"theEnd.startOver-button\")}</span>\n    </div>\n  );\n}\n\nexport default TheEnd\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFrown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector } from 'react-redux';\nimport { selectErrorDetails, selectErrorMessage } from '../redux/errorSlice'\nimport { flexGapReplacementStyle } from \"../cssStyles\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the application has run into a critical error\n * from which it cannot recover.\n */\n const Error : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const errorMessage = useSelector(selectErrorMessage)\n  const errorDetails = useSelector(selectErrorDetails)\n\n  const detailsStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  })\n\n  const theEndStyle = css({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(10, false)),\n  })\n\n  return (\n    <div css={theEndStyle} >\n      <div>{t(\"error.generic-message\")}</div>\n      <FontAwesomeIcon icon={faFrown} size=\"10x\" />\n      <span>{errorMessage}</span><br />\n      <div css={detailsStyle}>\n        <span>{t(\"error.details\")}</span><br />\n        <span>{errorDetails ? errorDetails : t(\"various.error-noDetails-text\") }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Error\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the application has run into a critical error\n * from which it cannot recover.\n */\n const Landing : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const landingStyle = css({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    a: {\n      color: '#007bff',\n      textDecoration: 'none',\n    },\n    li: {\n      margin: '5px',\n    },\n    code: {\n      userSelect: 'all',\n      color: '#e83e8c',\n    }\n  })\n\n  return (\n    <div css={landingStyle} >\n      <h1>{t(\"landing.main-heading\")}</h1>\n      <div>\n        <li>\n        {t(\"landing.contact-admin\")}\n        </li>\n        <li>\n          {t(\"landing.start-editing-1\")}\n          <code> ?=mediaPackageId=[media-package-id]</code>\n          {t(\"landing.start-editing-2\")}\n        </li>\n        <li>\n          {t(\"landing.link-to-documentation\")}\n          <a href=\"https://docs.opencast.org/stable/admin/modules/editor/\">\n            docs.opencast.org\n          </a>\n        </li>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing\n","import React from \"react\";\n\nimport MainMenu from './MainMenu';\nimport MainContent from './MainContent';\nimport TheEnd from './TheEnd';\nimport Error from './Error';\nimport Landing from \"./Landing\";\n\nimport { useSelector } from 'react-redux';\nimport { selectIsEnd } from '../redux/endSlice'\nimport { selectIsError } from \"../redux/errorSlice\";\nimport { settings } from '../config';\n\n\nconst Body: React.FC<{}> = () => {\n\n  const isEnd = useSelector(selectIsEnd)\n  const isError = useSelector(selectIsError)\n\n  // If we're in a special state, display a special page\n  // Otherwise display the normal page\n  const main = () => {\n    if (!settings.mediaPackageId) {\n      return (\n        <Landing />\n      )\n    } else if (isEnd) {\n      return (\n        <TheEnd />\n      );\n    } else if (isError) {\n      return (\n        <Error />\n      );\n    } else {\n      return (\n        <div css={bodyStyle}>\n          <MainMenu />\n          <MainContent />\n        </div>\n      );\n    }\n  }\n\n  const bodyStyle = {\n    display: 'flex',\n    flexDirection: 'row' as const,\n    height: '100%',\n  };\n\n  return (\n    <React.Fragment>\n      {main()}\n    </React.Fragment>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport Body from './main/Body';\nimport { GlobalStyle } from './cssStyles'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport mainMenuStateReducer from './mainMenuSlice'\nimport finishStateReducer from './finishSlice'\nimport videoReducer from './videoSlice'\nimport workflowPostReducer from './workflowPostSlice'\nimport workflowPostAndProcessReducer from './workflowPostAndProcessSlice'\nimport endReducer from './endSlice'\nimport metadataReducer from './metadataSlice'\nimport errorReducer from './errorSlice'\n\nexport default configureStore({\n  reducer: {\n    mainMenuState: mainMenuStateReducer,\n    finishState: finishStateReducer,\n    videoState: videoReducer,\n    workflowPostState: workflowPostReducer,\n    workflowPostAndProcessState: workflowPostAndProcessReducer,\n    endState: endReducer,\n    metadataState: metadataReducer,\n    errorState: errorReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nimport { init } from './config'\nimport { sleep } from './util/utilityFunctions'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { GlobalHotKeys } from 'react-hotkeys';\n\n\n// Load config here\n// Load the rest of the application and try to fetch the settings file from the\n// server.\nconst initialize = Promise.race([\n  init(),\n  sleep(300),\n]);\n\nconst render = (body: JSX.Element) => {\n  ReactDOM.render(body, document.getElementById('root'));\n};\n\ninitialize.then(\n\n  () => {\n    ReactDOM.render(\n      <React.StrictMode>\n          <Provider store={store}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              {/* Workaround for getApplicationKeyMap based on https://github.com/greena13/react-hotkeys/issues/228 */}\n              <GlobalHotKeys>\n                <App />\n              </GlobalHotKeys>\n            </MuiPickersUtilsProvider>\n          </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  },\n\n  // This error case is vey unlikely to occur.\n  e => render(<p>\n    {`Fatal error while loading app: ${e.message}`}\n    <br />\n    This might be caused by a incorrect configuration by the system administrator.\n  </p>),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}