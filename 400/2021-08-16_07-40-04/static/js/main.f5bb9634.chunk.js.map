{"version":3,"sources":["types.ts","redux/mainMenuSlice.ts","config.ts","redux/finishSlice.ts","util/utilityFunctions.ts","cssStyles.tsx","util/client.js","redux/videoSlice.ts","i18n/config.tsx","main/MainMenu.tsx","globalKeys.ts","redux/metadataSlice.ts","redux/errorSlice.ts","main/Video.tsx","util/waveform.js","main/Timeline.tsx","main/CuttingActions.tsx","main/Metadata.tsx","main/TrackSelection.tsx","main/FinishMenu.tsx","redux/workflowPostSlice.ts","main/Save.tsx","redux/endSlice.ts","main/Discard.tsx","redux/workflowPostAndProcessSlice.ts","main/WorkflowConfiguration.tsx","main/WorkflowSelection.tsx","main/Finish.tsx","main/MainContent.tsx","main/TheEnd.tsx","main/Error.tsx","main/Landing.tsx","main/Body.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["MainMenuStateNames","configFileSettings","urlParameterSettings","settings","initialState","value","cutting","mainMenuSlice","createSlice","name","reducers","setState","state","action","payload","actions","selectMainMenuState","mainMenuState","finishSlice","pageNumber","setPageNumber","selectFinishState","finishState","selectPageNumber","defaultSettings","mediaPackageId","undefined","opencast","url","window","location","origin","password","metadata","show","showFields","trackSelection","thumbnail","init","a","loadContextSettings","then","result","validate","urlParams","URLSearchParams","search","rawUrlSettings","forEach","key","obj","segments","split","slice","segment","length","merge","all","basepath","process","endsWith","settingsPath","REACT_APP_SETTINGS_PATH","base","startsWith","fetch","response","console","warn","status","debug","ok","error","statusText","headers","get","parseToml","text","SyntaxError","allowParse","src","sourceDescription","schema","path","validateValue","validateObj","validation","newValue","e","out","newPath","SCHEMA","types","v","Error","Array","isArray","item","string","boolean","objectWithStringArrays","b","deepmerge","arrayMerge","array","flexGapIsSupported","destinationArray","sourceArray","options","roundToDecimalPlace","num","decimalPlace","decimalFactor","Math","pow","round","Number","EPSILON","convertMsToReadableString","ms","hours","Date","toISOString","substr","minutes","seconds","parseInt","push","join","checkFlexGapSupport","flex","document","createElement","style","display","flexDirection","rowGap","position","appendChild","body","scrollHeight","parentNode","removeChild","GlobalStyle","styles","globalStyle","css","emotionNormalize","backgroundColor","fontSize","minHeight","flexGapReplacementStyle","flexGapValue","flexDirectionIsRow","half","quarter","gap","marginTop","marginBottom","marginRight","marginLeft","basicButtonStyle","borderRadius","cursor","transitionDuration","transitionProperty","transform","justifyContent","alignItems","textAlign","deactivatedButtonStyle","opacity","nagivationButtonStyle","backOrContinueStyle","ariaLive","errorBoxStyle","errorStatus","borderColor","borderStyle","fontWeight","padding","client","endpoint","customConfig","authHeaders","encoded","btoa","unescape","encodeURIComponent","config","method","JSON","stringify","includes","data","parse","Promise","reject","message","post","isPlaying","isPlayPreview","currentlyAt","id","nanoid","start","end","deleted","tracks","masterAudio","activeSegmentIndex","selectedWorkflowIndex","previewTriggered","clickTriggered","aspectRatios","hasChanges","videoURLs","videoCount","duration","title","presenters","workflows","fetchVideoInformation","createAsyncThunk","updateCurrentlyAt","milliseconds","updateActiveSegment","skipDeletedSegments","videoSlice","setTrackEnabled","disableMasterAudio","track","video_stream","enabled","audio_stream","setMasterAudio","setIsPlaying","setIsPlayPreview","setPreviewTriggered","setClickTriggered","setCurrentlyAt","setCurrentlyAtInSeconds","addSegment","setAspectRatio","dataKey","width","height","setHasChanges","cut","segmentA","segmentB","splice","markAsDeletedOrAlive","setSelectedWorkflowIndex","mergeLeft","mergeSegments","mergeRight","extraReducers","builder","addCase","pending","fulfilled","reduce","o","uri","parseSegments","sort","n1","n2","displayOrder","rejected","findIndex","element","newSegments","mergeSegmentIndex","min","max","endTime","index","selectIsPlaying","videoState","selectIsPlayPreview","selectPreviewTriggered","selectClickTriggered","selectCurrentlyAt","selectCurrentlyAtInSeconds","selectSegments","selectActiveSegmentIndex","selectIsCurrentSegmentAlive","selectSelectedWorkflowIndex","selectVideoURL","selectVideoCount","selectDuration","selectDurationInSeconds","selectTitle","selectPresenters","selectTracks","selectMasterAudio","selectWorkflows","selectAspectRatio","apply","map","minWidth","calculateTotalAspectRatio","resources","en","translation","i18n","use","initReactI18next","LanguageDetector","fallbackLng","MainMenuButton","iconName","stateName","t","useTranslation","dispatch","useDispatch","activeState","useSelector","onMenuItemClicked","finish","mainMenuButtonStyle","buttonString","toLowerCase","replace","role","tabIndex","onClick","onKeyDown","event","icon","size","MainMenu","mainMenuStyle","borderRight","flexShrink","aria-label","faCut","faListUl","faFilm","faPhotoVideo","faSignOutAlt","rewriteKeys","newKey","isMacOs","cuttingKeyMap","delete","preview","play","scrubberKeyMap","left","right","increase","decrease","catalogs","postStatus","postError","fetchMetadata","postMetadata","_","getState","allStates","metadataState","metadataSlice","setFieldValue","catalogIndex","fields","fieldIndex","selectCatalogs","selectGetStatus","selectGetError","selectPostStatus","selectPostError","selectTitleFromEpisodeDc","catalog","flavor","field","errorSlice","errorMessage","errorDetails","setError","selectIsError","errorState","selectErrorMessage","selectErrorDetails","VideoPlayer","isPrimary","aspectRatio","ref","useRef","useState","ready","setReady","onProgressCallback","playedSeconds","onReadyCallback","current","getInternalPlayer","w","videoWidth","h","videoHeight","onEndedCallback","useEffect","seekTo","onErrorCallback","playerConfig","file","attributes","playerWrapper","paddingTop","reactPlayerStyle","playing","muted","onProgress","progressInterval","onReady","onEnded","onError","disablePictureInPicture","VideoControls","videoControlsRowStyle","leftSideBoxStyle","rightSideBoxStyle","PreviewMode","React","switchPlayPreview","preventDefault","stopPropagation","blur","handlers","keyEvent","previewModeStyle","switchIconStyle","hotkeyName","aria-checked","aria-hidden","keyMap","allowChanges","faToggleOn","faToggleOff","PlayButton","switchIsPlaying","faPause","faPlay","aria-pressed","TimeDisplay","VideoHeader","presenter_header","metadataTitle","titleStyle","titleStyleBold","Video","videoURLStatus","videoPlayers","i","videoAreaStyle","borderBottom","videoPlayerAreaStyle","Waveform","opts","this","audioContext","AudioContext","oCanvas","buffer","WIDTH","HEIGHT","channelData","waveformImage","audioBuffer","aveRMS","peakRMS","numberSamples","waveformType","drawWaveform","drawCanvasWaveform","setDimensions","samples","type","delegateToWorker","worker","media","generateWaveform","getAudioData","_completeFuncs","fn","svgPath","catch","log","_error","toString","onerror","Object","defineProperty","set","opt","svgLength","_errorFuncs","prototype","constructor","ocCtx","getContext","decodeAudioData","arraybuffer","resolve","res","rej","ArrayBuffer","Blob","reader","FileReader","onload","readAsArrayBuffer","audiobuffer","dropSamples","getChannelData","amp","fillStyle","fillRect","lineWidth","strokeStyle","sliceWidth","x","beginPath","moveTo","sample","y","lineTo","stroke","sqrt","aveDBs","toDataURL","requestedLength","divider","filter","Worker","addEventListener","workerCommunication","bind","postMessage","setSVGpath","removeEventListener","terminate","len","createElementNS","setAttribute","oncomplete","Scrubber","timelineWidth","controlledPosition","setControlledPosition","isGrabbed","setIsGrabbed","wasPlayingWhenGrabbed","setWasPlayingWhenGrabbed","keyboardJumpDelta","setKeyboardJumpDelta","wasCurrentlyAtRef","nodeRef","updateXPos","scrubberStyle","zIndex","boxShadow","scrubberDragHandleStyle","background","borderTop","borderLeft","content","top","scrubberDragHandleIconStyle","onDrag","onStart","onStop","axis","bounds","aria-grabbed","currentTime","segmentStatus","moveLeft","moveRight","faBars","SegmentsList","segmentsStyle","active","borderWidth","boxSizing","Waveforms","images","setImages","waveformWorkerError","setWaveformWorkerError","waveformDisplayTestStyle","waveformsProcessed","videoURL","_index","blob","xhr","XMLHttpRequest","open","responseType","waveformWorker","File","image","numSamples","send","alt","faSpinner","spin","Timeline","useResizeObserver","timelineStyle","onMouseDown","rect","currentTarget","getBoundingClientRect","offsetX","clientX","setCurrentlyAtToClick","cuttingActionButtonStyle","CuttingActionsButton","actionName","actionHandler","tooltip","ariaLabelText","MarkAsDeletedButton","hotKeyName","isCurrentSegmentAlive","faTrash","faTrashRestore","CuttingActions","dispatchAction","cuttingStyle","blockStyle","faStepBackward","faStepForward","Metadata","getStatus","getError","metadataStyle","fieldStyle","fieldLabelStyle","fieldTypeStyle","isReadOnly","color","inputFieldTypeStyle","border","selectFieldTypeStyle","control","provided","menu","dateTimeTypeStyle","validateStyle","isError","lineHeight","helperHandleArrays","library","input","output","subArray","find","el","submitValue","getInitialValues","initValues","collection","generateReactSelectLibrary","searchValue","required","test","dateTimeValidator","date","dt","call","LuxonDateTime","fromJSDate","fromISO","isValid","getValidators","blurWithSubmit","onBlur","fieldId","catalogIndexString","substring","indexOf","fieldName","parseValue","submitSingleField","returnValue","subValue","hasOwnProperty","__isNew__","toJSON","isNaN","getTime","onSubmit","values","keys","formCatalogName","formFieldName","label","entries","descLabel","exists","replaceAll","generateComponent","isMulti","isClearable","readOnly","format","disabled","dateFunsUtils","DateFnsUtils","showError","showErrorOnBlur","renderField","meta","htmlFor","other","generateComponentWithModifiedInput","touched","modified","valid","faCheck","renderCatalog","str","subscription","submitting","pristine","initialValues","render","handleSubmit","form","reset","Description","description","descriptionStyle","faInfoCircle","TrackItem","enabledCount","header","trackItemStyle","playerStyle","headerStyle","deleteEnabled","deleteText","deleteTooltip","deleteIcon","audioState","audioText","audioTooltip","audioIcon","faVolumeUp","faVolumeMute","faVolumeDown","audioActive","handler","SelectButton","buttonStyle","margin","TrackSelection","trackItems","FinishMenuButton","finishMenuButtonStyle","FinishMenu","finishMenuStyle","flexWrap","faSave","faFileExport","faTimesCircle","postVideoInformation","argument","convertSegments","workflowPostSlice","selected","selectStatus","workflowPostState","selectError","workflowPostAndProcessState","SaveButton","workflowStatus","metadataStatus","faExclamationCircle","save","videoSetHasChanges","metadataSetHasChanges","aria-live","aria-atomic","ariaSaveUpdate","Save","postWorkflowStatus","postMetadataStatus","postMetadataError","saveStyle","faChevronLeft","endSlice","setEnd","hasEnded","selectIsEnd","endState","selectEndState","DiscardButton","discard","Discard","cancelStyle","postVideoInformationWithWorkflow","workflow","workflowPostAndProcessSlice","SaveAndProcessButton","saveAndProcess","saveButtonStyle","WorkflowConfiguration","postAndProcessWorkflowStatus","postAndProcessError","workflowConfigurationStyle","faTools","WorkflowButton","workflowIndex","selectWorkflowIndex","workflowButtonStyle","WorkflowSelection","saveStatus","saveSelectStatus","saveError","saveSelectError","workflowSelectionStyle","workflowSelectionSelectionStyle","maxHeight","topTitle","topText","hasWorkflowButtons","bottomText","nextButton","Trans","i18nKey","PageButton","onPageChange","pageButtonStyle","Finish","pageZeroStyle","pageOneStyle","pageTwoStyle","MainContent","videoChanged","videoHasChanges","metadataChanged","metadataHasChanges","useBeforeunload","stateActive","displayState","paddingRight","paddingLeft","trackSelectStyle","alignContent","finishStyle","defaultStyle","StartOverButton","reloadPage","reload","TheEnd","theEndStyle","faCheckCircle","detailsStyle","faFrown","Landing","landingStyle","href","Body","isEnd","bodyStyle","Fragment","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","mainMenuStateReducer","finishStateReducer","videoReducer","workflowPostReducer","workflowPostAndProcessReducer","endReducer","metadataReducer","errorReducer","initialize","race","setTimeout","ReactDOM","StrictMode","store","utils","getElementById"],"mappings":"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","file":"static/js/main.f5bb9634.chunk.js","sourcesContent":["export interface Segment {\n  id: string,\n  start: number,\n  end: number,\n  deleted: boolean,\n}\n\nexport interface Track {\n  id: string,\n  uri: string,\n  flavor: any,\n  audio_stream: any,\n  video_stream: any,\n}\n\nexport interface Workflow {\n  id: string,\n  name: string,\n  description: string,\n  displayOrder: number,\n}\n\nexport interface TimelineState {\n  segments: Segment[]\n  scrubberPos: number\n}\n\nexport interface PostEditArgument {\n  segments: Segment[]\n  tracks: Track[]\n}\n\nexport interface PostAndProcessEditArgument extends PostEditArgument{\n  workflow: [{id: string}]\n}\n\nexport enum MainMenuStateNames {\n  cutting = \"Cutting\",\n  metadata = \"Metadata\",\n  trackSelection = \"Select Tracks\",\n  thumbnail = \"Thumbnail\",\n  finish = \"Finish\",\n}\n\nexport interface httpRequestState {\n  status: 'idle' | 'loading' | 'success' | 'failed',\n  error: string | undefined\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { MainMenuStateNames} from '../types'\n\nexport interface mainMenu {\n  value: MainMenuStateNames,\n}\n\nconst initialState: mainMenu = {\n  value: MainMenuStateNames.cutting,\n}\n\n/**\n * Slice for the main menu state\n */\nexport const mainMenuSlice = createSlice({\n  name: 'mainMenuState',\n  initialState,\n  reducers: {\n    setState: (state, action: PayloadAction<mainMenu[\"value\"]>) => {\n      state.value = action.payload;\n    }\n  }\n})\n\nexport const { setState, } = mainMenuSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectMainMenuState = (state: { mainMenuState: { value: mainMenu[\"value\"]; }; }) => state.mainMenuState.value\n\nexport default mainMenuSlice.reducer\n","/**\n * Loads config values from\n * - a settings file\n * - GET parameters\n * and exports them.\n * Code was largely adapted from https://github.com/elan-ev/opencast-studio/blob/master/src/settings.js (January 11th, 2021)\n */\nimport parseToml from '@iarna/toml/parse-string';\nimport deepmerge from 'deepmerge';\n\n/**\n * Local constants\n */\nconst CONTEXT_SETTINGS_FILE = 'editor-settings.toml';\n\n// Sources that values can come from.\nconst SRC_SERVER = 'src-server';\nconst SRC_URL = 'src-url';\n\n/**\n * Settings interface\n */\ninterface iSettings {\n  mediaPackageId: string | undefined,\n  opencast: {\n    url: string,\n    name: string | undefined,\n    password: string | undefined,\n  },\n  metadata: {\n    show: boolean,\n    showFields: { [key: string]: string[]; } | undefined,\n  },\n  trackSelection: {\n    show: boolean,\n  },\n  thumbnail: {\n    show: boolean,\n  }\n}\n\n/**\n * Settings objects\n * defaultSettings: Sets default values\n * configFileSettings: contains values from the config file\n * urlParameterSettings: contains values from GET parameters\n * settings: contains the combined values from all other setting objects\n */\nvar defaultSettings: iSettings = {\n  mediaPackageId: undefined,\n  opencast: {\n    url: window.location.origin,\n    name: undefined,\n    password: undefined,\n  },\n  metadata: {\n    show: true,\n    showFields: undefined,\n  },\n  trackSelection: {\n    show: true,\n  },\n  thumbnail: {\n    show: true,\n  }\n}\nvar configFileSettings: iSettings\nvar urlParameterSettings: iSettings\nexport var settings: iSettings\n\n/**\n * Entry point. Loads values from settings into the exported variables\n * Priorities are:\n * 1. GET Parameters\n * 2. Settings file\n * 3. Default values\n */\nexport const init = async () => {\n  // Get settings from config file\n  await loadContextSettings().then((result) => {\n    configFileSettings = validate(result, false, SRC_SERVER, \"from server settings file\")\n  })\n\n  // Get settings from URL query.\n  var urlParams = new URLSearchParams(window.location.search);\n\n  let rawUrlSettings = {};\n  urlParams.forEach(function(value, key) {\n    // Create empty objects for full path (if the key contains '.') and set\n    // the value at the end.\n    let obj : {[k: string]: any} = rawUrlSettings;\n    const segments = key.split('.');\n    segments.slice(0, -1).forEach((segment) => {\n      if (!(segment in obj)) {\n        obj[segment] = {};\n      }\n      obj = obj[segment];\n    });\n    obj[segments[segments.length - 1]] = value;\n  });\n\n  urlParameterSettings = validate(rawUrlSettings, true, SRC_URL, 'given as URL GET parameter');\n\n  // Combine results\n  settings = merge.all([defaultSettings, configFileSettings, urlParameterSettings]) as iSettings;\n};\n\n/**\n * Attempts to load toml settings file\n */\nconst loadContextSettings = async () => {\n\n  // Try to retrieve the context settings.\n  let basepath = process.env.PUBLIC_URL || '/';\n  if (!basepath.endsWith('/')) {\n    basepath += '/';\n  }\n\n  // Construct path to settings file. If the `REACT_APP_SETTINGS_PATH` is\n  // given and starts with '/', it is interpreted as absolute path from the\n  // server root.\n  const settingsPath = process.env.REACT_APP_SETTINGS_PATH || CONTEXT_SETTINGS_FILE;\n  const base = settingsPath.startsWith('/') ? '' : basepath;\n  const url = `${window.location.origin}${base}${settingsPath}`;\n  let response;\n  try {\n    response = await fetch(url);\n  } catch (e) {\n    console.warn(`Could not access '${settingsPath}' due to network error!`, e || \"\");\n    return null;\n  }\n\n  if (response.status === 404) {\n    // If the settings file was not found, we silently ignore the error. We\n    // expect many installation to provide this file.\n    console.debug(`'${settingsPath}' returned 404: ignoring`);\n    return null;\n  } else if (!response.ok) {\n    console.error(\n      `Fetching '${settingsPath}' failed: ${response.status} ${response.statusText}`\n    );\n    return null;\n  }\n\n  if (response.headers.get('Content-Type')?.startsWith('text/html')) {\n    console.warn(`'${settingsPath}' request has 'Content-Type: text/html' -> ignoring...`);\n    return null;\n  }\n\n  try {\n    return parseToml(await response.text());\n  } catch (e) {\n    console.error(`Could not parse '${settingsPath}' as TOML: `, e);\n    throw new SyntaxError(`Could not parse '${settingsPath}' as TOML: ${e}`);\n  }\n\n};\n\n/**\n * Validate the given `obj` with the global settings `SCHEMA`. If `allowParse`\n * is true, string values are attempted to parse into the expected type. `src`\n * must be one of `SRC_SERVER`, `SRC_URL` or `SRC_LOCAL_STORAGE`.\n * `srcDescription` is just a string for error messages specifying where `obj`\n * comes from.\n * */\nconst validate = (obj: Record<string, any> | null, allowParse: boolean, src: string, sourceDescription: string) => {\n  // Validates `obj` with `schema`. `path` is the current path used for error\n  // messages.\n  const validate = (schema: any, obj: Record<string, any> | null, path: string) => {\n    if (typeof schema === 'function') {\n      return validateValue(schema, obj, path);\n    } else {\n      return validateObj(schema, obj, path);\n    }\n  };\n\n  // Validate a settings value with a validation function. Returns the final\n  // value of the setting or `null` if it should be ignored.\n  const validateValue = (validation: (arg0: any, arg1: boolean, arg2: string) => any, value: Record<string, any> | null, path: string) => {\n    try {\n      const newValue = validation(value, allowParse, src);\n      return newValue === undefined ? value : newValue;\n    } catch (e) {\n      console.warn(\n        `Validation of setting '${path}' (${sourceDescription}) with value '${value}' failed: `\n          + `${e}. Ignoring.`\n      );\n      return null;\n    }\n  };\n\n  // Validate a settings object/namespace. `schema` and `obj` need to be\n  // objects.\n  const validateObj = (schema: any, obj: Record<string, any> | null, path: string) => {\n    // We iterate through all keys of the given settings object, checking if\n    // each key is valid and recursively validating the value of that key.\n    let out : {[k: string]: any} = {};\n    for (const key in obj) {\n      const newPath = path ? `${path}.${key}` : key;\n      if (key in schema) {\n        const value = validate(schema[key], obj[key], newPath);\n\n        // If `null` is returned, the validation failed and we ignore this\n        // value.\n        if (value !== null) {\n          out[key] = value;\n        }\n      } else {\n        console.warn(\n          `'${newPath}' (${sourceDescription}) is not a valid settings key. Ignoring.`\n        );\n      }\n    }\n\n    return out;\n  };\n\n  return validate(SCHEMA, obj, \"\");\n}\n\n\n// Validation functions for different types.\nconst types = {\n  'string': (v: any, allowParse: any) => {\n    if (typeof v !== 'string') {\n      throw new Error(\"is not a string, but should be\");\n    }\n  },\n  'boolean': (v: string, allowParse: any) => {\n    if (typeof v === 'boolean') {\n      return;\n    }\n\n    if (allowParse) {\n      if (v === 'true') {\n        return true;\n      }\n      if (v === 'false') {\n        return false;\n      }\n      throw new Error(\"can't be parsed as boolean\");\n    } else {\n      throw new Error(\"is not a boolean\");\n    }\n  },\n  'objectWithStringArrays': (v: any, allowParse: any) => {\n    for (let key in v) {\n      if (typeof key !== 'string') {\n        throw new Error(\"is not a string, but should be\");\n      }\n      if (!Array.isArray(v[key])) {\n        throw new Error(\"is not an array, but should be\");\n      }\n      for (let item in v[key]) {\n        if (typeof item !== 'string') {\n          throw new Error(\"is not a string, but should be\");\n        }\n      }\n    }\n  }\n};\n\n// Defines all potential settings and their types.\n//\n// Each setting value has to be a validation function. Such a function takes two\n// arguments: the input value `v` and the boolean `allowParse` which specifies\n// whether the input might be parsed into the correct type (this is only `true`\n// for GET parameters). The validation should throw an error if the input value\n// is not valid for the setting. If the function returns `undefined`, the input\n// value is valid and used. If the validator returns a different value, the\n// input is valid, but is replaced by that new value. See the `types` object\n// above for some examples.\nconst SCHEMA = {\n  mediaPackageId: types.string,\n  opencast: {\n    url: types.string,\n    name: types.string,\n    password: types.string,\n  },\n  metadata: {\n    show : types.boolean,\n    showFields: types.objectWithStringArrays,\n  },\n  trackSelection: {\n    show : types.boolean,\n  },\n  thumbnail: {\n    show : types.boolean,\n  }\n}\n\nconst merge = (a: iSettings, b: iSettings) => {\n  return deepmerge(a, b, { arrayMerge });\n};\nmerge.all = (array: object[]) => deepmerge.all(array, { arrayMerge })\nconst arrayMerge = (destinationArray: any, sourceArray: any, options: any) => sourceArray;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface finish {\n  value: \"Save changes\" | \"Start processing\" | \"Discard changes\" | undefined,\n  pageNumber: number,\n}\n\nconst initialState: finish = {\n  value: \"Start processing\",\n  pageNumber: 0,\n}\n\n/**\n * Slice for the main menu state\n */\nexport const finishSlice = createSlice({\n  name: 'finishState',\n  initialState,\n  reducers: {\n    setState: (state, action: PayloadAction<finish[\"value\"]>) => {\n      state.value = action.payload;\n    },\n    setPageNumber: (state, action) => {\n      state.pageNumber = action.payload;\n    }\n  }\n})\n\n// Export Actions\nexport const { setState, setPageNumber } = finishSlice.actions\n\n// Export Selectors\nexport const selectFinishState = (state: { finishState: { value: finish[\"value\"]; }; }) => state.finishState.value\nexport const selectPageNumber = (state: { finishState: { pageNumber: finish[\"pageNumber\"]; }; }) => state.finishState.pageNumber\n\nexport default finishSlice.reducer\n","export const roundToDecimalPlace = (num: number, decimalPlace: number) => {\n  let decimalFactor = Math.pow(10, decimalPlace)\n  return Math.round((num + Number.EPSILON) * decimalFactor) / decimalFactor\n}\n\n\n// Returns a promise that resolves after `ms` milliseconds.\nexport const sleep = (ms: number) => new Promise((resolve, reject) => setTimeout(resolve, ms));\n\n\n// Get an understandable time string for ARIA\nexport const convertMsToReadableString = (ms: number): string => {\n  let hours = new Date((ms ? ms : 0)).toISOString().substr(11, 2)\n  let minutes = new Date((ms ? ms : 0)).toISOString().substr(14, 2)\n  let seconds = new Date((ms ? ms : 0)).toISOString().substr(17, 2)\n\n  let result = []\n  if (parseInt(hours) > 0) { result.push(hours + \" hours, \")}\n  if (parseInt(minutes) > 0 || parseInt(hours) > 0) { result.push(minutes + \" minutes, \")}\n  result.push(seconds + \" seconds\")\n\n  return result.join(\"\")\n}\n\n/**\n * Parses JSON. Returns [err, result]\n * @param str string that should be parsed\n */\nexport function safeJsonParse(str : string) {\n  try {\n      return [null, JSON.parse(str)];\n  } catch (err) {\n      return [err];\n  }\n}\n\n/**\n * Checks whether the css property gap for flexbox is supported by the browser.\n * Currently, this cannot be checked with \"@support\", so we use this workaround\n * instead.\n */\nvar flexGapIsSupported: boolean | undefined;\nexport function checkFlexGapSupport() {\n  // Use the cached value if it has been defined\n\tif (flexGapIsSupported !== undefined) {\n\t\treturn flexGapIsSupported\n\t}\n\n\t// Create a flex container with row-gap set\n\tconst flex = document.createElement('div')\n\tflex.style.display = 'flex'\n\tflex.style.flexDirection = 'column'\n\tflex.style.rowGap = '1px'\n\tflex.style.position = 'absolute'\n\n\t// Create two, elements inside it\n\tflex.appendChild(document.createElement('div'))\n\tflex.appendChild(document.createElement('div'))\n\n\t// Append to the DOM (needed to obtain scrollHeight)\n\tdocument.body.appendChild(flex)\n\n  // Flex container should be 1px high due to the row-gap\n  flexGapIsSupported = flex.scrollHeight === 1\n\n  // Remove element from the DOM after you are done with it\n  if(flex.parentNode) {\n    flex.parentNode.removeChild(flex)\n  }\n\n\treturn flexGapIsSupported\n}","/**\n * This file contains general css stylings\n */\nimport { css, Global } from '@emotion/react'\nimport React from \"react\";\nimport emotionNormalize from 'emotion-normalize';\nimport { checkFlexGapSupport } from './util/utilityFunctions';\n\n/**\n * An emotion component that inserts styles globally\n * Is removed when the styles change or when the Global component unmounts.\n */\nexport const GlobalStyle: React.FC = () => {\n  return (\n    <Global styles={globalStyle} />\n  );\n}\n\n/**\n * CSS for the global style component\n */\nexport const globalStyle = css({\n  emotionNormalize,\n  body: {\n    backgroundColor: 'snow',\n    fontSize: 'medium',\n    // Makes the body span to the bottom of the page\n    minHeight: \"100vh\",\n  },\n});\n\n\n/**\n * CSS for replacing flexbox gap in browers that do not support it\n * Does not return a css prop, but is meant as a direct replacement for \"gap\"\n * Example: ...(flexGapReplacementStyle(30, false))\n */\nexport const flexGapReplacementStyle = (flexGapValue: number, flexDirectionIsRow: boolean) => {\n\n  let half = flexGapValue / 2\n  let quarter = flexGapValue / 4\n\n  return (\n    {\n    // Use gap if supported\n    ...(checkFlexGapSupport()) && {gap: `${flexGapValue}px`},\n    // Else use margins\n    ...(!checkFlexGapSupport()) &&\n      {\n        \">*\": { // For each child\n          marginTop: `${quarter}px`,\n          marginBottom: `${quarter}px`,\n          marginRight: `${half}px`,\n          marginLeft: `${half}px`,\n        },\n        ...(flexDirectionIsRow) && {\n          \">*:first-of-type\": {\n            marginLeft: '0px',\n          },\n          \">*:last-child\": {\n            marginRight: '0px',\n          },\n        },\n      }\n    }\n  );\n}\n\n/**\n * CSS for buttons\n */\nexport const basicButtonStyle = css({\n  borderRadius: '10px',\n  cursor: \"pointer\",\n  // Animation\n  transitionDuration: \"0.3s\",\n  transitionProperty: \"transform\",\n  \"&:hover\": {\n    transform: 'scale(1.1)',\n  },\n  \"&:focus\": {\n    transform: 'scale(1.1)',\n  },\n  \"&:active\": {\n    transform: 'scale(0.9)',\n  },\n  // Flex position child elements\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(flexGapReplacementStyle(10, false)),\n  textAlign: 'center' as const,\n});\n\n/**\n * CSS for deactivated buttons\n */\nexport const deactivatedButtonStyle = css({\n  borderRadius: '10px',\n  cursor: \"pointer\",\n  opacity: \"0.4\",\n  // Flex position child elements\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  ...(flexGapReplacementStyle(10, false)),\n  textAlign: 'center' as const,\n});\n\n/**\n * CSS for nagivation styled buttons\n */\nexport const nagivationButtonStyle = css({\n  width: '200px',\n  padding: '16px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  justifyContent: 'space-around'\n })\n\n/**\n * CSS for a container that holds back/forward buttons\n */\nexport const backOrContinueStyle = css(({\n  display: 'flex',\n  flexDirection: 'row' as const,\n  ...(flexGapReplacementStyle(20, false)),\n}))\n\n/**\n * CSS for ariaLive regions that should not be visible\n */\nexport const ariaLive = css({\n  position: 'absolute',\n  left: '-99999px',\n  height: '1px',\n  width: '1px',\n  overflow: 'hidden',\n})\n\n/**\n * CSS for displaying of errors\n */\nexport const errorBoxStyle = (errorStatus: boolean) => {\n  return (\n    css({\n      ...(!errorStatus) && {display: \"none\"},\n      borderColor: 'red',\n      borderStyle: 'dashed',\n      fontWeight: 'bold',\n      padding: '10px',\n    })\n  );\n}\n","// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nimport { settings } from '../config';\n\n/**\n * Client I stole this form a react tutorial\n */\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application/json' }\n\n  // Attempt Http basic auth if we got credentials\n  let authHeaders = {}\n  if (settings.opencast.name && settings.opencast.password) {\n    const encoded = btoa(unescape(encodeURIComponent(\n      settings.opencast.name + \":\" + settings.opencast.password\n    )));\n    authHeaders = { 'Authorization': `Basic ${encoded}` };\n  }\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n      ...authHeaders,\n    },\n  }\n\n  if (body) {\n    config.body = JSON.stringify(body)\n  }\n\n  let data\n  let text\n  let response\n  try {\n    response = await window.fetch(endpoint, config)\n    text = await response.text()\n\n    if (response.url.includes(\"login.html\")) {\n      throw new Error(\"Got redirected to login page, authentification failed.\")\n    }\n\n    if (response.ok) {\n      text.length ? data = JSON.parse(text) : data = ''\n      return data\n    }\n    throw new Error(response.statusText)\n  } catch (err) {\n    return Promise.reject(response.status ?\n        \"Status \" + response.status + \": \" + text :\n        err.message\n      )\n  }\n}\n\nclient.get = function (endpoint, customConfig = {}) {\n  return client(endpoint, { ...customConfig, method: 'GET' })\n}\n\nclient.post = function (endpoint, body, customConfig = {}) {\n  return client(endpoint, { ...customConfig, body })\n}","import { createSlice, nanoid, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\n\nimport { Segment, httpRequestState, Track, Workflow }  from '../types'\nimport { roundToDecimalPlace } from '../util/utilityFunctions'\nimport { WritableDraft } from 'immer/dist/internal';\nimport { settings } from '../config';\n\nexport interface video {\n  isPlaying: boolean,             // Are videos currently playing?\n  isPlayPreview: boolean,         // Should deleted segments be skipped?\n  previewTriggered: boolean,      // Basically acts as a callback for the video players.\n  clickTriggered: boolean,        // Another video player callback\n  currentlyAt: number,            // Position in the video in milliseconds\n  segments: Segment[],\n  tracks: Track[],\n  masterAudio: string | null,\n  activeSegmentIndex: number,     // Index of the segment that is currenlty hovered\n  selectedWorkflowIndex: number,  // Index of the currently selected workflow\n  aspectRatios: {width: number, height: number}[],  // Aspect ratios of every video\n  hasChanges: boolean             // Did user make changes in cutting view since last save\n\n  videoURLs: string[],  // Links to each video\n  videoCount: number,   // Total number of videos\n  duration: number,     // Video duration in milliseconds\n  title: string,\n  presenters: string[],\n  workflows: Workflow[],\n}\n\nexport const initialState: video & httpRequestState = {\n  isPlaying: false,\n  isPlayPreview: true,\n  currentlyAt: 0,   // Position in the video in milliseconds\n  segments: [{id: nanoid(), start: 0, end: 1, deleted: false}],\n  tracks: [],\n  masterAudio: null,\n  activeSegmentIndex: 0,\n  selectedWorkflowIndex: 0,\n  previewTriggered: false,\n  clickTriggered: false,\n  aspectRatios: [],\n  hasChanges: false,\n\n  videoURLs: [],\n  videoCount: 0,\n  duration: 0,\n  title: '',\n  presenters: [],\n  workflows: [],\n\n  status: 'idle',\n  error: undefined,\n}\n\nexport const fetchVideoInformation = createAsyncThunk('video/fetchVideoInformation', async () => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  // const response = await client.get('https://legacy.opencast.org/admin-ng/tools/ID-dual-stream-demo/editor.json')\n  const response = await client.get(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`)\n  return response\n})\n\nconst updateCurrentlyAt = (state: video, milliseconds: number) => {\n  state.currentlyAt = roundToDecimalPlace(milliseconds, 0);\n\n  if (state.currentlyAt < 0) {\n    state.currentlyAt = 0;\n  }\n\n  if (state.duration !== 0 && state.duration < state.currentlyAt) {\n    state.currentlyAt = state.duration\n  }\n\n  updateActiveSegment(state);\n  skipDeletedSegments(state);\n};\n\n/**\n * Slice for the state of the \"video\"\n * Treats the multitude of videos that may exist as one video\n */\nexport const videoSlice = createSlice({\n  name: 'videoState',\n  initialState,\n  reducers: {\n    setTrackEnabled: (state, action) => {\n      // Check if track to modify is set to be the master audio.\n      // We will reset the audio settings if it is\n      const disableMasterAudio = state.masterAudio === action.payload.id;\n      if (disableMasterAudio) {\n        state.masterAudio = null;\n      }\n\n      for (let track of state.tracks) {\n        if (disableMasterAudio && track.video_stream.enabled) {\n          track.audio_stream.enabled = true;\n        }\n        if (track.id === action.payload.id) {\n          track.audio_stream.enabled = action.payload.enabled;\n          track.video_stream.enabled = action.payload.enabled;\n        }\n      }\n      state.hasChanges = true;\n    },\n    setMasterAudio: (state, action) => {\n      // Check if track to modify is set to be the master audio.\n      // We will reset the audio settings if it is\n      state.masterAudio = state.masterAudio !== action.payload.id ? action.payload.id : null;\n\n      for (let track of state.tracks) {\n        track.audio_stream.enabled = !state.masterAudio && track.video_stream.enabled;\n        if (track.id === action.payload.id) {\n          track.audio_stream.enabled = action.payload.enabled;\n        }\n      }\n      state.hasChanges = true;\n    },\n    setIsPlaying: (state, action: PayloadAction<video[\"isPlaying\"]>) => {\n      state.isPlaying = action.payload;\n    },\n    setIsPlayPreview: (state, action: PayloadAction<video[\"isPlaying\"]>) => {\n      state.isPlayPreview = action.payload;\n    },\n    setPreviewTriggered: (state, action) => {\n      state.previewTriggered = action.payload\n    },\n    setClickTriggered: (state, action) => {\n      state.clickTriggered = action.payload\n    },\n    setCurrentlyAt: (state, action: PayloadAction<video[\"currentlyAt\"]>) => {\n      updateCurrentlyAt(state, action.payload);\n    },\n    setCurrentlyAtInSeconds: (state, action: PayloadAction<video[\"currentlyAt\"]>) => {\n      updateCurrentlyAt(state, roundToDecimalPlace(action.payload * 1000, 0))\n    },\n    addSegment: (state, action: PayloadAction<video[\"segments\"][0]>) => {\n      state.segments.push(action.payload)\n    },\n    setAspectRatio: (state, action: PayloadAction<{dataKey: number} & {width: number, height: number}> ) => {\n      state.aspectRatios[action.payload.dataKey] = {width: action.payload.width, height: action.payload.height}\n    },\n    setHasChanges: (state, action: PayloadAction<video[\"hasChanges\"]>) => {\n      state.hasChanges = action.payload\n    },\n    cut: (state) => {\n      // If we're exactly between two segments, we can't split the current segment\n      if (state.segments[state.activeSegmentIndex].start === state.currentlyAt ||\n          state.segments[state.activeSegmentIndex].end === state.currentlyAt ) {\n        return state;\n      }\n\n      // Make two (new) segments out of it\n      let segmentA : Segment =  {id: nanoid(),\n        start: state.segments[state.activeSegmentIndex].start,\n        end: state.currentlyAt,\n        deleted: state.segments[state.activeSegmentIndex].deleted}\n      let segmentB : Segment =  {id: nanoid(),\n        start: state.currentlyAt,\n        end: state.segments[state.activeSegmentIndex].end,\n        deleted: state.segments[state.activeSegmentIndex].deleted}\n\n      // Add the new segments and remove the old one\n      state.segments.splice(state.activeSegmentIndex, 1, segmentA, segmentB);\n\n      state.hasChanges = true\n    },\n    markAsDeletedOrAlive: (state) => {\n      state.segments[state.activeSegmentIndex].deleted = !state.segments[state.activeSegmentIndex].deleted\n      state.hasChanges = true\n    },\n    setSelectedWorkflowIndex: (state, action: PayloadAction<video[\"selectedWorkflowIndex\"]>) => {\n      state.selectedWorkflowIndex = action.payload\n    },\n    mergeLeft: (state) => {\n      mergeSegments(state, state.activeSegmentIndex, state.activeSegmentIndex - 1)\n      state.hasChanges = true\n    },\n    mergeRight: (state) => {\n      mergeSegments(state, state.activeSegmentIndex, state.activeSegmentIndex + 1)\n      state.hasChanges = true\n    },\n  },\n  // For Async Requests\n  extraReducers: builder => {\n    builder.addCase(\n      fetchVideoInformation.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      fetchVideoInformation.fulfilled, (state, action) => {\n        state.status = 'success'\n\n        // // Old API\n        // // eslint-disable-next-line no-sequences\n        // state.videoURLs = action.payload.previews.reduce((a: string[], o: { uri: string }) => (a.push(o.uri), a), [])\n        // state.videoCount = action.payload.previews.length\n        // state.duration = action.payload.duration\n        // state.title = action.payload.title\n        // state.presenters = action.payload.presenters\n        // state.segments = parseSegments(action.payload.segments, action.payload.duration)\n        // state.workflows = action.payload.workflows.sort((n1: { displayOrder: number; },n2: { displayOrder: number; }) => {\n        //   if (n1.displayOrder > n2.displayOrder) { return 1; }\n        //   if (n1.displayOrder < n2.displayOrder) { return -1; }\n        //   return 0;\n        // });\n\n        // New API\n        // eslint-disable-next-line no-sequences\n        state.videoURLs = action.payload.tracks.reduce((a: string[], o: { uri: string }) => (a.push(o.uri), a), [])\n        state.videoCount = state.videoURLs.length\n        state.duration = action.payload.duration\n        state.title = action.payload.title\n        state.presenters = []\n        state.segments = parseSegments(action.payload.segments, action.payload.duration)\n        state.tracks = action.payload.tracks\n        state.workflows = action.payload.workflows.sort((n1: { displayOrder: number; },n2: { displayOrder: number; }) => {\n          if (n1.displayOrder > n2.displayOrder) { return 1; }\n          if (n1.displayOrder < n2.displayOrder) { return -1; }\n          return 0;\n        });\n\n        state.aspectRatios = new Array(state.videoCount)\n    })\n    builder.addCase(\n      fetchVideoInformation.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\n/**\n * Helper function to update the activeSegmentIndex\n * @param state\n */\nconst updateActiveSegment = (state: WritableDraft<video>) => {\n  state.activeSegmentIndex = state.segments.findIndex(element =>\n    element.start <= state.currentlyAt && element.end >= state.currentlyAt)\n  // If there is an error, assume the first (the starting) segment\n  if(state.activeSegmentIndex < 0) {\n    state.activeSegmentIndex = 0\n  }\n}\n\n/**\n * Helper Function for testing with current/old editor API\n */\nexport const parseSegments = (segments: Segment[], duration: number) => {\n  let newSegments : Segment[] = []\n\n  if (segments.length === 0) {\n    newSegments.push({id: nanoid(), start: 0, end: duration, deleted: false})\n  }\n\n  segments.forEach((segment: Segment) => {\n    newSegments.push({id: nanoid(), start: segment.start, end: segment.end, deleted: segment.deleted})\n  });\n  return newSegments\n}\n\n/**\n * Helper function for merging two segments\n */\nconst mergeSegments = (state: WritableDraft<video>, activeSegmentIndex: number, mergeSegmentIndex: number) => {\n  // Check if mergeSegmentIndex is valid\n  if (mergeSegmentIndex < 0 || mergeSegmentIndex > state.segments.length - 1) {\n    return\n  }\n\n  // Increase activeSegment length\n  state.segments[activeSegmentIndex].start = Math.min(\n    state.segments[activeSegmentIndex].start, state.segments[mergeSegmentIndex].start)\n  state.segments[activeSegmentIndex].end = Math.max(\n    state.segments[activeSegmentIndex].end, state.segments[mergeSegmentIndex].end)\n\n  // Remove the other segment\n  state.segments.splice(mergeSegmentIndex, 1);\n\n  // Update active segment\n  updateActiveSegment(state)\n}\n\nconst skipDeletedSegments = (state: WritableDraft<video>) => {\n  if(state.isPlaying && state.segments[state.activeSegmentIndex].deleted && state.isPlayPreview) {\n      let endTime = state.segments[state.activeSegmentIndex].end\n\n      for (let index = state.activeSegmentIndex; index < state.segments.length; index++) {\n        endTime = state.segments[index].end\n\n        if (!state.segments[index].deleted) {\n          // Need to at +1 as start and end of neighbouring segments are identical\n          endTime = state.segments[index].start + 1\n          break\n        }\n      }\n\n      state.currentlyAt = endTime\n      state.previewTriggered = true\n      updateActiveSegment(state);\n    }\n}\n\n/**\n * Calculates a total aspect ratio for the video player wrappers,\n * based on the aspect ratio of all videos.\n * Returns the total aspect ratio in percent,\n * or returns a default aspect ratio to limit the height of the video player area\n * TODO: Error checking\n * TODO: Improve calculation to handle multiple rows of videos\n */\nconst calculateTotalAspectRatio = (aspectRatios: video[\"aspectRatios\"]) => {\n  let minHeight = Math.min.apply(Math, aspectRatios.map(function(o) { return o.height; }))\n  let minWidth = Math.min.apply(Math, aspectRatios.map(function(o) { return o.width; }))\n  minWidth *= aspectRatios.length\n  return Math.min((minHeight / minWidth) * 100, (9/32) * 100)\n}\n\nexport const { setTrackEnabled, setMasterAudio, setIsPlaying, setIsPlayPreview, setCurrentlyAt, setCurrentlyAtInSeconds,\n  addSegment, setAspectRatio, setHasChanges, cut, markAsDeletedOrAlive, setSelectedWorkflowIndex, mergeLeft, mergeRight,\n  setPreviewTriggered, setClickTriggered } = videoSlice.actions\n\n// Export selectors\n// Selectors mainly pertaining to the video state\nexport const selectIsPlaying = (state: { videoState: { isPlaying: video[\"isPlaying\"] }; }) =>\n  state.videoState.isPlaying\nexport const selectIsPlayPreview = (state: { videoState: { isPlayPreview: video[\"isPlayPreview\"] }; }) =>\n  state.videoState.isPlayPreview\nexport const selectPreviewTriggered = (state: { videoState: { previewTriggered: video[\"previewTriggered\"] } }) =>\n  state.videoState.previewTriggered\nexport const selectClickTriggered = (state: { videoState: { clickTriggered: video[\"clickTriggered\"] } }) =>\n  state.videoState.clickTriggered\nexport const selectCurrentlyAt = (state: { videoState: { currentlyAt: video[\"currentlyAt\"]; }; }) =>\n  state.videoState.currentlyAt\nexport const selectCurrentlyAtInSeconds = (state: { videoState: { currentlyAt: video[\"currentlyAt\"]; }; }) =>\n  state.videoState.currentlyAt / 1000\nexport const selectSegments = (state: { videoState: { segments: video[\"segments\"] } }) =>\n  state.videoState.segments\nexport const selectActiveSegmentIndex = (state: { videoState: { activeSegmentIndex: video[\"activeSegmentIndex\"]; }; }) =>\n  state.videoState.activeSegmentIndex\nexport const selectIsCurrentSegmentAlive = (state: { videoState:\n  { segments: { [x: number]: { deleted: boolean; }; }; activeSegmentIndex: video[\"activeSegmentIndex\"]; }; }) =>\n  !state.videoState.segments[state.videoState.activeSegmentIndex].deleted\nexport const selectSelectedWorkflowIndex = (state: { videoState:\n  { selectedWorkflowIndex: video[\"selectedWorkflowIndex\"]; }; }) =>\n  state.videoState.selectedWorkflowIndex\nexport const hasChanges = (state: { videoState: { hasChanges: video[\"hasChanges\"]; }; }) =>\n  state.videoState.hasChanges\n\n// Selectors mainly pertaining to the information fetched from Opencast\nexport const selectVideoURL = (state: { videoState: { videoURLs: video[\"videoURLs\"] } }) => state.videoState.videoURLs\nexport const selectVideoCount = (state: { videoState: { videoCount: video[\"videoCount\"] } }) => state.videoState.videoCount\nexport const selectDuration = (state: { videoState: { duration: video[\"duration\"] } }) => state.videoState.duration\nexport const selectDurationInSeconds = (state: { videoState: { duration: video[\"duration\"] } }) => state.videoState.duration / 1000\nexport const selectTitle = (state: { videoState: { title: video[\"title\"] } }) => state.videoState.title\nexport const selectPresenters = (state: { videoState: { presenters: video[\"presenters\"] } }) => state.videoState.presenters\nexport const selectTracks = (state: { videoState: { tracks: video[\"tracks\"] } }) => state.videoState.tracks\nexport const selectMasterAudio = (state: { videoState: { masterAudio: video[\"masterAudio\"] } }) => state.videoState.masterAudio\nexport const selectWorkflows = (state: { videoState: { workflows: video[\"workflows\"] } }) => state.videoState.workflows\nexport const selectAspectRatio = (state: { videoState: { aspectRatios: video[\"aspectRatios\"] } }) =>\n  calculateTotalAspectRatio(state.videoState.aspectRatios)\n\nexport default videoSlice.reducer\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport enTranslations from './locales/en.json';\n\nconst resources = {\n  en: { translation: enTranslations }\n};\n\ni18n\n    .use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        resources,\n        fallbackLng: 'en',\n  });\n  ","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCut, faFilm, faListUl, faPhotoVideo, faSignOutAlt, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setState, selectMainMenuState, mainMenu } from '../redux/mainMenuSlice'\nimport { setPageNumber } from '../redux/finishSlice'\n\nimport { MainMenuStateNames } from '../types'\nimport { settings } from '../config'\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\nimport { setIsPlaying } from \"../redux/videoSlice\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * A container for selecting the functionality shown in the main part of the app\n */\nconst MainMenu: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const mainMenuStyle = css({\n    borderRight: '1px solid #BBB',\n    width: '100px',\n    display: 'flex',\n    flexDirection: 'column' as const,\n    flexShrink: 0,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(30, false)),\n  });\n\n  return (\n    <nav css={mainMenuStyle} role=\"navigation\" aria-label={t(\"mainMenu.tooltip-aria\")}>\n      <MainMenuButton iconName={faCut} stateName={MainMenuStateNames.cutting}/>\n      {settings.metadata.show && <MainMenuButton iconName={faListUl} stateName={MainMenuStateNames.metadata}/>}\n      {settings.trackSelection.show && <MainMenuButton iconName={faFilm} stateName={MainMenuStateNames.trackSelection}/>}\n      {settings.thumbnail.show && <MainMenuButton iconName={faPhotoVideo} stateName={MainMenuStateNames.thumbnail}/>}\n      <MainMenuButton iconName={faSignOutAlt} stateName={MainMenuStateNames.finish}/>\n    </nav>\n  );\n};\n\n/**\n * A button to set the state of the app\n * @param param0\n */\nconst MainMenuButton: React.FC<{iconName: IconDefinition, stateName: mainMenu[\"value\"]}> = ({iconName, stateName}) => {\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const activeState = useSelector(selectMainMenuState)\n\n  const onMenuItemClicked = () => {\n    dispatch(setState(stateName));\n    // Reset multi-page content to their first page\n    if (stateName === MainMenuStateNames.finish) {\n      dispatch(setPageNumber(0))\n    }\n    // Halt ongoing events\n    dispatch(setIsPlaying(false))\n  }\n\n  const mainMenuButtonStyle = css({\n    width: '100%',\n    height: '100px',\n    ...(activeState === stateName) && {\n      backgroundColor: '#DDD',\n    },\n    flexDirection: 'column' as const,\n  });\n\n  var buttonString = t(\n        \"mainMenu.\" + stateName.toLowerCase().replace(/ +/, \"-\") + \"-button\",\n        \"Could not load String value\");\n\n  return (\n    <li css={[basicButtonStyle, mainMenuButtonStyle]}\n      role=\"menuitem\" tabIndex={0}\n      onClick={ onMenuItemClicked }\n      onKeyDown={(event: React.KeyboardEvent<HTMLLIElement>) => { if (event.key === \"Enter\") {\n        onMenuItemClicked()\n      }}}\n      >\n      <FontAwesomeIcon  icon={iconName} size=\"2x\"/>\n      <div>{buttonString}</div>\n    </li>\n  );\n};\n\nexport default MainMenu;\n","/**\n * Contains mappings for special keyboard controls, beyond what is usually expected of a webpage\n * Learn more about keymaps at https://github.com/greena13/react-hotkeys#defining-key-maps (12.03.2021)\n */\nimport { KeyMap } from \"react-hotkeys\";\nimport { isMacOs } from 'react-device-detect';\n\n/**\n * Helper function that rewrites keys based on the OS\n */\n const rewriteKeys = (key: string) => {\n  let newKey = key\n  if (isMacOs) {\n    newKey = newKey.replace(\"Alt\", \"Option\")\n  }\n\n  return newKey\n}\n\n/**\n * (Semi-) global map for the buttons in the cutting view\n */\nexport const cuttingKeyMap: KeyMap = {\n  cut: rewriteKeys(\"Control+Alt+c\"),\n  delete: rewriteKeys(\"Control+Alt+d\"),\n  mergeLeft: rewriteKeys(\"Control+Alt+n\"),\n  mergeRight: rewriteKeys(\"Control+Alt+m\"),\n  preview: rewriteKeys(\"Control+Alt+p\"),\n  play: rewriteKeys(\"Space\"),\n}\n\n/**\n * (Semi-) global map for moving the scrubber\n */\nexport const scrubberKeyMap: KeyMap = {\n  left: [rewriteKeys(\"Control+Alt+j\"), \"ArrowLeft\"],\n  right: [rewriteKeys(\"Control+Alt+l\"), \"ArrowRight\"],\n  increase: [rewriteKeys(\"Control+Alt+i\"), \"ArrowUp\"],\n  decrease: [rewriteKeys(\"Control+Alt+k\"), \"ArrowDown\"],\n}","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\n\nimport { httpRequestState }  from '../types'\nimport { settings } from '../config';\n\nexport interface Catalog {\n  fields: MetadataField[],\n  flavor: string, // \"dublincore/episode\"\n  title: string,  // name identifier\n}\n\nexport interface MetadataField {\n  readOnly: boolean,\n  id: string      // name\n  label: string   // name identifier\n  type: string    // irrelevant?\n  value: string,\n  required: boolean,\n  collection: any | undefined,\n}\n\n// interface metadata {\n//   title: string,\n//   subject: string,\n//   description: string,\n//   language: string,\n//   languageOptions: string[],\n//   rightsHolder: string,\n//   license: string,\n//   licenseOptions: string[],\n//   isPartOf: string,\n//   creator: string,\n//   creatorOptions: string[],\n//   contributor: string,\n//   contributorOptions: string[],\n//   startDate: Date,\n//   duration: string,\n//   location: string,\n//   source: string,\n//   created: Date,\n//   publisher: string,\n//   identifier: string,\n// }\n\ninterface metadata {\n  catalogs: Catalog[]\n  hasChanges: boolean         // Did user make changes to metadata view since last save\n}\n\ninterface postRequestState {\n  postStatus: 'idle' | 'loading' | 'success' | 'failed',\n  postError: string | undefined,\n}\n\n// TODO: Create an 'httpRequestState' array or something\nconst initialState: metadata & httpRequestState & postRequestState = {\n  catalogs: [],\n  hasChanges: false,\n\n  status: 'idle',\n  error: undefined,\n\n  postStatus: 'idle',\n  postError: undefined,\n}\n\nexport const fetchMetadata = createAsyncThunk('metadata/fetchMetadata', async () => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.get(`${settings.opencast.url}/editor/${settings.mediaPackageId}/metadata.json`)\n  return response\n})\n\nexport const postMetadata = createAsyncThunk('metadata/postMetadata', async (_, { getState }) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  // TODO: Get only metadataState instead of all states\n  const allStates = getState() as { metadataState: { catalogs: metadata[\"catalogs\"] } }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/metadata.json`,\n    allStates.metadataState.catalogs\n  )\n\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes and starting a workflow\n */\nconst metadataSlice = createSlice({\n  name: 'metadataState',\n  initialState,\n  reducers: {\n    setFieldValue: (state, action: any) => {\n      state.catalogs[action.payload.catalogIndex].fields[action.payload.fieldIndex].value = action.payload.value\n      state.hasChanges = true\n    },\n    setHasChanges: (state, action: PayloadAction<metadata[\"hasChanges\"]>) => {\n      state.hasChanges = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      fetchMetadata.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      fetchMetadata.fulfilled, (state, action) => {\n        state.catalogs = action.payload\n\n        state.status = 'success'\n    })\n    builder.addCase(\n      fetchMetadata.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n    builder.addCase(\n      postMetadata.pending, (state, action) => {\n        state.postStatus = 'loading'\n    })\n    builder.addCase(\n      postMetadata.fulfilled, (state, action) => {\n        state.postStatus = 'success'\n    })\n    builder.addCase(\n      postMetadata.rejected, (state, action) => {\n        state.postStatus = 'failed'\n        state.postError = action.error.message\n    })\n  }\n})\n\nexport const { setFieldValue, setHasChanges } = metadataSlice.actions\n\nexport const selectCatalogs = (state: { metadataState: { catalogs: metadata[\"catalogs\"] } }) =>\n  state.metadataState.catalogs\nexport const hasChanges = (state: { metadataState: { hasChanges: metadata[\"hasChanges\"] } }) =>\n  state.metadataState.hasChanges\nexport const selectGetStatus = (state: { metadataState: { status: httpRequestState[\"status\"] } }) =>\n  state.metadataState.status\nexport const selectGetError = (state: { metadataState: { error: httpRequestState[\"error\"] } }) =>\n  state.metadataState.error\nexport const selectPostStatus = (state: { metadataState: { postStatus: postRequestState[\"postStatus\"] } }) =>\n  state.metadataState.postStatus\nexport const selectPostError = (state: { metadataState: { postError: postRequestState[\"postError\"] } }) =>\n  state.metadataState.postError\n\nexport const selectTitleFromEpisodeDc = (state: { metadataState: { catalogs: metadata[\"catalogs\"] } }) => {\n  for (const catalog of state.metadataState.catalogs) {\n    if (catalog.flavor === \"dublincore/episode\") {\n      for (const field of catalog.fields) {\n        if (field.id === \"title\") {\n          return field.value\n        }\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport default metadataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface error {\n  error: boolean,\n  errorMessage: string,\n  errorDetails: string | undefined,\n}\n\nconst initialState: error = {\n  error: false,\n  errorMessage: \"Unknown error\",\n  errorDetails: \"\",\n}\n\n/**\n * Slice for the error page state\n */\nexport const errorSlice = createSlice({\n  name: 'errorState',\n  initialState,\n  reducers: {\n    setError: (state, action: PayloadAction<{\n      error: error[\"error\"],\n      errorMessage: error[\"errorMessage\"],\n      errorDetails: error[\"errorDetails\"]\n    }>) => {\n      state.error = action.payload.error;\n      state.errorMessage = action.payload.errorMessage;\n      state.errorDetails = action.payload.errorDetails;\n    },\n  }\n})\n\nexport const { setError, } = errorSlice.actions\n\n// Export Selectors\nexport const selectIsError = (state: { errorState: { error: error[\"error\"] }; }) => state.errorState.error\nexport const selectErrorMessage = (state: { errorState: { errorMessage: error[\"errorMessage\"] }; }) => state.errorState.errorMessage\nexport const selectErrorDetails = (state: { errorState: { errorDetails: error[\"errorDetails\"] }; }) => state.errorState.errorDetails\n\nexport default errorSlice.reducer\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { httpRequestState, MainMenuStateNames } from '../types'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faToggleOn, faToggleOff} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsPlaying, selectCurrentlyAt, selectCurrentlyAtInSeconds, setIsPlaying, setCurrentlyAtInSeconds,\n  fetchVideoInformation, selectVideoURL, selectVideoCount, selectDurationInSeconds, selectTitle, selectPresenters,\n  setPreviewTriggered, selectPreviewTriggered, selectIsPlayPreview, setIsPlayPreview, setAspectRatio, selectAspectRatio, selectDuration, setClickTriggered, selectClickTriggered\n} from '../redux/videoSlice'\n\nimport ReactPlayer, { Config } from 'react-player'\n\nimport { roundToDecimalPlace, convertMsToReadableString } from '../util/utilityFunctions'\nimport { basicButtonStyle, flexGapReplacementStyle } from \"../cssStyles\";\n\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { selectMainMenuState } from \"../redux/mainMenuSlice\";\nimport { cuttingKeyMap } from \"../globalKeys\";\nimport { SyntheticEvent } from \"react\";\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { selectTitleFromEpisodeDc } from \"../redux/metadataSlice\";\nimport { setError } from \"../redux/errorSlice\";\n\n/**\n * Container for the videos and their controls\n * TODO: Move fetching to a more central part of the app\n */\nconst Video: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch()\n  const videoURLs = useSelector(selectVideoURL)\n  const videoCount = useSelector(selectVideoCount)\n  const videoURLStatus = useSelector((state: { videoState: { status: httpRequestState[\"status\"] } }) => state.videoState.status);\n  const error = useSelector((state: { videoState: { error: httpRequestState[\"error\"] } }) => state.videoState.error)\n\n  // Try to fetch URL from external API\n  useEffect(() => {\n    if (videoURLStatus === 'idle') {\n      dispatch(fetchVideoInformation())\n    } else if (videoURLStatus === 'failed') {\n      dispatch(setError({error: true, errorMessage: t(\"video.comError-text\"), errorDetails: error}))\n    }\n  }, [videoURLStatus, dispatch, error, t])\n\n  // Update based on current fetching status\n  // let content\n  // if (videoURLStatus === 'loading') {\n  //   content = <div className=\"loader\">Loading...</div>\n  // } else if (videoURLStatus === 'success') {\n  //   content = \"\"//<div className=\"loader\">Success...</div>\n  // } else if (videoURLStatus === 'failed') {\n  //   content = <div>{error}</div>\n  // }\n\n  // Initialize video players\n  const videoPlayers: JSX.Element[] = [];\n  for (let i = 0; i < videoCount; i++) {\n    // videoPlayers.push(<VideoPlayer key={i} url='https://media.geeksforgeeks.org/wp-content/uploads/20190616234019/Canvas.move_.mp4' />);\n    videoPlayers.push(<VideoPlayer key={i} dataKey={i} url={videoURLs[i]} isPrimary={i === 0}/>);\n  }\n\n  // Style\n  const videoAreaStyle = css({\n    display: 'flex',\n    width: 'auto',\n    flexDirection: 'column' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '0px',\n    borderBottom: '1px solid #BBB',\n  });\n\n  const videoPlayerAreaStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  });\n\n  return (\n    <div css={videoAreaStyle}>\n      <VideoHeader />\n      <div css={videoPlayerAreaStyle}>\n        {videoPlayers}\n      </div>\n      <VideoControls />\n    </div>\n  );\n};\n\n/**\n * A single video player\n * @param {string} url - URL to load video from\n * @param {boolean} isPrimary - If the player is the main control\n */\nconst VideoPlayer: React.FC<{dataKey: number, url: string, isPrimary: boolean}> = ({dataKey, url, isPrimary}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const currentlyAt = useSelector(selectCurrentlyAtInSeconds)\n  const duration  = useSelector(selectDurationInSeconds)\n  const previewTriggered = useSelector(selectPreviewTriggered)\n  const clickTriggered = useSelector(selectClickTriggered)\n  const aspectRatio = useSelector(selectAspectRatio)\n\n  // Init state variables\n  const ref = useRef<ReactPlayer>(null);\n  const [ready, setReady] = useState(false);\n  const [errorState, setError] = useState(false);\n\n  // Callback for when the video is playing\n  const onProgressCallback = (state: { played: number, playedSeconds: number, loaded: number, loadedSeconds:  number }) => {\n    if (isPrimary) {\n      // Only update redux if there was a substantial change\n      if (roundToDecimalPlace(currentlyAt, 3) !== roundToDecimalPlace(state.playedSeconds, 3)) {\n        dispatch(setCurrentlyAtInSeconds(state.playedSeconds))\n      }\n    }\n  }\n\n  // Callback for checking whether the video element is ready\n  const onReadyCallback = () => {\n    setReady(true);\n\n    if (ref.current && ref.current.getInternalPlayer()) {\n      let w = (ref.current.getInternalPlayer() as HTMLVideoElement).videoWidth\n      let h = (ref.current.getInternalPlayer() as HTMLVideoElement).videoHeight\n      dispatch(setAspectRatio({dataKey, width: w, height: h}))\n    }\n  }\n\n  const onEndedCallback = () => {\n    if (isPrimary) {\n      dispatch(setIsPlaying(false));\n      dispatch(setCurrentlyAtInSeconds(duration)); // It seems onEnded is called before the full duration is reached, so we set currentlyAt to the very end\n    }\n  }\n\n  useEffect(() => {\n    // Seek if the position in the video got changed externally\n    if (!isPlaying && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n    }\n    if (previewTriggered && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n      dispatch(setPreviewTriggered(false))\n    }\n    if (clickTriggered && ref.current && ready) {\n      ref.current.seekTo(currentlyAt, \"seconds\")\n      dispatch(setClickTriggered(false))\n    }\n  })\n\n  const onErrorCallback = (e: any) => {\n    setError(true)\n  }\n\n  // Skip player when navigating page with keyboard\n  const playerConfig: Config = {\n    file: { attributes: { tabIndex: '-1' }}\n  }\n\n  const errorBoxStyle = css({\n    ...(!errorState) && {display: \"none\"},\n    borderColor: 'red',\n    borderStyle: 'dashed',\n    fontWeight: 'bold',\n    padding: '10px',\n  })\n\n  const playerWrapper = css({\n    position: 'relative',\n    width: '100%',\n    paddingTop: aspectRatio + '%',\n  });\n\n  const reactPlayerStyle = css({\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  })\n\n  const render = () => {\n    if (!errorState) {\n      return(\n        <div css={playerWrapper}>\n          <ReactPlayer url={url}\n            css={reactPlayerStyle}\n            ref={ref}\n            width='100%'\n            height='100%'\n            playing={isPlaying}\n            muted={!isPrimary}\n            onProgress={onProgressCallback}\n            progressInterval={100}\n            onReady={onReadyCallback}\n            onEnded={onEndedCallback}\n            onError={onErrorCallback}\n            tabIndex={-1}\n            config={playerConfig}\n            disablePictureInPicture\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div css={errorBoxStyle} role=\"alert\">\n          <span>{t(\"video.loadError-text\")} </span>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      {render()}\n    </>\n  );\n\n  // return (\n  //   <div title=\"Video Player\">\n  //     <video width=\"320\" height=\"240\" controls ref={vidRef}>\n  //     <source src=\"https://media.geeksforgeeks.org/wp-content/uploads/20190616234019/Canvas.move_.mp4\" type=\"video/mp4\" />\n  //     Your browser does not support the video tag.\n  //     </video>\n  //   </div>\n  // );\n};\n\n/**\n * Contains controls for manipulating multiple video players at once\n * Flexbox magic keeps the play button at the center\n */\nconst VideoControls: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const videoControlsRowStyle = css({\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    padding: '20px',\n    ...(flexGapReplacementStyle(50, false)),\n  })\n\n  const leftSideBoxStyle = css({\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  })\n\n  const rightSideBoxStyle = css({\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-start'\n  })\n\n  return (\n    <div css={videoControlsRowStyle} title={t(\"video.controls-tooltip\")}>\n      <div css={leftSideBoxStyle}>\n        <PreviewMode />\n      </div>\n      <PlayButton />\n      <div css={rightSideBoxStyle}>\n        <TimeDisplay />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Enable/Disable Preview Mode\n */\nconst PreviewMode: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlayPreview = useSelector(selectIsPlayPreview)\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  // Change preview mode from \"on\" to \"off\" and vice versa\n  const switchPlayPreview = (event: KeyboardEvent | SyntheticEvent, ref: React.RefObject<HTMLDivElement> | undefined) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    event.stopPropagation()                     // Prevent video playback due to Space bar press\n    dispatch(setIsPlayPreview(!isPlayPreview))\n\n    // Lose focus if clicked by mouse\n    if (ref) {\n      ref.current?.blur()\n    }\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    // preview: switchPlayPreview,\n    preview: (keyEvent?: KeyboardEvent) => { if(keyEvent) { switchPlayPreview(keyEvent, undefined) } }\n  }\n\n  const previewModeStyle = css({\n    cursor: \"pointer\",\n    display: 'flex',\n    ...(flexGapReplacementStyle(10, false)),\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n\n  const switchIconStyle = css({\n    cursor: \"pointer\",\n    transitionDuration: \"0.3s\",\n    transitionProperty: \"transform\",\n    \"&:hover\": {\n      transform: 'scale(1.05)',\n    },\n  })\n\n  return (\n    <div css={previewModeStyle}\n      ref={ref}\n      title={t(\"video.previewButton-tooltip\", { status: (isPlayPreview ? \"on\" : \"off\"), hotkeyName: cuttingKeyMap[handlers.preview.name] })}\n      role=\"switch\" aria-checked={isPlayPreview} tabIndex={0} aria-hidden={false}\n      aria-label={t(\"video.previewButton-aria\", { hotkeyName: cuttingKeyMap[handlers.preview.name] })}\n      onClick={ (event: SyntheticEvent) => switchPlayPreview(event, ref) }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \") {\n        switchPlayPreview(event, undefined)\n      }}}>\n      <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} />\n      <div css={{display: 'inline-block', flexWrap: 'nowrap'}}>\n        {t(\"video.previewButton\")}\n      </div>\n      <FontAwesomeIcon css={switchIconStyle} icon={isPlayPreview ? faToggleOn : faToggleOff} size=\"1x\"/>\n    </div>\n  );\n}\n\n/**\n * Start/Pause playing the videos\n */\nconst PlayButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  // Change play mode from \"on\" to \"off\" and vice versa\n  const switchIsPlaying = (event: KeyboardEvent | SyntheticEvent) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    dispatch(setIsPlaying(!isPlaying))\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    play: (keyEvent?: KeyboardEvent) => { if(keyEvent) { switchIsPlaying(keyEvent) } }\n  }\n\n  return (\n    <>\n    <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} />\n    <FontAwesomeIcon css={[basicButtonStyle, {justifySelf: 'center'}]} icon={isPlaying ? faPause : faPlay} size=\"2x\"\n      title={t(\"video.playButton-tooltip\")}\n      role=\"button\" aria-pressed={isPlaying} tabIndex={0} aria-hidden={false}\n      aria-label={t(\"video.playButton-tooltip\")}\n      onClick={(event: SyntheticEvent) => { switchIsPlaying(event) }}\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \"Enter\") { // \"Space\" is handled by global key\n        switchIsPlaying(event)\n      }}}\n    />\n    </>\n  );\n}\n\n/**\n * Live update for the current time\n */\nconst TimeDisplay: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const currentlyAt = useSelector(selectCurrentlyAt)\n  const duration = useSelector(selectDuration)\n\n  return (\n    <div css={{display: 'flex', flexDirection: 'row', gap: '5px'}}>\n      <time css={{display: 'inline-block', width: '100px'}}\n        title={t(\"video.time-duration-tooltip\")}\n        tabIndex={0} role=\"timer\" aria-label={t(\"video.time-aria\")+\": \" + convertMsToReadableString(currentlyAt)}>\n        {new Date((currentlyAt ? currentlyAt : 0)).toISOString().substr(11, 12)}\n      </time>\n      {\" / \"}\n      <div tabIndex={0} aria-label={t(\"video.duration-aria\")+\": \" + convertMsToReadableString(duration)}>\n        {new Date((duration ? duration : 0)).toISOString().substr(11, 12)}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Displays elements above the video, e.g. title\n */\nconst VideoHeader: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const title = useSelector(selectTitle)\n  const metadataTitle = useSelector(selectTitleFromEpisodeDc)\n  const presenters = useSelector(selectPresenters)\n\n  const titleStyle = css({\n    display: 'inline-block',\n    padding: '15px',\n    overflow: 'hidden',\n    whiteSpace: \"nowrap\",\n    textOverflow: 'ellipsis',\n    maxWidth: '500px',\n  })\n\n  const titleStyleBold = css({\n    fontWeight: 'bold',\n    fontSize: '24px',\n    verticalAlign: '-2.5px',\n  })\n\n  let presenter_header;\n  if (presenters && presenters.length) {\n      presenter_header = <div css={titleStyle} title={t(\"video.presenter-tooltip\")}>by {presenters.join(\", \")}</div>\n  }\n  return (\n    <div title={t(\"video.area-tooltip\")} css={{fontSize: '16px'}}>\n      <div css={[titleStyle, titleStyleBold]} title={t(\"video.title-tooltip\")}>\n        {metadataTitle ? metadataTitle : title}\n      </div>\n      {presenter_header}\n    </div>\n  );\n}\n\nexport default Video;\n","/**\n * Big thanks to Duncan \"slampunk\" Smith for writing this code and allowing it\n * to be used for this application.\n * duncan83@gmail.com\n */\n\nimport { AudioContext } from 'standardized-audio-context';\n\nexport function Waveform(opts) {\n  this.audioContext = new AudioContext();\n  this.oCanvas = document.createElement('canvas');\n  this.buffer = {};\n  this.WIDTH = 0;\n  this.HEIGHT = 0;\n  this.channelData = [];\n  this.waveformImage = '';\n  this.audioBuffer = null;\n\n  this.aveRMS = 0;\n  this.peakRMS = 0;\n\n  this.numberSamples = 100000;\n  this.waveformType = 'img';\n  this.drawWaveform = this.drawCanvasWaveform;\n\n  if (opts.width && opts.height) {\n    this.setDimensions(opts.width, opts.height);\n  }\n  if (opts.samples) {\n    this.numberSamples = opts.samples;\n  }\n  if (opts.type && opts.type === 'svg') {\n    this.waveformType = 'svg';\n    this.drawWaveform = this.delegateToWorker;\n    this.worker = null;\n  }\n  if (opts.media) {\n    this.generateWaveform(opts.media)\n      .then(() => {\n        this.getAudioData();\n        this.drawWaveform();\n        if (this.waveformType !== 'svg') {\n          _completeFuncs.forEach(fn => {\n            fn(this.waveformImage || this.svgPath, this.waveformType);\n          });\n        }\n      })\n      .catch((e) => {\n        console.log(\"Waveform Worker: \" + e);\n        this._error = e.toString()\n        this.onerror.forEach(fn => fn(e.toString()));\n      });\n  }\n\n  var _completeFuncs = [];\n  Object.defineProperty(this, 'oncomplete', {\n    get: function() {\n      return _completeFuncs;\n    },\n    set: function(fn, opt) {\n      if (typeof fn == 'function') {\n        if (this.waveformImage || this.svgPath) {\n          fn(this.waveformImage || this.svgPath, this.svgLength);\n          return;\n        }\n\n        _completeFuncs.push(fn);\n      }\n    }\n  });\n\n  var _error = \"\";\n  var _errorFuncs = [];\n  Object.defineProperty(this, 'onerror', {\n    get: function() {\n      return _errorFuncs;\n    },\n    set: function(fn, opt) {\n      if (typeof fn == 'function') {\n        if (this._error && this._error !== \"\") {\n          fn(_error);\n          return;\n        }\n      }\n\n      _errorFuncs.push(fn);\n    }\n  });\n}\n\nWaveform.prototype = {\n  constructor: Waveform,\n  setDimensions: function(width, height) {\n    this.oCanvas.width = width;\n    this.WIDTH = width;\n    this.oCanvas.height = height;\n    this.HEIGHT = height;\n    this.ocCtx = this.oCanvas.getContext('2d');\n  },\n  decodeAudioData: function(arraybuffer) {\n    return new Promise((resolve, reject) => {\n      new Promise((res, rej) => {\n        if (arraybuffer instanceof ArrayBuffer) {\n          res(arraybuffer);\n        }\n        else if (arraybuffer instanceof Blob) {\n          let reader = new FileReader();\n          reader.onload = function() {\n            res(reader.result);\n          }\n          reader.readAsArrayBuffer(arraybuffer);\n        }\n      })\n      .then(buffer => {\n        this.audioContext.decodeAudioData(buffer)\n          .then(audiobuffer => {\n            this.buffer = audiobuffer;\n            resolve();\n          })\n          .catch(e => {\n            reject(e);\n          })\n      })\n      .catch(e => {\n        reject(e);\n      })\n    })\n  },\n  getAudioData: function(buffer) {\n    buffer = buffer || this.buffer;\n    this.channelData = this.dropSamples(buffer.getChannelData(0), this.numberSamples);\n  },\n  drawCanvasWaveform: function(amp) {\n    amp = amp || 1;\n    this.ocCtx.fillStyle = '#FFFFFF00'; //'#b7d8f9';\n    this.ocCtx.fillRect(0, 0, this.WIDTH, this.HEIGHT);\n    this.ocCtx.lineWidth = 1;\n    this.ocCtx.strokeStyle = 'black'; //'#38597a';\n    let sliceWidth = this.WIDTH * 1.0 / this.channelData.length;\n    let x = 0;\n\n    this.ocCtx.beginPath();\n    this.ocCtx.moveTo(x, this.channelData[0] * this.HEIGHT / 128.0 / 2);\n\n    this.channelData.forEach(sample => {\n      let v = sample * amp;\n      let y = this.HEIGHT * (1 + v) / 2;\n      this.ocCtx.lineTo(x, y);\n      this.aveRMS += sample * sample;\n      this.peakRMS = Math.max(sample * sample, this.peakRMS);\n      x += sliceWidth;\n    });\n    this.ocCtx.lineTo(this.WIDTH, this.HEIGHT/2);\n    this.ocCtx.stroke();\n    this.aveRMS = Math.sqrt(this.aveRMS / this.channelData.length);\n    this.aveDBs = 20 * Math.log(this.aveRMS) / Math.log(10);\n    this.waveformImage = this.oCanvas.toDataURL();\n  },\n  dropSamples: function(data, requestedLength) {\n    let divider = Math.max(parseInt(data.length / requestedLength), 1);\n    return data.filter((sample, i) => i % divider === 0);\n  },\n  generateWaveform: function(arraybuffer) {\n    return this.decodeAudioData(arraybuffer);\n  },\n  delegateToWorker: function() {\n    if (!this.worker) {\n      this.worker = new Worker('../util/svgworker.js');\n      this.worker.addEventListener('message', this.workerCommunication.bind(this), false);\n      this.worker.postMessage(this.channelData);\n    }\n  },\n  workerCommunication: function(e) {\n    switch(e.data.type) {\n      case 'path':\n        this.setSVGpath(e.data.path, e.data.length);\n        this.worker.removeEventListener('message', this.workerCommunication.bind(this), false);\n        this.worker.terminate();\n        this.worker = null;\n        break;\n      default:\n        break;\n    }\n  },\n  setSVGpath: function(path, len) {\n    this.svgPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.svgLength = len;\n\n    this.svgPath.setAttribute('d', path);\n    this.svgPath.setAttribute('vector-effect', 'non-scaling-stroke');\n    this.svgPath.setAttribute('stroke-width', '0.5px');\n\n    this.oncomplete.forEach(fn => fn(this.svgPath, this.svgLength));\n  }\n};\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport Draggable from 'react-draggable';\n\nimport { css } from '@emotion/react'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Segment, httpRequestState, MainMenuStateNames } from '../types'\nimport {\n  selectIsPlaying, selectCurrentlyAt, selectSegments, selectActiveSegmentIndex, selectDuration,\n  setIsPlaying, selectVideoURL, setCurrentlyAt, setClickTriggered\n} from '../redux/videoSlice'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport useResizeObserver from \"use-resize-observer\";\n\nimport { Waveform } from '../util/waveform'\nimport { convertMsToReadableString } from '../util/utilityFunctions';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { scrubberKeyMap } from '../globalKeys';\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { selectMainMenuState } from '../redux/mainMenuSlice';\n\n/**\n * A container for visualizing the cutting of the video, as well as for controlling\n * the current position in the video\n * Its width corresponds to the duration of the video\n * TODO: Figure out why ResizeObserver does not update anymore if we stop passing the width to the SegmentsList\n */\nconst Timeline: React.FC<{}> = () => {\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const duration = useSelector(selectDuration)\n\n  const { ref, width = 1, } = useResizeObserver<HTMLDivElement>();\n\n  const timelineStyle = css({\n    position: 'relative',     // Need to set position for Draggable bounds to work\n    height: '250px',\n    width: '100%',\n  });\n\n  // Update the current time based on the position clicked on the timeline\n  const setCurrentlyAtToClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let rect = e.currentTarget.getBoundingClientRect()\n    let offsetX = e.clientX - rect.left\n    dispatch(setClickTriggered(true))\n    dispatch(setCurrentlyAt((offsetX / width) * (duration)))\n  }\n\n  return (\n  <div ref={ref} css={timelineStyle} title=\"Timeline\" onMouseDown={e => setCurrentlyAtToClick(e)}>\n    <Scrubber timelineWidth={width}/>\n    <div css={{height: '230px'}} >\n      <Waveforms />\n      <SegmentsList timelineWidth={width}/>\n    </div>\n  </div>\n  );\n};\n\n/**\n * Displays and defines the current position in the video\n * @param param0\n */\nconst Scrubber: React.FC<{timelineWidth: number}> = ({timelineWidth}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const isPlaying = useSelector(selectIsPlaying)\n  const currentlyAt = useSelector(selectCurrentlyAt)\n  const duration = useSelector(selectDuration)\n  const activeSegmentIndex = useSelector(selectActiveSegmentIndex)  // For ARIA information display\n  const segments = useSelector(selectSegments)                      // For ARIA information display\n  const mainMenuState = useSelector(selectMainMenuState)            // For hotkey enabling/disabling\n\n  // Init state variables\n  const [controlledPosition, setControlledPosition] = useState({x: 0,y: 0,});\n  const [isGrabbed, setIsGrabbed] = useState(false)\n  const [wasPlayingWhenGrabbed, setWasPlayingWhenGrabbed] = useState(false)\n  const [keyboardJumpDelta, setKeyboardJumpDelta] = useState(1000)  // In milliseconds. For keyboard navigation\n  const wasCurrentlyAtRef = useRef(0)\n  const nodeRef = React.useRef(null); // For supressing \"ReactDOM.findDOMNode() is deprecated\" warning\n\n  // Reposition scrubber when the current x position was changed externally\n  useEffect(() => {\n    if(currentlyAt !== wasCurrentlyAtRef.current && !isGrabbed) {\n      updateXPos();\n      wasCurrentlyAtRef.current = currentlyAt;\n    }\n  })\n\n  // Reposition scrubber when the timeline width changes\n  useEffect(() => {\n    if(currentlyAt && duration) {\n      setControlledPosition({x: (currentlyAt / duration) * (timelineWidth), y: 0});\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineWidth])\n\n  // Callback for when the scrubber gets dragged by the user\n  const onControlledDrag = (e: any, position: any) => {\n    // Update position\n    const {x} = position\n    dispatch(setCurrentlyAt((x / timelineWidth) * (duration)))\n  };\n\n  // Callback for when the position changes by something other than dragging\n  const updateXPos = () => {\n    setControlledPosition({x: (currentlyAt / duration) * (timelineWidth), y: 0});\n  };\n\n  const onStartDrag = () => {\n    setIsGrabbed(true)\n\n    // Halt video playback\n    if (isPlaying) {\n      setWasPlayingWhenGrabbed(true)\n      dispatch(setIsPlaying(false))\n    } else {\n      setWasPlayingWhenGrabbed(false)\n    }\n  }\n\n  const onStopDrag = (e: any, position: any) => {\n    // Update position\n    const {x} = position;\n    setControlledPosition({x, y: 0});\n    dispatch(setCurrentlyAt((x / timelineWidth) * (duration)));\n\n    setIsGrabbed(false)\n    // Resume video playback\n    if (wasPlayingWhenGrabbed) {\n      dispatch(setIsPlaying(true))\n    }\n  }\n\n  // Callbacks for keyboard controls\n  // TODO: Better increases and decreases than ten intervals\n  // TODO: Additional helpful controls (e.g. jump to start/end of segment/next segment)\n  const handlers = {\n    left: () => dispatch(setCurrentlyAt(Math.max(currentlyAt - keyboardJumpDelta, 0))),\n    right: () => dispatch(setCurrentlyAt(Math.min(currentlyAt + keyboardJumpDelta, duration))),\n    increase: () => setKeyboardJumpDelta(keyboardJumpDelta => Math.min(keyboardJumpDelta * 10, 1000000)),\n    decrease: () => setKeyboardJumpDelta(keyboardJumpDelta => Math.max(keyboardJumpDelta / 10, 1))\n  }\n\n  const scrubberStyle = css({\n    backgroundColor: 'black',\n    height: '240px',\n    width: '1px',\n    position: 'absolute' as 'absolute',\n    zIndex: 2,\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  });\n\n  const scrubberDragHandleStyle = css({\n    // Base style\n    background: \"black\",\n    display: \"inline-block\",\n    height: \"10px\",\n    position: \"relative\",\n    width: \"20px\",\n    \"&:after\": {\n      borderTop: '10px solid black',\n      borderLeft: '10px solid transparent',\n      borderRight: '10px solid transparent',\n      content: '\"\"',\n      height: 0,\n      left: 0,\n      position: \"absolute\",\n      top: \"10px\",\n      width: 0,\n    },\n    // Animation\n    cursor: isGrabbed ? \"grabbing\" : \"grab\",\n    transitionDuration: \"0.3s\",\n    transitionProperty: \"transform\",\n    \"&:hover\": {\n      transform: 'scale(1.1)',\n    },\n    \"&:active\": {\n      transform: 'scale(0.9)',\n    },\n  })\n\n  const scrubberDragHandleIconStyle = css({\n    transform: 'scaleY(0.7) rotate(90deg)',\n    paddingRight: '5px',\n    color: \"white\"\n  })\n\n  // // Possible TODO: Find a way to use ariaLive in a way that only the latest change is announced\n  // const keyboardUpdateMessage = () => {\n  //   return currentlyAt +  \" Milliseconds\"\n  // }\n\n  return (\n    <GlobalHotKeys keyMap={scrubberKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true}>\n      <Draggable\n        onDrag={onControlledDrag}\n        onStart={onStartDrag}\n        onStop={onStopDrag}\n        axis=\"x\"\n        bounds=\"parent\"\n        position={controlledPosition}\n        nodeRef={nodeRef}\n        >\n          <div ref={nodeRef} css={scrubberStyle}>\n\n            <div css={scrubberDragHandleStyle} aria-grabbed={isGrabbed}\n              aria-label={t(\"timeline.scrubber-text-aria\",\n                         {currentTime: convertMsToReadableString(currentlyAt), segment: activeSegmentIndex,\n                          segmentStatus: (segments[activeSegmentIndex].deleted ? \"Deleted\" : \"Alive\"),\n                          moveLeft: scrubberKeyMap[handlers.left.name],\n                          moveRight: scrubberKeyMap[handlers.right.name],\n                          increase: scrubberKeyMap[handlers.increase.name],\n                          decrease: scrubberKeyMap[handlers.decrease.name] })}\n              tabIndex={0}>\n              <FontAwesomeIcon css={scrubberDragHandleIconStyle} icon={faBars} size=\"1x\" />\n            </div>\n          </div>\n      </Draggable>\n    </GlobalHotKeys>\n  );\n};\n\n/**\n * Container responsible for rendering the segments that are created when cutting\n */\nconst SegmentsList: React.FC<{timelineWidth: number}> = ({timelineWidth}) => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const segments = useSelector(selectSegments)\n  const duration = useSelector(selectDuration)\n  const activeSegmentIndex = useSelector(selectActiveSegmentIndex)\n\n  /**\n   * Returns a background color based on whether the segment is to be deleted\n   * and whether the segment is currently active\n   */\n  const bgColor = (deleted: boolean, active: boolean) => {\n    if (!deleted && !active) {\n      return 'rgba(0, 0, 255, 0.4)'\n    } else if (deleted && !active) {\n      return `repeating-linear-gradient(\n                -45deg,\n                rgba(255, 45, 45, 0.4),\n                rgba(255, 45, 45, 0.4) 10px,\n                rgba(255, 0, 0, 0.4) 10px,\n                rgba(255, 0, 0, 0.4) 20px);`\n    } else if (!deleted && active) {\n      return 'rgba(0, 0, 200, 0.4)'\n    } else if (deleted && active) {\n      return `repeating-linear-gradient(\n                -45deg,\n                rgba(200, 45, 45, 0.4),\n                rgba(200, 45, 45, 0.4) 10px,\n                rgba(200, 0, 0, 0.4) 10px,\n                rgba(200, 0, 0, 0.4) 20px);`\n    }\n  }\n\n  // Render the individual segments\n  const renderedSegments = () => {\n    return (\n      segments.map( (segment: Segment, index: number) => (\n        <div key={segment.id} title={t(\"timeline.segment-tooltip\", {segment: index})}\n          aria-label={t(\"timeline.segments-text-aria\",\n                     {segment: index,\n                      segmentStatus: (segment.deleted ? \"Deleted\" : \"Alive\"),\n                      start: convertMsToReadableString(segment.start),\n                      end: convertMsToReadableString(segment.end) })}\n          tabIndex={0}\n        css={{\n          background: bgColor(segment.deleted, activeSegmentIndex === index),\n          borderRadius: '5px',\n          borderStyle: activeSegmentIndex === index ? 'dashed' : 'solid',\n          borderColor: 'white',\n          borderWidth: '1px',\n          boxSizing: 'border-box',\n          width: ((segment.end - segment.start) / duration) * 100 + '%',\n          height: '230px',\n          zIndex: 1,\n        }}>\n        </div>\n      ))\n    );\n  }\n\n  const segmentsStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    paddingTop: '10px',\n  })\n\n  return (\n    <div css={segmentsStyle} title=\"Segments\">\n      {renderedSegments()}\n    </div>\n  );\n};\n\n/**\n * Generates waveform images and displays them\n */\nconst Waveforms: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const videoURLs = useSelector(selectVideoURL)\n  const videoURLStatus = useSelector((state: { videoState: { status: httpRequestState[\"status\"] } }) => state.videoState.status);\n\n  // Update based on current fetching status\n  const [images, setImages] = useState<string[]>([])\n  const [waveformWorkerError, setWaveformWorkerError] = useState<boolean>(false)\n\n  const waveformDisplayTestStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    position: \"absolute\" as \"absolute\",\n    justifyContent: 'center',\n    ...(images.length <= 0) && {alignItems: 'center'},  // Only center during loading\n    width: '100%',\n    height: '230px',\n    paddingTop: '10px',\n  });\n\n  // When the URLs to the videos are fetched, generate waveforms\n  useEffect( () => {\n    if (videoURLStatus === 'success') {\n      const images: string[] = []    // Store local paths to image files\n      let waveformsProcessed : number = 0  // Counter for checking if all workers are done\n\n      // Only display the waveform of the first video we get\n      const onlyOneURL = [videoURLs[0]]\n\n      onlyOneURL.forEach((videoURL, _index, array) => {\n        // Set up blob request\n        var blob = null\n        var xhr = new XMLHttpRequest()\n        xhr.open(\"GET\", videoURL)\n        xhr.responseType = \"blob\"\n        xhr.onload = function()\n        {\n          blob = xhr.response\n          var file = new File([blob], blob)\n\n          // Start waveform worker with blob\n          const waveformWorker : any = new Waveform({type: 'img', width: '2000', height: '230', samples: 100000, media: file})\n\n          waveformWorker.onerror = function(error: string) {\n            setWaveformWorkerError(true)\n            console.log(\"Waveform could not be generated:\" + error)\n          }\n\n          // When done, save path to generated waveform img\n          waveformWorker.oncomplete = function(image: any, numSamples: any) {\n            images.push(image)\n            waveformsProcessed++\n            // If all images are generated, rerender\n            if (waveformsProcessed === array.length) {\n              setImages(images)\n            }\n          }\n        }\n\n        xhr.send()\n      })\n    }\n  }, [videoURLStatus, videoURLs]);\n\n\n  const renderImages = () => {\n    if (images.length > 0) {\n      return (\n        images.map((image, index) =>\n          <img key={index} alt='Waveform' src={image ? image : \"\"} css={{minHeight: 0}}></img>\n        )\n      );\n    } else if (waveformWorkerError) {\n      return (\n        <div>{\"Waveform could not be generated\"}</div>\n      );\n    }\n    else {\n      return (\n        <>\n          <FontAwesomeIcon icon={faSpinner} spin size=\"3x\"/>\n          <div>{t(\"timeline.generateWaveform-text\")}</div>\n        </>\n      );\n    }\n  }\n\n  return (\n  <div css={waveformDisplayTestStyle}>\n    {renderImages()}\n  </div>\n  );\n}\n\nexport default Timeline;\n","import React, { SyntheticEvent } from \"react\";\n\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconDefinition,\n  faCut,\n  faStepBackward,\n  faStepForward,\n  faTrash,\n  faTrashRestore,\n  } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { css } from '@emotion/react'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  cut, markAsDeletedOrAlive, selectIsCurrentSegmentAlive, mergeLeft, mergeRight\n} from '../redux/videoSlice'\nimport { GlobalHotKeys, KeySequence } from \"react-hotkeys\";\nimport { selectMainMenuState } from \"../redux/mainMenuSlice\";\nimport { MainMenuStateNames } from \"../types\";\nimport { cuttingKeyMap } from \"../globalKeys\";\nimport { ActionCreatorWithoutPayload } from \"@reduxjs/toolkit\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Defines the different actions a user can perform while in cutting mode\n */\nconst CuttingActions: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch();\n  const mainMenuState = useSelector(selectMainMenuState)\n\n  /**\n   * General action callback for cutting actions\n   * @param event event triggered by click or button press\n   * @param action redux event to dispatch\n   * @param ref Pass a reference if the clicked element should lose focus\n   */\n  const dispatchAction = (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => {\n    event.preventDefault()                      // Prevent page scrolling due to Space bar press\n    event.stopPropagation()                     // Prevent video playback due to Space bar press\n    dispatch(action())\n\n    // Lose focus if clicked by mouse\n    if (ref) {\n      ref.current?.blur()\n    }\n  }\n\n  // Maps functions to hotkeys\n  const handlers = {\n    cut: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, cut, undefined) } },\n    delete: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, markAsDeletedOrAlive, undefined) } },\n    mergeLeft: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, mergeLeft, undefined) } },\n    mergeRight: (keyEvent?: KeyboardEvent | SyntheticEvent) => { if(keyEvent) { dispatchAction(keyEvent, mergeRight, undefined) } },\n  }\n\n  const cuttingStyle =  css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'space-between',\n    ...(flexGapReplacementStyle(30, true)),\n  })\n\n  const blockStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    ...(flexGapReplacementStyle(30, true)),\n  })\n\n  return (\n    <GlobalHotKeys keyMap={cuttingKeyMap} handlers={mainMenuState === MainMenuStateNames.cutting ? handlers: {}} allowChanges={true} >\n      <div css={cuttingStyle}>\n          <div css={blockStyle}>\n            <CuttingActionsButton iconName={faCut}\n              actionName=\"Cut\" actionHandler={dispatchAction} action={cut}\n              tooltip={t('cuttingActions.cut-tooltip', { hotkeyName: cuttingKeyMap[handlers.cut.name] })}\n              ariaLabelText={t('cuttingActions.cut-tooltip-aria', { hotkeyName: cuttingKeyMap[handlers.cut.name] })}\n            />\n            <MarkAsDeletedButton actionHandler={dispatchAction} action={markAsDeletedOrAlive} hotKeyName={cuttingKeyMap[handlers.delete.name]}/>\n            <CuttingActionsButton iconName={faStepBackward}\n              actionName=\"Merge Left\" actionHandler={dispatchAction} action={mergeLeft}\n              tooltip={t('cuttingActions.mergeLeft-tooltip', { hotkeyName: cuttingKeyMap[handlers.mergeLeft.name] })}\n              ariaLabelText={t('cuttingActions.mergeLeft-tooltip-aria', { hotkeyName: cuttingKeyMap[handlers.mergeLeft.name] })}\n            />\n            <CuttingActionsButton iconName={faStepForward}\n              actionName=\"Merge Right\" actionHandler={dispatchAction} action={mergeRight}\n              tooltip={t('cuttingActions.mergeRight-tooltip', { hotkeyName: cuttingKeyMap[handlers.mergeRight.name] })}\n              ariaLabelText={t('cuttingActions.mergeRight-tooltip-aria', { hotkeyName: cuttingKeyMap[handlers.mergeRight.name] })}\n            />\n          </div>\n          <div css={blockStyle}>\n            {/* <CuttingActionsButton iconName={faQuestion} actionName=\"Reset changes\" action={null}\n              tooltip=\"Not implemented\"\n              ariaLabelText=\"Reset changes. Not implemented\"\n            />\n            <CuttingActionsButton iconName={faQuestion} actionName=\"Undo\" action={null}\n              tooltip=\"Not implemented\"\n              ariaLabelText=\"Undo. Not implemented\"\n            /> */}\n          </div>\n      </div>\n    </GlobalHotKeys>\n  );\n};\n\n/**\n * CSS for cutting buttons\n */\nconst cuttingActionButtonStyle = {\n  padding: '16px',\n  boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n};\n\ninterface cuttingActionsButtonInterface {\n  iconName: IconDefinition,\n  actionName: string,\n  actionHandler: (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => void,\n  action: ActionCreatorWithoutPayload<string>,\n  tooltip: string,\n  ariaLabelText: string,\n}\n\n/**\n * A button representing a single action a user can take while cutting\n * @param param0\n */\nconst CuttingActionsButton: React.FC<cuttingActionsButtonInterface> = ({iconName, actionName, actionHandler, action, tooltip, ariaLabelText}) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  return (\n    <div css={[basicButtonStyle, cuttingActionButtonStyle]}\n      title={tooltip}\n      ref={ref}\n      role=\"button\" tabIndex={0} aria-label={ariaLabelText}\n      onClick={ (event: SyntheticEvent) => actionHandler(event, action, ref) }\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \" \" || event.key === \"Enter\") {\n        actionHandler(event, action, undefined)\n      }}}\n      >\n      <FontAwesomeIcon icon={iconName} size=\"1x\" />\n      <span>{actionName}</span>\n    </div>\n  );\n};\n\ninterface markAsDeleteButtonInterface {\n  actionHandler: (event: KeyboardEvent | SyntheticEvent, action: ActionCreatorWithoutPayload<string>, ref: React.RefObject<HTMLDivElement> | undefined) => void,\n  action: ActionCreatorWithoutPayload<string>,\n  hotKeyName: KeySequence,\n}\n\n/**\n * Button that changes its function based on context\n */\nconst MarkAsDeletedButton : React.FC<markAsDeleteButtonInterface> = ({actionHandler, action, hotKeyName}) => {\n  const { t } = useTranslation();\n  const isCurrentSegmentAlive = useSelector(selectIsCurrentSegmentAlive)\n  const ref = React.useRef<HTMLDivElement>(null)\n\n  return (\n    <div css={[basicButtonStyle, cuttingActionButtonStyle]}\n      title={t('cuttingActions.delete-restore-tooltip', { hotkeyName: hotKeyName })}\n      ref={ref}\n      role=\"button\" tabIndex={0}\n      aria-label={t('cuttingActions.delete-restore-tooltip-aria', { hotkeyName: hotKeyName })}\n      onClick={(event: SyntheticEvent) => actionHandler(event, action, ref)}\n      onKeyDown={(event: React.KeyboardEvent) => { if (event.key === \" \" || event.key === \"Enter\") {\n        actionHandler(event, action, undefined)\n      }}}\n      >\n      <FontAwesomeIcon icon={isCurrentSegmentAlive ? faTrash : faTrashRestore} size=\"1x\" />\n      <div>{isCurrentSegmentAlive ? t('cuttingActions.delete-button') : t(\"cuttingActions.restore-button\")}</div>\n    </div>\n  );\n}\n\nexport default CuttingActions;\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { errorBoxStyle } from '../cssStyles'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchMetadata, postMetadata, selectCatalogs,\n  Catalog, MetadataField, setFieldValue, selectGetError, selectGetStatus, selectPostError, selectPostStatus\n} from '../redux/metadataSlice'\n\nimport { Form, Field, FieldInputProps } from 'react-final-form'\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\nimport {\n  KeyboardDateTimePicker,\n  KeyboardTimePicker,\n  showErrorOnBlur,\n} from 'mui-rff';\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { DateTime as LuxonDateTime} from \"luxon\";\n\nimport { settings } from '../config'\n\n\n/**\n * Creates a Metadata form\n *\n * Takes data from a redux slice and throws it into a react-final-form.\n * When submitting, the state in the redux slice gets updated\n *\n * If something doesn't work, main places of interest are the submit function\n * and the initialValues function\n */\nconst Metadata: React.FC<{}> = () => {\n\n  const { t, i18n } = useTranslation();\n\n  // Init redux variables\n  const dispatch = useDispatch()\n  const catalogs = useSelector(selectCatalogs);\n  const getStatus = useSelector(selectGetStatus);\n  const getError = useSelector(selectGetError);\n  const postStatus = useSelector(selectPostStatus);\n  const postError = useSelector(selectPostError);\n\n  // Try to fetch URL from external API\n  useEffect(() => {\n    if (getStatus === 'idle') {\n      dispatch(fetchMetadata())\n    }\n  }, [getStatus, dispatch])\n\n  /**\n   * CSS\n   */\n\n  const metadataStyle = css({\n    // maxWidth: '1500px',\n    // margin: '10px',\n    padding: '20px',\n  })\n\n  const fieldStyle = css({\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    lineHeight: '2em',\n    margin: '10px',\n  })\n\n  const fieldLabelStyle = css({\n    alignSelf: 'center',\n    width: '110px',\n    fontSize: '1em',\n    lineHeight: '32px',\n  })\n\n  const fieldTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css({\n        flex: '1',\n        fontSize: '1em',\n        marginLeft: '15px',\n        borderRadius: '5px',\n        backgroundColor: 'snow',\n        boxShadow: isReadOnly ? '0 0 0px rgba(0, 0, 0, 0.3)' : '0 0 1px rgba(0, 0, 0, 0.3)',\n        ...isReadOnly && {color: 'grey'}\n      })\n    );\n  }\n\n  const inputFieldTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css({\n        padding: '10px 10px',\n        border: isReadOnly ? '0px solid #ccc' : '1px solid #ccc',\n      })\n    );\n  }\n\n  const selectFieldTypeStyle = {\n    control: (provided: any) => ({\n      ...provided,\n      background: 'snow'\n    }),\n    menu: (provided: any) => ({\n      ...provided,\n      background: 'snow',\n      // kill the gap\n      marginTop: 0\n    }),\n  }\n\n  const dateTimeTypeStyle = (isReadOnly: boolean) => {\n    return (\n      css ({\n        padding: '5px 10px',\n        border: isReadOnly ? '0px solid #ccc' : '1px solid #ccc',\n      })\n    );\n  }\n\n  const validateStyle = (isError: boolean) => {\n    return (\n      css({\n        lineHeight: '32px',\n        marginLeft: '10px',\n        ...(isError) && {color: '#800'},\n        fontWeight: 'bold',\n      })\n    )\n  }\n\n  // const buttonContainerStyle = css({\n  //   display: 'flex',\n  //   flexFlow: 'row nowrap',\n  //   justifyContent: 'space-around',\n  //   marginTop: '25px',\n  // })\n\n  // // TODO: Rework all div buttons so the ':enabled' pseudo-class does not screw them over\n  // const basicButtonStyleCOPY = css({\n  //   borderRadius: '10px',\n  //   cursor: \"pointer\",\n  //   // Animation\n  //   transitionDuration: \"0.3s\",\n  //   transitionProperty: \"transform\",\n  //   \"&:hover:enabled\": {\n  //     transform: 'scale(1.1)',\n  //   },\n  //   \"&:focus:enabled\": {\n  //     transform: 'scale(1.1)',\n  //   },\n  //   \"&:active:enabled\": {\n  //     transform: 'scale(0.9)',\n  //   },\n  //   // Flex position child elements\n  //   display: 'flex',\n  //   justifyContent: 'center',\n  //   alignItems: 'center',\n  //   gap: '10px',\n  //   textAlign: 'center' as const,\n  // });\n\n  // const submitButtonStyle = css({\n  //   background: 'snow',\n  //   border: '1px solid #ccc',\n\n  //   \"&[disabled]\": {\n  //     opacity: '0.6',\n  //     cursor: 'not-allowed',\n  //   },\n  // })\n\n  /**\n   * Form Callbacks - Other\n   */\n\n   /**\n    * Recursively recreates nested array structures for form initalValues\n    * @param library\n    * @param input\n    * @param output\n    */\n  const helperHandleArrays = (library: any[] | null, input: any, output: any[]) => {\n    // If the value is hid inside an array, we need to extract it\n    if (Array.isArray(input)) {\n      input.forEach((subArray: any) => {\n        output.push(helperHandleArrays(library, subArray, output))\n      })\n    }\n\n    // Find react-select equivalent for inital value\n    return library?.find(el => el.submitValue === input)\n  }\n\n  /**\n   * Returns a data structure to initialize the form fields with\n   * @param catalogs\n   */\n  const getInitialValues = (catalogs: Catalog[]) => {\n    const initValues : { [n: string]: any } = {};\n\n    catalogs.forEach((catalog: Catalog, catalogIndex: number) => {\n      initValues[\"catalog\" + catalogIndex] = {}\n      catalog.fields.forEach((field: MetadataField) =>{\n        initValues[\"catalog\" + catalogIndex][field.id] = field.value\n\n        // Handle initial values for select fields differently\n        // Since react-select creates different values\n        if (field.collection) {\n          const library = generateReactSelectLibrary(field)\n          let searchValue : any = field.value\n\n          if (Array.isArray(searchValue)) {\n            let result: any[] = [];\n            helperHandleArrays(library, field.value, result)\n            searchValue = result\n          } else {\n            searchValue = library?.find(el => el.submitValue === searchValue)\n          }\n\n          initValues[\"catalog\" + catalogIndex][field.id] = searchValue\n        }\n      })\n    })\n\n    return initValues\n  }\n\n  /**\n   * Form Callbacks - Validation\n   */\n\n  /**\n   * Validator for required fields\n   * @param value\n   */\n  const required = (value: any) => (value ? undefined : t(\"metadata.validation.required\"))\n\n  /**\n   * Validator for the duration field\n   * @param value\n   */\n  const duration = (value: any) => {\n    let re: RegExp = /^[0-9][0-9]:[0-9][0-9]:[0-9][0-9]$/\n    return re.test(value) ? undefined : t(\"metadata.validation.duration-format\")\n  }\n\n  /**\n   * Validator for the date time fields\n   * @param date\n   */\n  const dateTimeValidator = (date: any) => {\n    // Empty field is valid value in Opencast\n    if (!date) {\n      return undefined\n    }\n\n    let dt = undefined\n    if (Object.prototype.toString.call(date) === '[object Date]') {\n      dt = LuxonDateTime.fromJSDate(date);\n    }\n    if (typeof(date) === 'string') {\n      dt = LuxonDateTime.fromISO(date);\n    }\n\n    if (dt) {\n      return dt.isValid ? undefined : t(\"metadata.validation.datetime\")\n    }\n    return t(\"metadata.validation.datetime\")\n  }\n\n  // // Function that combines multiple validation functions. Needs to be made typescript conform\n  // const composeValidators = (...validators) => value =>\n  // validators.reduce((error, validator) => error || validator(value), undefined)\n\n  /**\n   * Returns the desired combination of validators for a given field\n   * TODO: Fix 'composeValidators' so this function can actually work as advertised\n   * @param field\n   */\n  const getValidators = (field: MetadataField) => {\n    if (field.required) {\n      return required\n    } else if (field.id === \"duration\") {\n      return duration\n    } else if (field.type === \"date\" || field.type === \"time\") {\n      return dateTimeValidator\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n   * Form Callbacks - Submitting\n   */\n\n   /**\n    * Sends a single value to the corresponding field in redux.\n    * This kinda breaks the form workflow, since we do not use the submit callback\n    * of the form class anymore.\n    * @param value value for the field\n    * @param fieldId String of the form \"catalog{catalogIndex}.name\"\n    */\n  const submitSingleField = (value: any, fieldId: string) => {\n    const catalogIndexString = fieldId.substring(\n      fieldId.indexOf(\"g\") + 1,\n      fieldId.indexOf(\".\")\n    );\n    const fieldName = fieldId.substring(\n      fieldId.indexOf(\".\") + 1,\n      fieldId.length\n    );\n    const catalogIndex = parseInt(catalogIndexString)\n\n    // Find the corresponding field index in the redux catalog\n    for (let fieldIndex = 0; fieldIndex < catalogs[catalogIndex].fields.length; fieldIndex++) {\n      if (catalogs[catalogIndex].fields[fieldIndex].id === fieldName) {\n        // Update the field in the redux catalog\n        dispatch(setFieldValue({catalogIndex: catalogIndex, fieldIndex: fieldIndex,\n          value: parseValue(catalogs[catalogIndex].fields[fieldIndex], value)}))\n        break\n      }\n    }\n  }\n\n  /**\n   * Executes given blur callback while also sending the value of the current field to redux\n   * @param e\n   * @param input\n   */\n  const blurWithSubmit = (e: any, input: any) => {\n      input.onBlur(e);\n      submitSingleField(input.value, input.name)\n  }\n\n  /**\n   * Helper function for onSubmit\n   * Corrects formatting for certain form values\n   * @param field\n   * @param value\n   */\n  const parseValue = (field: MetadataField | null, value: any) => {\n    let returnValue : any = value\n\n    // Parse values out react-multi-select and put them in an array\n    if(Array.isArray(value)) {\n      returnValue = []\n      value.forEach((subValue : any) => {\n        returnValue.push(parseValue(null, subValue))  // Pass field as null to avoid each value into an array later on\n      })\n    }\n\n    // If the value is hidden an object due to react-select, extract it\n    if (typeof value === 'object' && value !== null && value.hasOwnProperty(\"submitValue\")) {\n      returnValue = value.submitValue\n    } else if (typeof value === 'object' && value !== null && value.__isNew__) {\n      returnValue = value.value\n    }\n\n    // For these fields, the value needs to be inside an array\n    if (field && !Array.isArray(value) &&(field.id === \"creator\" || field.id === \"contributor\")) {\n      returnValue = [returnValue]\n    }\n\n    // For these fields, the value needs to be inside an array\n    if (field && (field.type === \"date\" || field.type === \"time\") && Object.prototype.toString.call(returnValue) === '[object Date]') {\n      // If invalid date\n      if ((isNaN(returnValue.getTime()))) {\n        // Do nothing\n      } else {\n        returnValue = returnValue.toJSON()\n      }\n    } else if (field && (field.type === \"date\" || field.type === \"time\") && typeof returnValue === \"string\") {\n      if (returnValue !== \"\") { // Empty string is allowed\n        returnValue = new Date(returnValue).toJSON()\n      }\n    }\n\n    return returnValue\n  }\n\n  /**\n   * Callback for when the form is submitted\n   * Saves values in redux state and sends them to Opencast\n   * @param values\n   */\n  const onSubmit = (values: { [x: string]: { [x: string]: any; }; }) => {\n    // For each submitted value, get the catalog it belongs to\n    Object.keys(values).forEach((formCatalogName: string) => {\n      let catalogIndex = parseInt(formCatalogName.replace(\"catalog\", \"\"))\n\n      // For each field in the submitted values\n      Object.keys(values[formCatalogName]).forEach((formFieldName: any) => {\n        // Find the corresponding field index in the redux catalog\n        for (let fieldIndex = 0; fieldIndex < catalogs[catalogIndex].fields.length; fieldIndex++) {\n          if (catalogs[catalogIndex].fields[fieldIndex].id === formFieldName) {\n            // Update the field in the redux catalog\n            dispatch(setFieldValue({catalogIndex: catalogIndex, fieldIndex: fieldIndex,\n              value: parseValue(catalogs[catalogIndex].fields[fieldIndex], values[formCatalogName][formFieldName])}))\n            break\n          }\n        }\n      })\n\n      // Send updated values to Opencast\n      dispatch(postMetadata())\n    })\n  }\n\n  /**\n   * Form - Rendering\n   */\n\n  /**\n   * Transforms field values and labels into an array of objects\n   * that can be parsed by react-select\n   * @param field\n   */\n  const generateReactSelectLibrary = (field: MetadataField) => {\n    if (field.collection) {\n      // For whatever reason react-select uses 'value' as their key, which is not at all confusing\n      const library: [{value: any, label: any, submitValue: any}] = [{value: \"\", label: \"No value\", submitValue: \"\"}]\n      Object.entries(field.collection).forEach(([key, value]) => {\n        // // Parse License\n        // let [err, result] = safeJsonParse(key)\n        // if (!err) {\n        //   console.log(result)\n        // }\n\n        // Parse Label\n        let descLabel = null\n        if (i18n.exists(`metadata.${field.id}`)) {\n          descLabel = t(`metadata.${field.id}.${key.replaceAll(\".\", \"-\")}`)\n\n          if (field.id === \"license\") {\n            descLabel = t(`metadata.${field.id}.${JSON.parse(key).label.replaceAll(\".\", \"-\")}`)\n          }\n        }\n\n        // Change label for series\n        if (field.id === \"isPartOf\") {\n          descLabel = key\n        }\n\n        // Add to library\n        library.push({\n          value: key,\n          label: descLabel ? descLabel : value,\n          submitValue: value\n        })\n      })\n      return library\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Generates different form components based on the field\n   * @param field\n   * @param input\n   */\n  const generateComponent = (field: MetadataField, input: any) => {\n    input.id = input.name\n    if (field.collection) {\n      if (Array.isArray(field.value)) {\n        return (\n          <CreatableSelect {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            isMulti\n            isClearable\n            readOnly={field.readOnly}\n            options={generateReactSelectLibrary(field)}\n            styles={selectFieldTypeStyle}\n            css={fieldTypeStyle(field.readOnly)}>\n          </CreatableSelect>\n          );\n      } else {\n        return (\n          <Select {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            readOnly={field.readOnly}\n            options={generateReactSelectLibrary(field)}\n            styles={selectFieldTypeStyle}\n            css={fieldTypeStyle(field.readOnly)}>\n          </Select>\n          );\n      }\n\n    } else if (field.type === \"date\") {\n      return (\n        <div css={[fieldTypeStyle(field.readOnly), dateTimeTypeStyle(field.readOnly)]}>\n          <KeyboardDateTimePicker {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            name={field.id}\n            format=\"yyyy/MM/dd HH:mm\"\n            disabled={field.readOnly}\n            dateFunsUtils={DateFnsUtils}\n            showError={showErrorOnBlur}\n          />\n        </div>\n      );\n    } else if (field.type === \"time\") {\n      return (\n        <div css={[fieldTypeStyle(field.readOnly), dateTimeTypeStyle(field.readOnly)]}>\n          <KeyboardTimePicker {...input}\n            onBlur={e => {blurWithSubmit(e, input)}}\n            name={field.id}\n            format=\"HH:mm\"\n            disabled={field.readOnly}\n            dateFunsUtils={DateFnsUtils}\n            showError={showErrorOnBlur}\n          />\n        </div>\n      );\n    } else if (field.type === \"text_long\") {\n      return (\n        <textarea {...input}\n          onBlur={e => {blurWithSubmit(e, input)}}\n          readOnly={field.readOnly}\n          css={[fieldTypeStyle(field.readOnly), inputFieldTypeStyle(field.readOnly)]}\n        />\n      );\n    } else {\n      return(\n        <input {...input}\n          onBlur={e => {blurWithSubmit(e, input)}}\n          readOnly={field.readOnly}\n          css={[fieldTypeStyle(field.readOnly), inputFieldTypeStyle(field.readOnly)]}\n        />\n      );\n    }\n  }\n\n  /**\n   * Renders a field in a catalog\n   * @param field\n   * @param catalogIndex\n   * @param fieldIndex\n   */\n  const renderField = (field: MetadataField, catalogIndex: number, fieldIndex: number) => {\n\n    /**\n     * Wrapper function for component generation.\n     * Handles the special case of KeyboardDateTimePicker/KeyboardTimePicker, which\n     * can't handle empty string as a value (which is what Opencast uses to\n     * represent no date/time)\n     */\n    const generateComponentWithModifiedInput = (field: MetadataField, input: FieldInputProps<any, HTMLElement>) => {\n      if ((field.type === \"date\" || field.type === \"time\") && input.value === \"\") {\n        var {value, ...other} = input\n        return generateComponent(field, other)\n      } else {\n        return generateComponent(field, input)\n      }\n    }\n\n    return (\n        <Field key={fieldIndex}\n                name={\"catalog\" + catalogIndex + \".\" + field.id}\n                validate={getValidators(field)}\n                type={field.type === \"boolean\" ? \"checkbox\" : undefined}  // react-final-form complains if we don't specify checkboxes here\n                >\n                {({ input, meta }) => (\n                  <div css={fieldStyle}>\n                    <label css={fieldLabelStyle} htmlFor={input.name}>{\n                      i18n.exists(`metadata.labels.${field.id}`) ?\n                      t(`metadata.labels.${field.id}`) : field.id\n                    }</label>\n\n                    {generateComponentWithModifiedInput(field, input)}\n                    {meta.error && meta.touched && <span css={validateStyle(true)}>{meta.error}</span>}\n                    {meta.modified && meta.valid && !meta.active && <span css={validateStyle(false)}><FontAwesomeIcon icon={faCheck}/></span>}\n                  </div>\n                )}\n        </Field>\n    );\n  }\n\n  /**\n   * Renders a single catalog (e.g. dublincore/episode) in the form\n   * @param catalog\n   * @param catalogIndex\n   * @param showFields array of which fields should be displayed. If empty, display all\n   */\n  const renderCatalog = (catalog: Catalog, catalogIndex: number, showFields: string[]) => {\n    return (\n      <div key={catalogIndex}>\n        <h2>\n          {i18n.exists(`metadata.${catalog.title.replaceAll(\".\", \"-\")}`) ?\n            t(`metadata.${catalog.title.replaceAll(\".\", \"-\")}`) : catalog.title\n          }\n        </h2>\n\n        {catalog.fields.map((field, i) => {\n          // Render fields based on given array (usually parsed from config settings)\n          if (showFields.length !== 0) {\n            // Lowercase include\n            if (showFields.filter((str) => str.toLowerCase().includes(field.id.toLowerCase())).length > 0) {\n              return renderField(field, catalogIndex, i)\n            } else {\n              return undefined\n            }\n          }\n          return renderField(field, catalogIndex, i)\n        })}\n\n      </div>\n    );\n  }\n\n  /**\n   * Main render function. Renders all catalogs in a single form\n   */\n  const render = () => {\n    return (\n        <Form\n          onSubmit={onSubmit}\n          subscription={{ submitting: true, pristine: true }} // Hopefully causes less rerenders\n          initialValues={getInitialValues(catalogs)}\n          render={({ handleSubmit, form, submitting, pristine, values}) => (\n            <form onSubmit={event => {\n              handleSubmit(event)\n              // Ugly fix for form not getting updated after submit. TODO: Find a better fix\n              form.reset()\n            }} css={metadataStyle}>\n\n              <div css={errorBoxStyle(getStatus === \"failed\")} role=\"alert\">\n                <span>A problem occurred during communication with Opencast.</span><br />\n                {getError ? \"Details: \" + getError : \"No error details are available.\"}<br />\n              </div>\n\n              {catalogs.map((catalog, i) => {\n                // Render catalog and its fields based on config settings\n                if (settings.metadata.showFields) {\n                  if (catalog.title in settings.metadata.showFields) {\n                    // If there are no fields for a given catalog, do not render it\n                    if (settings.metadata.showFields[catalog.title].length > 0) {\n                      return renderCatalog(catalog, i, settings.metadata.showFields[catalog.title])\n                    } else {\n                      return undefined\n                    }\n                  }\n                }\n                // If there are no settings for a given catalog, just render it completely\n                return renderCatalog(catalog, i, [])\n              })}\n\n{/* \n                <div css={{display: \"block\", wordWrap: \"normal\", whiteSpace: \"pre\"}}>{t(\"metadata.submit-helpertext\", { buttonName: t(\"metadata.submit-button\") })}</div>\n\n\n              <div title=\"buttons\" css={buttonContainerStyle}>\n                <button css={[basicButtonStyleCOPY, nagivationButtonStyle, submitButtonStyle]}\n                  type=\"submit\"\n                  title={t(\"metadata.submit-button-tooltip\")}\n                  aria-label={t(\"metadata.submit-button-tooltip\")}\n                  disabled={submitting || pristine}>\n                    {t(\"metadata.submit-button\")}\n                </button>\n                <button css={[basicButtonStyleCOPY, nagivationButtonStyle, submitButtonStyle]}\n                  type=\"button\"\n                  title={t(\"metadata.reset-button-tooltip\")}\n                  aria-label={t(\"metadata.reset-button-tooltip\")}\n                  onClick={() => {form.reset()}}\n                  disabled={submitting || pristine}>\n                    {t(\"metadata.reset-button\")}\n                </button>\n              </div> */}\n\n              <div css={errorBoxStyle(postStatus === \"failed\")} role=\"alert\">\n                <span>A problem occurred during communication with Opencast. <br />\n                      Changes could not be saved to Opencast.</span><br />\n                {postError ? \"Details: \" + postError : \"No error details are available.\"}<br />\n              </div>\n\n              {/* For debugging the forms current values*/}\n              {/* <FormSpy subscription={{ values: true }}>\n                {({ values }) => (\n                  <pre>{JSON.stringify(values, null, 2)}</pre>\n                )}\n              </FormSpy> */}\n            </form>\n          )}\n        />\n    );\n  }\n\n  return (\n    render()\n  );\n}\n\nexport default Metadata;\n","import React from \"react\";\nimport { css } from '@emotion/react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faTrash,\n  faTrashRestore,\n  faVolumeUp,\n  faVolumeDown,\n  faVolumeMute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactPlayer from 'react-player'\n\nimport { Track }  from '../types'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTracks, selectMasterAudio, setTrackEnabled, setMasterAudio } from '../redux/videoSlice'\nimport { basicButtonStyle, deactivatedButtonStyle } from '../cssStyles'\n\nimport { useTranslation } from 'react-i18next';\n\n\n/**\n * Creates the track selection.\n */\nconst TrackSelection: React.FC<{}> = () => {\n\n  // Generate list of tracks\n  const tracks: Track[] = useSelector(selectTracks);\n  const enabledCount = tracks.filter(t => t.video_stream.enabled).length;\n  const trackItems: JSX.Element[] = tracks.map((track: Track) =>\n    <TrackItem key={ track.id } track={ track } enabledCount={ enabledCount } />\n  );\n\n  return (\n    <div>\n      { trackItems }\n      <Description />\n    </div>\n  );\n}\n\n\nconst Description: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const description: string = t('trackSelection.description',\n    'Select or deselect which tracks and audio streams are used for processing '\n    + 'and publication.');\n\n  const descriptionStyle = css({\n    display: 'flex',\n    alignItems: 'center',\n    margin: '20px',\n    backgroundColor: '#eee',\n  });\n\n  return (\n    <div css={ descriptionStyle }>\n      <FontAwesomeIcon css={{margin: '20px'}} icon={faInfoCircle} size=\"2x\" />\n      { description }\n    </div>\n  );\n}\n\n\nconst TrackItem: React.FC<{track: Track, enabledCount: number}> = ({track, enabledCount}) => {\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const masterAudio: string | null = useSelector(selectMasterAudio);\n  const header = track.flavor.type + ' '\n    + (track.video_stream.enabled ? ''\n       :  `(${t('trackSelection.trackInactive', 'inactive')})`);\n\n  const trackItemStyle = css({\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '20px',\n    paddingBottom: '10px',\n    backgroundColor: '#eee',\n    verticalAlign: 'middle',\n  });\n\n  const playerStyle = css({\n    display: 'inline-block',\n    width: '80%',\n    maxHeight: '200px',\n    margin: '10px',\n  });\n\n  const headerStyle = css({\n    display: 'inline-block',\n    width: '100%',\n    fontWeight: 'bold',\n    padding: '5px 25px',\n    borderBottom: '1px solid white',\n    textTransform: 'capitalize',\n    fintSize: 'larger',\n  });\n\n  // Configure if tracks can be deactivated.\n  // We do not permit deactivating the last remaining track\n  const deleteEnabled = enabledCount > 1 || !track.video_stream.enabled;\n  const deleteText = track.video_stream.enabled\n    ? t('trackSelection.deleteTrackText', 'Delete Track')\n    : t('trackSelection.restoreTrackText', 'Restore Track');\n  const deleteTooltip = deleteEnabled ? (track.video_stream.enabled\n    ? t('trackSelection.deleteTrackTooltip', 'Do not encode and publish this track.')\n    : t('trackSelection.deleteTrackTooltip', 'Encode and publish this track.'))\n    : t('trackSelection.cannotDeleteTrackTooltip', 'Cannot remove this track from publication.');\n  const deleteIcon = track.video_stream.enabled ? faTrash : faTrashRestore\n  const trackEnabledChange = () => {\n    dispatch(setTrackEnabled({\n      id: track.id,\n      enabled: !track.video_stream.enabled,\n    }))\n  }\n\n  // What audio state is this track in:\n  // 2 -> this track is master audio track\n  // 1 -> another track is a master audio track\n  // 0 -> there is no master audio track\n  const audioState = masterAudio ? (masterAudio === track.id ? 2 : 1) : 0;\n  const audioText = [\n    t('trackSelection.masterAudioText', 'Main Audio'),\n    t('trackSelection.inactiveAudioText', 'Deactivated'),\n    t('trackSelection.individualAudioText', 'Individual Audio')][audioState];\n  const audioTooltip = [\n    t('trackSelection.masterAudioTooltip', 'Use this audio stream for all published tracks, overwriting existing ones if necessary'),\n    t('trackSelection.inactiveAudioTooltip', 'This audio stream is deactivated and will be overwritten.'),\n    t('trackSelection.individualAudioTooltip', 'Use individual audio streams on all tracks')][audioState];\n  const audioIcon = [faVolumeUp,faVolumeMute, faVolumeDown][audioState];\n  const audioActive = audioState !== 1 && track.video_stream.enabled;\n  const audioStreamChange = () => {\n    dispatch(setMasterAudio({\n      id: track.id,\n    }))\n  }\n\n  return (\n    <div css={ trackItemStyle }>\n      <div css={ headerStyle }>{ header }</div>\n      <div css={{ width: '95%', opacity: track.video_stream.enabled ? '1' : '0.5' }}>\n        <ReactPlayer css={ playerStyle } url={ track.uri } width=\"90%\" />\n      </div>\n      <SelectButton\n        text={ deleteText }\n        tooltip={ deleteTooltip }\n        handler={ trackEnabledChange }\n        icon={ deleteIcon }\n        active={ deleteEnabled }/>\n      <SelectButton\n        text={ audioText }\n        tooltip={ audioTooltip }\n        handler={ audioStreamChange }\n        icon={ audioIcon }\n        active={ audioActive } />\n    </div>\n  );\n}\n\nconst SelectButton : React.FC<{handler: any, text: string, icon: any, tooltip: string, active: boolean}> = ({handler, text, icon, tooltip, active}) => {\n  const buttonStyle = [\n    active ? basicButtonStyle : deactivatedButtonStyle,\n    {\n      margin: '10px',\n      padding: '16px',\n      boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n      width: '25%'\n    }];\n  const clickHandler = () => {\n    active && handler();\n  };\n  const keyHandler = (event: React.KeyboardEvent) => {\n    if (active && (event.key === \" \" || event.key === \"Enter\")) {\n      handler();\n    }\n  };\n  return (\n    <div css={ buttonStyle }\n         tabIndex={ 0 }\n         role=\"button\"\n         title={ tooltip }\n         aria-label={ tooltip }\n         onClick={ clickHandler }\n         onKeyDown={ keyHandler } >\n      <FontAwesomeIcon icon={ icon } size=\"1x\" />\n      <div>{ text }</div>\n    </div>\n  );\n}\n\nexport default TrackSelection;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSave, faFileExport, faTimesCircle, IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch } from 'react-redux';\nimport { setState, setPageNumber, finish } from '../redux/finishSlice'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Displays a menu for selecting what should be done with the current changes\n */\nconst FinishMenu : React.FC<{}> = () => {\n\n  const finishMenuStyle = css({\n    display: 'flex',\n    flexDirection: 'row' as const,\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={finishMenuStyle}>\n        <FinishMenuButton iconName={faSave} stateName=\"Save changes\"/>\n        <FinishMenuButton iconName={faFileExport} stateName=\"Start processing\"/>\n        <FinishMenuButton iconName={faTimesCircle} stateName=\"Discard changes\"/>\n    </div>\n  );\n}\n\n/**\n * Buttons for the finish menu\n */\nconst FinishMenuButton: React.FC<{iconName: IconDefinition, stateName: finish[\"value\"]}> = ({iconName, stateName}) => {\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const finish = () => {\n    dispatch(setState(stateName));\n    dispatch(setPageNumber(1))\n  }\n\n  const finishMenuButtonStyle = css({\n    width: '250px',\n    height: '220px',\n    flexDirection: 'column' as const,\n    fontSize: \"x-large\",\n    ...(flexGapReplacementStyle(30, false)),\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  });\n\n  var buttonString;\n  switch(stateName) {\n    case \"Save changes\":\n      buttonString = t(\"finishMenu.save-button\");\n      break;\n    case \"Start processing\":\n      buttonString = t(\"finishMenu.start-button\");\n      break;\n    case \"Discard changes\":\n      buttonString = t(\"finishMenu.discard-button\");\n      break;\n    default: \n      buttonString = \"Could not load String value\";\n      break;\n  }\n\n  return (\n    <div css={[basicButtonStyle, finishMenuButtonStyle]}\n    role=\"button\" tabIndex={0}\n      onClick={ finish }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        finish()\n      }}}>\n      <FontAwesomeIcon  icon={iconName} size=\"2x\"/>\n      <div>{buttonString}</div>\n    </div>\n  );\n};\n\n\n\n\n\nexport default FinishMenu;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\nimport { Segment, PostEditArgument, httpRequestState } from '../types'\nimport { settings } from '../config'\n\nconst initialState: httpRequestState = {\n  status: 'idle',\n  error: undefined,\n}\n\nexport const postVideoInformation = createAsyncThunk('video/postVideoInformation', async (argument: PostEditArgument) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`,\n    { segments: convertSegments(argument.segments), tracks: argument.tracks }\n  )\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes\n * TODO: Create a wrapper for this and workflowPostAndProcessSlice\n */\nconst workflowPostSlice = createSlice({\n  name: 'workflowPostState',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      postVideoInformation.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      postVideoInformation.fulfilled, (state, action) => {\n        state.status = 'success'\n    })\n    builder.addCase(\n      postVideoInformation.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\ninterface segmentAPI {\n  start: number,\n  end: number,\n  deleted: boolean,\n  selected: boolean,\n}\n\n// Convert a segment from how it is stored in redux into\n// a segment that can be send to Opencast\nexport const convertSegments = (segments: Segment[]) => {\n  let newSegments: segmentAPI[] = []\n\n  segments.forEach(segment => {\n    newSegments.push({\n      start: segment.start,\n      end: segment.end,\n      deleted: segment.deleted,\n      selected: false,\n    })\n  });\n\n  return newSegments\n}\n\nexport const selectStatus = (state: { workflowPostState: { status: httpRequestState[\"status\"] } }) =>\n  state.workflowPostState.status\nexport const selectError = (state: { workflowPostAndProcessState: { error: httpRequestState[\"error\"] } }) =>\n  state.workflowPostAndProcessState.error\n\nexport default workflowPostSlice.reducer\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, ariaLive, errorBoxStyle,\n  nagivationButtonStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSpinner, faCheck, faExclamationCircle, faChevronLeft, faSave,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFinishState } from '../redux/finishSlice'\nimport { selectSegments, selectTracks, setHasChanges as videoSetHasChanges } from '../redux/videoSlice'\nimport { postVideoInformation, selectStatus, selectError } from '../redux/workflowPostSlice'\n\nimport { PageButton } from './Finish'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { postMetadata, selectPostError, selectPostStatus, setHasChanges as metadataSetHasChanges } from \"../redux/metadataSlice\";\n\n/**\n * Shown if the user wishes to save.\n * Informs the user about saving and displays a save button\n */\nconst Save : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const finishState = useSelector(selectFinishState)\n\n  const postWorkflowStatus = useSelector(selectStatus);\n  const postError = useSelector(selectError)\n  const postMetadataStatus = useSelector(selectPostStatus);\n  const postMetadataError = useSelector(selectPostError);\n\n  const saveStyle = css({\n    height: '100%',\n    display: finishState !== \"Save changes\" ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={saveStyle} title={t(\"save.saveArea-tooltip\")}>\n      <h1>{t(\"save.headline-text\")}</h1>\n      <span css={{maxWidth: '500px'}}>\n        {t(\"save.info-text\")}\n      </span>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={0} label={t(\"various.goBack-button\")} iconName={faChevronLeft}/>\n        <SaveButton />\n      </div>\n      <div css={errorBoxStyle(postWorkflowStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postError ? t(\"various.error-details-text\", {errorMessage: postError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n      <div css={errorBoxStyle(postMetadataStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postMetadataError ? t(\"various.error-details-text\", {errorMessage: postMetadataError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sends a post request to save current changes\n */\nexport const SaveButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const segments = useSelector(selectSegments)\n  const tracks = useSelector(selectTracks)\n  const workflowStatus = useSelector(selectStatus);\n  const metadataStatus = useSelector(selectPostStatus);\n\n  // Update based on current fetching status\n  let icon = faSave\n  let spin = false\n  let tooltip = t(\"save.confirmButton-default-tooltip\")\n  if (workflowStatus === 'failed' || metadataStatus === 'failed'){\n    icon = faExclamationCircle\n    spin = false\n    tooltip = t(\"save.confirmButton-failed-tooltip\")\n  } else if (workflowStatus === 'success' && metadataStatus === 'success') {\n    icon = faCheck\n    spin = false\n    tooltip = t(\"save.confirmButton-success-tooltip\")\n  } else if (workflowStatus === 'loading' || metadataStatus === 'loading')  {\n    icon = faSpinner\n    spin = true\n    tooltip = t(\"save.confirmButton-attempting-tooltip\")\n  }\n\n  const ariaSaveUpdate = () => {\n    if(workflowStatus === 'success') {\n      return t(\"save.success-tooltip-aria\")\n    }\n  }\n\n  const save = () => {\n    dispatch(postMetadata())\n    dispatch(postVideoInformation({\n      segments: segments,\n      tracks: tracks,\n    }))\n  }\n\n  // Let users leave the page without warning after a successful save\n  useEffect(() => {\n    if (workflowStatus === 'success' && metadataStatus === 'success') {\n      dispatch(videoSetHasChanges(false))\n      dispatch(metadataSetHasChanges(false))\n    }\n  }, [dispatch, metadataStatus, workflowStatus])\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={tooltip}\n      role=\"button\" tabIndex={0}\n      onClick={ save }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        save()\n      }}}>\n      <FontAwesomeIcon icon={icon} spin={spin} size=\"1x\"/>\n      <span>{t(\"save.confirm-button\")}</span>\n      <div css={ariaLive} aria-live=\"polite\" aria-atomic=\"true\">{ariaSaveUpdate()}</div>\n    </div>\n  );\n}\n\n\nexport default Save;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface end {\n  end: boolean,\n  value: 'success' | 'discarded',\n}\n\nconst initialState: end = {\n  end: false,\n  value: 'success',\n}\n\n/**\n * Slice for the main menu state\n */\nexport const endSlice = createSlice({\n  name: 'endState',\n  initialState,\n  reducers: {\n    setEnd: (state, action: PayloadAction<{hasEnded: end[\"end\"], value: end[\"value\"]}>) => {\n      state.end = action.payload.hasEnded;\n      state.value = action.payload.value;\n    },\n  }\n})\n\nexport const { setEnd, } = endSlice.actions\n\n// Export Selectors\nexport const selectIsEnd = (state: { endState: { end: end[\"end\"] }; }) => state.endState.end\nexport const selectEndState = (state: { endState: { value: end[\"value\"] }; }) => state.endState.value\n\nexport default endSlice.reducer\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, nagivationButtonStyle, flexGapReplacementStyle} from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft, faTimesCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFinishState } from '../redux/finishSlice'\nimport { setEnd } from '../redux/endSlice'\n\nimport { PageButton } from './Finish'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * Shown if the user wishes to abort.\n * Informs the user about aborting and displays abort button.\n */\nconst Discard : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const finishState = useSelector(selectFinishState)\n\n  const cancelStyle = css({\n    display: finishState !== \"Discard changes\" ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={cancelStyle}>\n      <h1>{t(\"discard.headline-text\")}</h1>\n      <span>\n        {t(\"discard.info-text\")}\n      </span>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={0} label={t(\"various.goBack-button\")} iconName={faChevronLeft} />\n        <DiscardButton />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sets the app into an aborted state\n */\nconst DiscardButton : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const discard = () => {\n    dispatch(setEnd({hasEnded: true, value: 'discarded'}))\n  }\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={t(\"discard.confirm-tooltip\")}\n      role=\"button\" tabIndex={0}\n      onClick={ discard }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        discard()\n      }}}>\n      <FontAwesomeIcon  icon={faTimesCircle} size=\"1x\"/>\n      <span>{t(\"discard.confirm-button\")}</span>\n    </div>\n  );\n}\n\nexport default Discard;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { client } from '../util/client'\nimport { PostAndProcessEditArgument, httpRequestState } from '../types'\n\nimport { convertSegments } from './workflowPostSlice'\nimport { settings } from '../config'\n\nconst initialState: httpRequestState = {\n  status: 'idle',\n  error: undefined,\n}\n\nexport const postVideoInformationWithWorkflow = createAsyncThunk('video/postVideoInformationWithWorkflow', async (argument: PostAndProcessEditArgument) => {\n  if (!settings.mediaPackageId) {\n    throw new Error(\"Missing mediaPackageId\")\n  }\n\n  const response = await client.post(`${settings.opencast.url}/editor/${settings.mediaPackageId}/edit.json`,\n    { segments: convertSegments(argument.segments), tracks: argument.tracks, workflows: argument.workflow }\n  )\n  return response\n})\n\n/**\n * Slice for managing a post request for saving current changes and starting a workflow\n * TODO: Create a wrapper for this and workflowPostAndProcessSlice\n */\nconst workflowPostAndProcessSlice = createSlice({\n  name: 'workflowPostAndProcessState',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      postVideoInformationWithWorkflow.pending, (state, action) => {\n        state.status = 'loading'\n    })\n    builder.addCase(\n      postVideoInformationWithWorkflow.fulfilled, (state, action) => {\n        state.status = 'success'\n    })\n    builder.addCase(\n      postVideoInformationWithWorkflow.rejected, (state, action) => {\n        state.status = 'failed'\n        state.error = action.error.message\n    })\n  }\n})\n\nexport const selectStatus = (state: { workflowPostAndProcessState: { status: httpRequestState[\"status\"] } }) =>\n  state.workflowPostAndProcessState.status\nexport const selectError = (state: { workflowPostAndProcessState: { error: httpRequestState[\"error\"] } }) =>\n  state.workflowPostAndProcessState.error\n\n\nexport default workflowPostAndProcessSlice.reducer\n","import React, { useEffect } from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, errorBoxStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTools} from \"@fortawesome/free-solid-svg-icons\";\nimport { faSpinner, faCheck, faExclamationCircle, faChevronLeft, faFileExport } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWorkflows, selectSelectedWorkflowIndex, selectSegments, selectTracks, setHasChanges as videoSetHasChanges } from '../redux/videoSlice'\nimport { postVideoInformationWithWorkflow, selectStatus, selectError } from '../redux/workflowPostAndProcessSlice'\n\nimport { PageButton } from './Finish'\nimport { setEnd } from \"../redux/endSlice\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { postMetadata, selectPostError, selectPostStatus, setHasChanges as metadataSetHasChanges } from \"../redux/metadataSlice\";\n\n/**\n * Will eventually display settings based on the selected workflow index\n */\nconst WorkflowConfiguration : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const postAndProcessWorkflowStatus = useSelector(selectStatus);\n  const postAndProcessError = useSelector(selectError)\n  const postMetadataStatus = useSelector(selectPostStatus);\n  const postMetadataError = useSelector(selectPostError);\n\n  const workflowConfigurationStyle = css({\n    display: 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(30, false)),\n  })\n\n  return (\n    <div css={workflowConfigurationStyle} title={t(\"workflowConfig.area-tooltip\")}>\n      <h2>{t(\"workflowConfig.headline-text\")}</h2>\n      <FontAwesomeIcon icon={faTools} size=\"10x\" />\n      Placeholder\n      <div>{t(\"workflowConfig.satisfied-text\")}</div>\n      <div css={backOrContinueStyle}>\n        <PageButton pageNumber={1} label={t(\"various.goBack-button\")} iconName={faChevronLeft}/>\n        <SaveAndProcessButton text={t(\"workflowConfig.confirm-button\")}/>\n      </div>\n      <div css={errorBoxStyle(postAndProcessWorkflowStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postAndProcessError ? t(\"various.error-details-text\", {errorMessage: postAndProcessError}) : t(\"various.error-noDetails-text\")}<br/>\n      </div>\n      <div css={errorBoxStyle(postMetadataStatus === \"failed\")} role=\"alert\">\n        <span>{t(\"various.error-text\")}</span><br />\n        {postMetadataError ? t(\"various.error-details-text\", {errorMessage: postMetadataError}) : t(\"various.error-noDetails-text\")}<br />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Button that sends a post request to save current changes\n * and starts the selected workflow\n */\nexport const SaveAndProcessButton: React.FC<{text: string}> = ({text}) => {\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const workflows = useSelector(selectWorkflows)\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n  const segments = useSelector(selectSegments)\n  const tracks = useSelector(selectTracks)\n  const workflowStatus = useSelector(selectStatus);\n  const metadataStatus = useSelector(selectPostStatus);\n\n  // Let users leave the page without warning after a successful save\n  useEffect(() => {\n    if (workflowStatus === 'success' && metadataStatus === 'success') {\n      dispatch(videoSetHasChanges(false))\n      dispatch(metadataSetHasChanges(false))\n    }\n  }, [dispatch, metadataStatus, workflowStatus])\n\n  const saveAndProcess = () => {\n    dispatch(postMetadata())\n    dispatch(postVideoInformationWithWorkflow({\n      segments: segments,\n      tracks: tracks,\n      workflow: [{id: workflows[selectedWorkflowIndex].id}],\n    }))\n  }\n\n  // Update based on current fetching status\n  let icon = faFileExport\n  let spin = false\n  if (workflowStatus === 'failed' || metadataStatus === 'failed') {\n    icon = faExclamationCircle\n    spin = false\n  } else if (workflowStatus === 'success' && metadataStatus === 'success') {\n    icon = faCheck\n    spin = false\n    dispatch(setEnd({hasEnded: true, value: 'success'}))\n  } else if (workflowStatus === 'loading' || metadataStatus === 'loading') {\n    icon = faSpinner\n    spin = true\n\n  }\n\n  const saveButtonStyle = css({\n    padding: '16px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n  })\n\n  return (\n    <div css={[basicButtonStyle, saveButtonStyle]} title={\"Start processing button\"}\n      role=\"button\" tabIndex={0}\n      onClick={ saveAndProcess }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        saveAndProcess()\n      }}}>\n      <FontAwesomeIcon  icon={icon} spin={spin} size=\"1x\"/>\n      <span>{text}</span>\n    </div>\n  );\n}\n\nexport default WorkflowConfiguration;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle, backOrContinueStyle, errorBoxStyle, flexGapReplacementStyle } from '../cssStyles'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWorkflows, selectSelectedWorkflowIndex, setSelectedWorkflowIndex } from '../redux/videoSlice'\nimport { selectFinishState, selectPageNumber } from '../redux/finishSlice'\n\nimport { PageButton } from './Finish'\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { SaveAndProcessButton } from \"./WorkflowConfiguration\";\nimport { selectStatus, selectError } from \"../redux/workflowPostAndProcessSlice\";\nimport { selectStatus as saveSelectStatus, selectError as saveSelectError } from \"../redux/workflowPostSlice\";\nimport { httpRequestState, Workflow } from \"../types\";\nimport { SaveButton } from \"./Save\";\nimport { EmotionJSX } from \"@emotion/react/types/jsx-namespace\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { Trans } from \"react-i18next\";\n\n/**\n * Allows the user to select a workflow\n */\nconst WorkflowSelection : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Initialite redux states\n  const workflows = useSelector(selectWorkflows)\n  const finishState = useSelector(selectFinishState)\n  const pageNumber = useSelector(selectPageNumber)\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n\n  const postAndProcessWorkflowStatus = useSelector(selectStatus);\n  const postAndProcessError = useSelector(selectError)\n  const saveStatus = useSelector(saveSelectStatus);\n  const saveError = useSelector(saveSelectError)\n\n  // Create workflow selection\n  const workflowButtons = () => {\n    return (\n      workflows.map( (workflow: Workflow, index: number) => (\n        <WorkflowButton key={index} stateName={workflow.name} workflowIndex={index}/>\n      ))\n    );\n  }\n\n  // Gets the description from the currently selected workflow\n  const workflowDescription = () => {\n    if (workflows.length > selectedWorkflowIndex && workflows[selectedWorkflowIndex].description) {\n      return (\n        workflows[selectedWorkflowIndex].description\n      );\n    } else {\n      return (' ');\n    }\n  }\n\n  const workflowSelectionStyle = css({\n    padding: '20px',\n    display: (finishState === \"Start processing\" && pageNumber === 1) ? 'flex' : 'none',\n    flexDirection: 'column' as const,\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(50, false)),\n  })\n\n  const workflowSelectionSelectionStyle = css({\n    display: 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'left',\n    ...(flexGapReplacementStyle(20, false)),\n    flexWrap: 'wrap',\n    maxHeight: '50vh',\n  })\n\n  // Layout template\n  const render = (topTitle: string, topText: {} | null | undefined, hasWorkflowButtons: boolean,\n    bottomText: {} | null | undefined, nextButton: EmotionJSX.Element, errorStatus: httpRequestState[\"status\"],\n    errorMessage: httpRequestState[\"error\"]) => {\n    return (\n      <div css={workflowSelectionStyle}>\n        <h2>{topTitle}</h2>\n        {topText}\n        { hasWorkflowButtons &&\n          <div css={workflowSelectionSelectionStyle} title=\"Workflow Selection Area\">\n            {workflowButtons()}\n          </div>\n        }\n        {bottomText}\n        <div css={backOrContinueStyle}>\n          <PageButton pageNumber={0} label={t(\"workflowSelection.back-button\")} iconName={faChevronLeft}/>\n          {/* <PageButton pageNumber={2} label=\"Continue\" iconName={faChevronRight}/> */}\n          {nextButton}\n        </div>\n        <div css={errorBoxStyle(errorStatus === \"failed\")} role=\"alert\">\n          <span>{t(\"various.error-text\")}</span><br />\n          {errorMessage ? t(\"various.error-details-text\", {errorMessage: postAndProcessError}) : t(\"various.error-noDetails-text\")}<br/>\n        </div>\n      </div>\n    );\n  }\n\n  // Fills the layout template with values based on how many workflows are available\n  const renderSelection = () => {\n    if (workflows.length <= 0) {\n      return(\n        render(\n          t(\"workflowSelection.saveAndProcess-text\"),\n          <Trans i18nKey=\"workflowSelection.noWorkflow-text\">\n            A problem occurred, there are no workflows to process your changes with.<br />\n            Please save your changes and contact an Opencast Administrator.\n          </Trans>,\n          false,\n          \"\",\n          <SaveButton />,\n          saveStatus,\n          saveError\n        )\n      );\n    } else if (workflows.length === 1) {\n      return (\n        render(\n          t(\"workflowSelection.saveAndProcess-text\"),\n          <Trans i18nKey=\"workflowSelection.oneWorkflow-text\">\n            The video will be cut and processed with the workflow \"{{workflow: workflows[0].name}}\".<br/>\n            This will take some time.\n          </Trans>,\n          false,\n          \"\",\n          <SaveAndProcessButton text={t(\"workflowSelection.startProcessing-button\")}/>,\n          postAndProcessWorkflowStatus,\n          postAndProcessError\n        )\n      );\n    } else {\n      return (\n        render(\n          t(\"workflowSelection.selectWF-text\"),\n          <div>\n            {t(\"workflowSelection.manyWorkflows-text\")}\n          </div>,\n          true,\n          <div><i>{workflowDescription()}</i></div>,\n          <SaveAndProcessButton text= {t(\"workflowSelection.startProcessing-button\")}/>,\n          postAndProcessWorkflowStatus,\n          postAndProcessError\n        )\n      )\n    }\n  }\n\n  return (\n    renderSelection()\n  );\n}\n\n/**\n * Clicking this button sets the associated workflow as selected\n * @param param0\n */\nconst WorkflowButton: React.FC<{stateName: string, workflowIndex: number}> = ({stateName, workflowIndex}) => {\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const selectedWorkflowIndex = useSelector(selectSelectedWorkflowIndex)\n\n  const selectWorkflowIndex = () => {\n    dispatch(setSelectedWorkflowIndex(workflowIndex))\n  }\n\n  const workflowButtonStyle = css({\n    backgroundColor: workflowIndex !== selectedWorkflowIndex ? 'snow' : '#DDD',\n    padding: '16px',\n  });\n\n  return (\n    <div css={[basicButtonStyle,workflowButtonStyle]} title={t(\"workflowSelection.selectWF-button\")}\n      role=\"button\" tabIndex={0}\n      aria-label={t(\"workflowSelection.selectWF-button\", {stateName})}\n      onClick={ selectWorkflowIndex }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        selectWorkflowIndex()\n      }}}>\n      <span>{stateName}</span>\n    </div>\n  );\n}\n\nexport default WorkflowSelection;\n","import React from \"react\";\n\nimport FinishMenu from \"./FinishMenu\";\nimport Save from \"./Save\"\nimport Discard from \"./Discard\"\nimport WorkflowSelection from \"./WorkflowSelection\";\nimport WorkflowConfiguration from \"./WorkflowConfiguration\";\n\nimport { css } from '@emotion/react'\nimport { basicButtonStyle } from '../cssStyles'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  IconDefinition\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPageNumber, setPageNumber } from '../redux/finishSlice'\n\n/**\n * Displays a menu for selecting what should be done with the current changes\n */\nconst Finish : React.FC<{}> = () => {\n\n  const pageNumber = useSelector(selectPageNumber)\n\n  const pageZeroStyle = css({\n    display: pageNumber !== 0 ? 'none' :'block',\n  })\n\n  const pageOneStyle = css({\n    display: pageNumber !== 1 ? 'none' :'block',\n  })\n\n  const pageTwoStyle = css({\n    display: pageNumber !== 2 ? 'none' :'block',\n  })\n\n  return (\n    <div>\n      <div css={pageZeroStyle} >\n        <FinishMenu />\n      </div>\n      <div css={pageOneStyle} >\n        <Save />\n        <WorkflowSelection />\n        <Discard />\n      </div>\n      <div css={pageTwoStyle} >\n        <WorkflowConfiguration />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Takes you to a different page\n */\nexport const PageButton : React.FC<{pageNumber: number, label: string, iconName: IconDefinition}> = ({pageNumber, label, iconName}) => {\n\n  // Initialize redux variables\n  const dispatch = useDispatch()\n\n  const onPageChange = () => {\n    dispatch(setPageNumber(pageNumber))\n  }\n\n  const pageButtonStyle = css({\n    width: '200px',\n    padding: '16px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.3)',\n    justifyContent: 'space-around'\n  })\n\n  return (\n    <div css={[basicButtonStyle, pageButtonStyle]}\n      role=\"button\" tabIndex={0}\n      onClick={ onPageChange }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        onPageChange()\n      }}}>\n      <FontAwesomeIcon icon={iconName} size=\"1x\" />\n      <span>{label}</span>\n    </div>\n  );\n}\n\n\nexport default Finish;\n","import React from \"react\";\n\nimport Video from './Video';\nimport Timeline from './Timeline';\nimport CuttingActions from './CuttingActions';\nimport Metadata from './Metadata';\nimport TrackSelection from './TrackSelection';\nimport Finish from \"./Finish\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTools} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { css } from '@emotion/react'\n\nimport { useSelector } from 'react-redux'\nimport { selectMainMenuState } from '../redux/mainMenuSlice'\n\nimport { MainMenuStateNames } from '../types'\nimport { flexGapReplacementStyle } from \"../cssStyles\";\n\nimport { useBeforeunload } from 'react-beforeunload';\nimport { hasChanges as videoHasChanges } from \"../redux/videoSlice\";\nimport { hasChanges as metadataHasChanges} from \"../redux/metadataSlice\";\n\n/**\n * A container for the main functionality\n * Shows different components depending on the state off the app\n */\nconst MainContent: React.FC<{}> = () => {\n\n  const mainMenuState = useSelector(selectMainMenuState)\n  const videoChanged = useSelector(videoHasChanges)\n  const metadataChanged = useSelector(metadataHasChanges)\n\n  // Display warning when leaving the page if there are unsaved changes\n  useBeforeunload((event: { preventDefault: () => void; }) => {\n    if (videoChanged || metadataChanged) {\n      event.preventDefault();\n    }\n  });\n\n  // Return display 'flex' if state is currently active\n  // also keep track if any state was activated\n  var stateActive = false;\n  let displayState = (state: MainMenuStateNames): object => {\n    if (mainMenuState === state) {\n      stateActive = true;\n      return { display: \"flex\" };\n    }\n    return { display: 'none' };\n  }\n\n  const cuttingStyle = css({\n    ...displayState(MainMenuStateNames.cutting),\n    flexDirection: 'column' as const,\n    justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    paddingLeft: '20px',\n  })\n\n  const metadataStyle = css({\n    ...displayState(MainMenuStateNames.metadata),\n    // flexDirection: 'column' as const,\n    // justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    paddingLeft: '20px',\n  })\n\n  const trackSelectStyle = css({\n    ...displayState(MainMenuStateNames.trackSelection),\n    flexDirection: 'column' as const,\n    alignContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    height: '100%',\n  })\n\n  const finishStyle = css({\n    ...displayState(MainMenuStateNames.finish),\n    flexDirection: 'column' as const,\n    justifyContent: 'space-around',\n    ...(flexGapReplacementStyle(20, false)),\n    paddingRight: '20px',\n    height: '100%',\n  })\n\n  const defaultStyle = css({\n    display: stateActive ? 'none' : 'flex',\n    flexDirection: 'column' as const,\n    alignItems: 'center',\n    padding: '20px',\n    ...(flexGapReplacementStyle(20, false)),\n  })\n\n  return (\n     <main css={{width: '100%'}} role=\"main\">\n      <div css={cuttingStyle}>\n          <Video />\n          <CuttingActions />\n          <Timeline />\n      </div>\n      <div css={metadataStyle}>\n          <Metadata />\n      </div>\n      <div css={trackSelectStyle}>\n          <TrackSelection />\n      </div>\n      <div css={finishStyle}>\n        <Finish />\n      </div>\n      <div css={defaultStyle}>\n        <FontAwesomeIcon icon={faTools} size=\"10x\" />\n        Placeholder\n      </div>\n     </main>\n  );\n};\n\nexport default MainContent;\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector } from 'react-redux';\nimport { selectDuration } from '../redux/videoSlice'\nimport { selectEndState } from '../redux/endSlice'\nimport { basicButtonStyle, flexGapReplacementStyle, nagivationButtonStyle } from \"../cssStyles\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the user is \"done\" with the editor\n * and should not be able to perfom any actions anymore\n */\nconst TheEnd : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const endState = useSelector(selectEndState)\n  const duration = useSelector(selectDuration)\n\n  const icon = () => {\n    if (endState === 'discarded') {\n      return faTimesCircle\n    } else {\n      return faCheckCircle\n    }\n  }\n\n  const text = () => {\n    if (endState === 'discarded') {\n      return t(\"theEnd.discarded-text\")\n    } else if (endState === 'success') {\n      return t(\"theEnd.info-text\", {duration: `${new Date((duration * 2)).toISOString().substr(11, 8)}`}\n      )\n    }\n  }\n\n  const theEndStyle = css({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(20, false)),\n  })\n\n  return (\n    <div css={theEndStyle} title=\"The End\">\n      <FontAwesomeIcon icon={icon()} size=\"10x\" />\n      <div>{text()}</div>\n      {(endState === 'discarded') && <StartOverButton />}\n    </div>\n  );\n}\n\n\nconst StartOverButton: React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const reloadPage = () => {\n    window.location.reload(true);\n  };\n\n  return (\n    <div css={[basicButtonStyle, nagivationButtonStyle]} title={t(\"theEnd.startOver-tooltip\")}\n      role=\"button\" tabIndex={0}\n      onClick={ reloadPage }\n      onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>) => { if (event.key === \" \" || event.key === \"Enter\") {\n        reloadPage()\n      }}}>\n      {/* <FontAwesomeIcon icon={icon} spin={spin} size=\"1x\"/> */}\n      <span>{t(\"theEnd.startOver-button\")}</span>\n    </div>\n  );\n}\n\nexport default TheEnd\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFrown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSelector } from 'react-redux';\nimport { selectErrorDetails, selectErrorMessage } from '../redux/errorSlice'\nimport { flexGapReplacementStyle } from \"../cssStyles\";\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the application has run into a critical error\n * from which it cannot recover.\n */\n const Error : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  // Init redux variables\n  const errorMessage = useSelector(selectErrorMessage)\n  const errorDetails = useSelector(selectErrorDetails)\n\n  const detailsStyle = css({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  })\n\n  const theEndStyle = css({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(flexGapReplacementStyle(10, false)),\n  })\n\n  return (\n    <div css={theEndStyle} >\n      <div>{t(\"error.generic-message\")}</div>\n      <FontAwesomeIcon icon={faFrown} size=\"10x\" />\n      <span>{errorMessage}</span><br />\n      <div css={detailsStyle}>\n        <span>{t(\"error.details\")}</span><br />\n        <span>{errorDetails ? errorDetails : t(\"various.error-noDetails-text\") }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Error\n","import React from \"react\";\n\nimport { css } from '@emotion/react'\n\nimport './../i18n/config';\nimport { useTranslation } from 'react-i18next';\n\n/**\n * This page is to be displayed when the application has run into a critical error\n * from which it cannot recover.\n */\n const Landing : React.FC<{}> = () => {\n\n  const { t } = useTranslation();\n\n  const landingStyle = css({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    a: {\n      color: '#007bff',\n      textDecoration: 'none',\n    },\n    li: {\n      margin: '5px',\n    },\n    code: {\n      userSelect: 'all',\n      color: '#e83e8c',\n    }\n  })\n\n  return (\n    <div css={landingStyle} >\n      <h1>{t(\"landing.main-heading\")}</h1>\n      <div>\n        <li>\n        {t(\"landing.contact-admin\")}\n        </li>\n        <li>\n          {t(\"landing.start-editing-1\")}\n          <code> ?=mediaPackageId=[media-package-id]</code>\n          {t(\"landing.start-editing-2\")}\n        </li>\n        <li>\n          {t(\"landing.link-to-documentation\")}\n          <a href=\"https://docs.opencast.org/stable/admin/\">docs.opencast.org</a>\n        </li>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing\n","import React from \"react\";\n\nimport MainMenu from './MainMenu';\nimport MainContent from './MainContent';\nimport TheEnd from './TheEnd';\nimport Error from './Error';\nimport Landing from \"./Landing\";\n\nimport { useSelector } from 'react-redux';\nimport { selectIsEnd } from '../redux/endSlice'\nimport { selectIsError } from \"../redux/errorSlice\";\nimport { settings } from '../config';\n\n\nconst Body: React.FC<{}> = () => {\n\n  const isEnd = useSelector(selectIsEnd)\n  const isError = useSelector(selectIsError)\n\n  // If we're in a special state, display a special page\n  // Otherwise display the normal page\n  const main = () => {\n    if (!settings.mediaPackageId) {\n      return (\n        <Landing />\n      )\n    } else if (isEnd) {\n      return (\n        <TheEnd />\n      );\n    } else if (isError) {\n      return (\n        <Error />\n      );\n    } else {\n      return (\n        <div css={bodyStyle}>\n          <MainMenu />\n          <MainContent />\n        </div>\n      );\n    }\n  }\n\n  const bodyStyle = {\n    display: 'flex',\n    flexDirection: 'row' as const,\n    height: '100%',\n  };\n\n  return (\n    <React.Fragment>\n      {main()}\n    </React.Fragment>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport Body from './main/Body';\nimport { GlobalStyle } from './cssStyles'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport mainMenuStateReducer from './mainMenuSlice'\nimport finishStateReducer from './finishSlice'\nimport videoReducer from './videoSlice'\nimport workflowPostReducer from './workflowPostSlice'\nimport workflowPostAndProcessReducer from './workflowPostAndProcessSlice'\nimport endReducer from './endSlice'\nimport metadataReducer from './metadataSlice'\nimport errorReducer from './errorSlice'\n\nexport default configureStore({\n  reducer: {\n    mainMenuState: mainMenuStateReducer,\n    finishState: finishStateReducer,\n    videoState: videoReducer,\n    workflowPostState: workflowPostReducer,\n    workflowPostAndProcessState: workflowPostAndProcessReducer,\n    endState: endReducer,\n    metadataState: metadataReducer,\n    errorState: errorReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nimport { init } from './config'\nimport { sleep } from './util/utilityFunctions'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\n\n// Load config here\n// Load the rest of the application and try to fetch the settings file from the\n// server.\nconst initialize = Promise.race([\n  init(),\n  sleep(300),\n]);\n\nconst render = (body: JSX.Element) => {\n  ReactDOM.render(body, document.getElementById('root'));\n};\n\ninitialize.then(\n\n  () => {\n    ReactDOM.render(\n      <React.StrictMode>\n          <Provider store={store}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <App />\n            </MuiPickersUtilsProvider>\n          </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  },\n\n  // This error case is vey unlikely to occur.\n  e => render(<p>\n    {`Fatal error while loading app: ${e.message}`}\n    <br />\n    This might be caused by a incorrect configuration by the system administrator.\n  </p>),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}